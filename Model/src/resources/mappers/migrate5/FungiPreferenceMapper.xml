<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apidb.apicommon.model.maintain.users5.mapper.FungiPreferenceMapper">

  <!-- delete old fungi preferences -->
  <delete id="deletePreferences">
    DELETE FROM userlogins4.preferences 
    WHERE project_id = 'FungiDB' AND user_id IN (SELECT user_id FROM userlogins4.users WHERE is_guest = 0)
  </delete>
  
  <!-- insert Fungi preferences for all new/existing users, but make sure don't copy duplicate users -->
  <insert id="insertExistingPreferences">
    INSERT INTO userlogins4.preferences (user_id, project_id, preference_name, preference_value)
    SELECT p.user_id, p.project_id, p.preference_name, p.preference_value
    FROM userlogins3.preferences p, userlogins3.users u
    WHERE p.user_id = u.user_id AND u.is_guest = 0 AND p.project_id = 'FungiDB'
      AND u.user_id NOT IN (SELECT old_id FROM user_map)
  </insert>
  
  <!-- insert all preferences for new users, except Fungi ones, since they are copies by the previous sql -->
  <insert id="insertNewPreferences">
    INSERT INTO userlogins4.preferences (user_id, project_id, preference_name, preference_value)
    SELECT p.user_id, p.project_id, p.preference_name, p.preference_value
    FROM userlogins3.preferences p, temp_users u
    WHERE p.user_id = u.user_id AND p.project_id != 'FungiDB'
  </insert>
  
  <!-- insert Fungi preferences for users with changed id -->
  <insert id="insertDuplicatePreferences">
    INSERT INTO userlogins4.preferences (user_id, project_id, preference_name, preference_value)
    SELECT u.new_id AS user_id, p.project_id, p.preference_name, p.preference_value
    FROM userlogins3.preferences p, user_map u
    WHERE p.user_id = u.old_id AND p.project_id = 'FungiDB'
  </insert>
  
</mapper>