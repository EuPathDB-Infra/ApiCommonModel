#!/usr/bin/perl

use strict;
use lib $ENV{GUS_HOME} . "/lib/perl";
use JSON;
use ApiCommonModel::Model::JBrowseUtil;

# NOTE:  if nameOrId is an organismAbbrev it MUST be the public_abbrev because this service is in a public facing URL


my ($nameOrId, $projectName, $isPbrowse, $tracks, $appVersion) = @ARGV;

my $jbrowseUtil = ApiCommonModel::Model::JBrowseUtil->new({projectName => $projectName});
my $dbh = $jbrowseUtil->getDbh();   

my $sql;

if(lc($nameOrId) eq 'default') {
  $sql = 'select * from (select o.abbrev, o.name_for_filenames from apidbtuning.organismattributes oa, apidb.organism o where oa.public_abbrev = o.public_abbrev order by oa.COMMUNITYCOUNT desc) where rownum = 1';
}
# elsif(lc($tracks) eq 'bysequenceid') {
#   $sql = "select o.abbrev, o.NAME_FOR_FILENAMES
#           from apidbtuning.genomicseqattributes sa, apidb.organism o
#           where sa.source_id = '$nameOrId'
#           and sa.taxon_id = o.taxon_id";
# }
else {
 $sql = "select abbrev, NAME_FOR_FILENAMES
           from apidb.organism  
           where public_abbrev = '$nameOrId' OR NAME_FOR_FILENAMES = '$nameOrId'";
}

my $sh = $dbh->prepare($sql);
$sh->execute();

my ($organismAbbrev, $organismNameForFiles, $organismCount);

while(my ($oa, $onf)= $sh->fetchrow_array()) {
  $organismAbbrev = $oa;
  $organismNameForFiles = $onf;
  $organismCount++;
}
$sh->finish();

$dbh->disconnect();

die "Could not determine unique organism for: $nameOrId" unless($organismCount == 1);

my (@include, $refSeqs, $namesUrl);

if(lc($isPbrowse) eq 'true') {
  $refSeqs = "/a/service/jbrowse/store?data=${organismNameForFiles}/fasta/AnnotatedProteins.fasta.fai";
  $namesUrl = "/a/service/jbrowse/aanames/${organismAbbrev}?appVersion=1";

  
  if($tracks eq 'proteinPropertyTracks') {
    @include = ("/a/jbrowse/tracks/${organismAbbrev}/aa/tracks.conf",
                "/a/jbrowse/jbrowse_embed.conf");

  }
  elsif($tracks eq 'proteomicsTracks') {
    @include = ("/a/jbrowse/tracks/${organismAbbrev}/aa/tracks.conf",
                "/a/service/jbrowse/organismSpecificPbrowse/${organismAbbrev}?appVersion=1",
                "/a/jbrowse/jbrowse_embed.conf");

  }
  else {
    @include = ("/a/jbrowse/tracks/${organismAbbrev}/aa/tracks.conf",
                "/a/service/jbrowse/organismSpecificPbrowse/${organismAbbrev}?appVersion=1"
        );
  }

}
else {
  $refSeqs = "/a/service/jbrowse/store?data=${organismNameForFiles}/fasta/genome.fasta.fai";
  $namesUrl = "/a/service/jbrowse/names/${organismAbbrev}?appVersion=1";

  if($tracks eq 'geneAnnotationTracks') {
    @include = ("/a/jbrowse/tracks/${organismAbbrev}/tracks.conf",
                "/a/service/jbrowse/rnaseqJunctions/${organismAbbrev}?appVersion=1",
                "/a/service/jbrowse/organismSpecific/${organismAbbrev}?appVersion=1",
                "/a/jbrowse/jbrowse_embed.conf"
        );
  }
  elsif($tracks eq 'syntenyTracks' || $tracks eq 'geneticVariationTracks') {
    @include = ("/a/jbrowse/tracks/${organismAbbrev}/tracks.conf",
                "/a/service/jbrowse/organismSpecific/${organismAbbrev}?appVersion=1",
                "/a/jbrowse/jbrowse_embed.conf"
        );
  }
  elsif($tracks eq 'rnaseqTracks') {
    @include = ("/a/jbrowse/tracks/${organismAbbrev}/tracks.conf",
                "/a/service/jbrowse/rnaseq/${organismAbbrev}?appVersion=1",
                "/a/jbrowse/jbrowse_embed.conf"
        );
  }
  elsif($tracks eq 'blatAlignmentTracks') {
    @include = ("/a/jbrowse/tracks/${organismAbbrev}/tracks.conf",
                "/a/service/jbrowse/organismSpecific/${organismAbbrev}?appVersion=1",
                "/a/jbrowse/jbrowse_embed.conf"
        );
  }
  elsif($tracks eq 'phenotypeTracks') {
  @include = ("/a/jbrowse/tracks/${organismAbbrev}/tracks.conf",
              "/a/service/jbrowse/dnaseq/${organismAbbrev}?appVersion=1",
              "/a/service/jbrowse/rnaseq/${organismAbbrev}?appVersion=1",
              "/a/service/jbrowse/chipseq/${organismAbbrev}?appVersion=1",
              "/a/service/jbrowse/rnaseqJunctions/${organismAbbrev}?appVersion=1",
              "/a/service/jbrowse/organismSpecific/${organismAbbrev}?appVersion=1",
              "/a/jbrowse/jbrowse_embed.conf"
      );
  }
  else {
  @include = ("/a/jbrowse/tracks/${organismAbbrev}/tracks.conf",
              "/a/service/jbrowse/dnaseq/${organismAbbrev}?appVersion=1",
              "/a/service/jbrowse/rnaseq/${organismAbbrev}?appVersion=1",
              "/a/service/jbrowse/chipseq/${organismAbbrev}?appVersion=1",
              "/a/service/jbrowse/rnaseqJunctions/${organismAbbrev}?appVersion=1",
              "/a/service/jbrowse/organismSpecific/${organismAbbrev}?appVersion=1",
              "/a/service/users/current/user-datasets-jbrowse/${organismNameForFiles}"
      );
  }
}

my $result = {"names" => {"type" => "REST", 
                          "url" => $namesUrl
              }, 
              "tracks" => [], 
              "refSeqs" => $refSeqs,
              "include" => \@include,
};

print encode_json($result);

