#!/usr/bin/perl

use strict;

use lib $ENV{GUS_HOME} . "/lib/perl";

use JSON;
use DBI;
use DBD::Oracle;

use WDK::Model::ModelConfig;

use Data::Dumper;

# TODO: remove gusHome from command line arg
my ($gusHome, $projectId, $organismAbbrev, $type) = @ARGV;

my $modelConfig = new WDK::Model::ModelConfig($projectId);

my $dbh = DBI->connect( $modelConfig->getAppDbDbiDsn(),
                        $modelConfig->getAppDbLogin(),
                        $modelConfig->getAppDbPassword()
    )
    || die "unable to open db handle to ", $modelConfig->getAppDbDbiDsn();


my $sql;

if($type eq 'genomic') {
  $sql = "select s.source_id, s.length
from apidbtuning.genomicseqattributes s, apidb.organism o
where s.TAXON_ID = o.taxon_id
and s.is_top_level = 1
and o.PUBLIC_ABBREV = '$organismAbbrev'
order by s.chromosome asc, s.length desc
";
}
elsif($type eq 'protein') {
  $sql = "select p.source_id, p.protein_length
from apidbtuning.proteinattributes p, apidbtuning.genomicseqattributes s, apidb.organism o
where p.na_sequence_id = s.na_sequence_id
and s.TAXON_ID = o.taxon_id
and s.is_top_level = 1
and o.PUBLIC_ABBREV = '$organismAbbrev'
";
}
else {
  die "only genomic or protein are valid types";
}



my $sh = $dbh->prepare($sql);
$sh->execute();

my $result = [];
while(my ($sourceId, $length) = $sh->fetchrow_array()) {

  my $hash =  {
    "name" => $sourceId,
    "start" => 0 + 0,
    "end" => $length + 0,
    "length" => $length + 0
  };

  push @$result, $hash;
}

$dbh->disconnect();

print encode_json($result);


