#!/usr/bin/perl

use strict;

use XML::Simple;

use File::Basename;

use DBI;
use DBD::Oracle;

use Getopt::Long qw(GetOptions);

use Data::Dumper;

use ApiCommonData::Load::TuningConfig::Utils;


my ($help, $propfile,$project, $instance, $schema, $password, $suffix, $subversionDir, $debug);
my $tabFileLocation = $ENV{PROJECT_HOME} . "/ApiCommonShared/Model/data/MSTermTab.txt";


GetOptions("propfile=s" => \$propfile,
           "instance=s" => \$instance,
           "schema=s" => \$schema,
           "password=s" => \$password,
           "suffix=s" => \$suffix,
           "subversionDir=s" => \$subversionDir,
           "debug!" => \$debug,
           "help|h" => \$help,
           "project=s" => \$project,
           "password=s" => \$password,
          );

($instance, $schema, $password) = ApiCommonData::Load::TuningConfig::Utils::getDbLoginInfo($instance, $propfile, $schema, $password);

&run();

sub run{

  
  unless(-e $tabFileLocation) {
    &usage("ERROR:  tabFile $tabFileLocation is not in this directory");
  }
  
  if($help) {
    &usage();
  }

  my $failures = 0;

my $dbh = ApiCommonData::Load::TuningConfig::Utils::getDbHandle($instance, $schema, $password);

  $dbh->{RaiseError} = 1;
  $dbh->{AutoCommit} = 0;
  
  # parse Tab file
  
  my @massSpecRows = ();
  open (FILE, $tabFileLocation);
  while (<FILE>) {
    chomp;
    (my $project_id, my $experiment, my $organism, my $sample, my $ext_db_name, my $sort_order ) = split("\t");
    if ($ext_db_name) {
      push(@massSpecRows, {project_id => $project_id,
                           experiment => $experiment,
                           organism => $organism,
                           sample => $sample,
                           ext_db_name => $ext_db_name,
                           sort_order => $sort_order
                          }
          );
    }
  }

    close (FILE);
  createEmptyTable($dbh,$suffix);
  foreach my $row(@massSpecRows) {
    my $project_id  = $row->{project_id};
    my $experiment  = $row->{experiment};
    my $organism    = $row->{organism};
    my $sample      = $row->{sample};
    my $ext_db_name = $row->{ext_db_name};
    if ($row->{sort_order}) { 
      my $sort_order = $row->{sort_order};
    }
    if ($sort_order) {
      my $insertStatement = "INSERT INTO MassSpecTerms$suffix(project_id,
                            experiment,organism,sample,ext_db_name,sort_order) VALUES ('$project_id','$experiment','$organism','$sample','$ext_db_name',$sort_order)";
    }
    else {
      my $insertStatement = "INSERT INTO MassSpecTerms$suffix(project_id,
                            experiment,organism,sample,ext_db_name) VALUES ('$project_id','$experiment','$organism','$sample','$ext_db_name')";
    }
    my $insertRow = $dbh->prepare($insertStatement);
    $insertRow->execute();
  }
  $dbh->commit();
  $dbh->disconnect();


sub createEmptyTable {
     my ($dbh, $suffix) = @_;

    $dbh->do(<<SQL) or die "creating table";
     create table MassSpecTerms$suffix (
	project_id   varchar2(9),
        experiment   varchar2(255),
	organism     varchar2(255),
	sample       varchar2(129),
	ext_db_name  varchar2(81),
        sort_order   number
  ) nologging
SQL
$dbh->{PrintError} = 0;

}

  sub usage {
    my $e = shift;
    if($e) {
      print STDERR $e . "\n";
    }
    print STDERR "usage:  createMassSpecTerms.pl --databaseInstance <instance> --userName <userName> --password <password>";
    exit;
  }


1;
