#!/usr/bin/perl

use strict;
use Switch;
use FileHandle;

usage() unless scalar(@ARGV) == 1;

my ($stepsToRunnablesFile) = @ARGV;

open(O, ">$stepsToRunnablesFile") || die "Can't open file '$stepsToRunnablesFile for writing\n";

# mclOutToGroupsFile/step.log:Thu May 24 22:18:25 2012    running:  orthomclMclToGroups
# mclOutToGroupsFile/step.log:Thu May 24 22:18:25 2012    running:  ga ApiCommonData::Load::Plugin::InsertWhatever
my $step;
my @runnablesForStep;

# get very first runnable
while (<>) {
  next unless /^(\S+)\/step.log.*running:  (ga )?(\S+)/;
  $step = $1;
  my $runnable = $3;
  push(@runnablesForStep, $runnable);
  break;
}

while (<>) {
  next unless /^(\S+)\/step.log.*running:  (ga )?(\S+)/;
  if ($1 ne $step) {
    print O "$step\n";
    foreach my $runnable (@runnablesForStep) { print O "  $runnable\n"; }
    @runnablesForStep = ();
  }
  $step = $1;
  my $runnable = $3;
  push(@runnablesForStep, $runnable);
}




####################################################################

sub usage {

die "
Find the commands and plugins a workflow runs, in the order run.

Usage:  gus4FindOrderedRunnables steps_to_runnables_output_file

Takes on stdin the output of this command, run from the workflow steps/ dir:
grep \"running:\" `ls -rt */step.log`

";

}
