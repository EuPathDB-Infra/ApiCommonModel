#!/usr/bin/perl

use strict;
use lib $ENV{GUS_HOME} . "/lib/perl";
use JSON;
use ApiCommonModel::Model::JBrowseUtil;
use ApiCommonModel::Model::JBrowseTrackConfig::SingleCoverageTrackConfig;
use ApiCommonModel::Model::JBrowseTrackConfig::AlignmentsTrackConfig;
use ApiCommonModel::Model::JBrowseTrackConfig::DatasetConfig;
use Data::Dumper;
use URI::Escape;


my ($organismAbbrev, $projectName, $applicationType) = @ARGV;

my $jbrowseUtil = ApiCommonModel::Model::JBrowseUtil->new({projectName => $projectName, organismAbbrev => $organismAbbrev, fileName => "_dnaSeqCache.json"});

my $buildProps = $jbrowseUtil->getBuildProperties();
# we're done if we can get from cache file

#if($jbrowseUtil->printFromCache()) {
#TODO add this back
  #  exit 0;
#}

#open(CACHE, "> " . $jbrowseUtil->getCacheFile()) or die "Cannot open file " . $jbrowseUtil->getCacheFile() . " for writing: $!";

my $publicAbbrevForFiles = $buildProps->{organism}->{organismNameForFiles};
my $result = {"tracks" => [] };

my %datasets;

my $dnaSeqDatasets = $buildProps->{dnaseq} ? $buildProps->{dnaseq} : {};

foreach my $dsName (keys %$dnaSeqDatasets) {
  my $dataset = $dnaSeqDatasets->{$dsName};

  my $summary = $dataset->{summary};

  my $hasCnvData = $dataset->{hasCNVData};
  my $shortAttribution = $dataset->{shortAttribution};
  my $studyDisplayName = $dataset->{datasetDisplayName};

  my $category = $dataset->{category};
  my $subCategory = $dataset->{subCategory};

  my ($study) = $dsName =~ /${organismAbbrev}_HTS_SNP_(.+)_RSRC$/;


  foreach my $sampleName(keys %{$dataset->{sampleNames}}) {

    my $baseUrl = "/a/service/jbrowse/store?data=";

    my $bamUrl = $baseUrl . uri_escape_utf8("$publicAbbrevForFiles/bam/$study/$sampleName/result.bam");

    my $copyNumberDataset = "${organismAbbrev}_copyNumberVariations_${study}_RSRC";
    my $cnvBWUrl = $baseUrl . uri_escape_utf8("$publicAbbrevForFiles/bigwig/$copyNumberDataset/$sampleName.bw");

    my $bigwigUrl = $baseUrl . uri_escape_utf8("$publicAbbrevForFiles/bigwig/${study}/${sampleName}/result.bw");

    my $displayName = "$sampleName Coverage and Alignments";
    my $label = "$sampleName Coverage and Alignments";

    my $datasetConfig = ApiCommonModel::Model::JBrowseTrackConfig::DatasetConfig->new({ dataset_name => $dsName,
                                                                                        study_display_name => $studyDisplayName,
                                                                                        category => $category,
                                                                                        subcategory => $subCategory,
                                                                                        attribution => $shortAttribution,
                                                                                        summary => $summary,
                                                                                        application_type => $applicationType,
                                                                                        organism_abbrev => $organismAbbrev,
                                                                                      });


    my $alignment = ApiCommonModel::Model::JBrowseTrackConfig::AlignmentsTrackConfig->new({dataset_config => $datasetConfig,
                                                                                           url_template => $bamUrl,
                                                                                           display_name => $displayName,
                                                                                           application_type => $applicationType,
                                                                                           label => $label,
                                                                                           bw_url_template => $bigwigUrl
                                                                                          })->getConfigurationObject();

    $displayName = "$sampleName Coverage normalised to chromosome copy number (ploidy)";
    $label = "${dsName}_$sampleName";

    my $cnvCoverage = ApiCommonModel::Model::JBrowseTrackConfig::SingleCoverageTrackConfig->new({ dataset_config => $datasetConfig,
                                                                                                  url_template => $cnvBWUrl,
                                                                                                  display_name => $displayName,
                                                                                                  application_type => $applicationType,
                                                                                                  label => $label,
                                                                                                  cov_max_score_default => 5,
                                                                                                  scale => 'linear',
                                                                                                })->getConfigurationObject();


    push @{$result->{tracks}}, $alignment;
    push @{$result->{tracks}}, $cnvCoverage if(lc $hasCnvData eq "true");;
  }

}

print encode_json($result);
print CACHE encode_json($result);
close CACHE;

1;

