#!/usr/bin/perl

use strict;
use lib $ENV{GUS_HOME} . "/lib/perl";
use JSON;
use ApiCommonModel::Model::JBrowseUtil;
use Data::Dumper;

# TODO: remove gusHome from command line arg
my ($gusHome, $organismAbbrev, $study, $projectName, $hasCNVData) = @ARGV;

my $jbrowseUtil = ApiCommonModel::Model::JBrowseUtil->new({projectName => $projectName});
my $dbh = $jbrowseUtil->getDbh();   

my $sql = "select ds.name, o.name_for_filenames, dsp.display_name
from apidb.datasource ds 
   , apidb.organism o
   , (select display_name from apidbtuning.datasetpresenter where name = '${organismAbbrev}_HTS_SNP_${study}_RSRC') dsp
where ds.name like '%${study}%'
and o.taxon_id = ds.taxon_id
and ds.name like '%HTS_SNPSample_RSRC'";

my $sh = $dbh->prepare($sql);
$sh->execute();

my $result = {"tracks" => [] };

while(my ($sampleDataset, $publicAbbrev, $studyDisplayName) = $sh->fetchrow_array()) {

  my ($sampleName) = $sampleDataset =~ /${study}_(.+)_HTS_SNPSample_RSRC$/;


  my $bamUrl = "/a/service/jbrowse/store?data=$publicAbbrev/bam/$study/$sampleName/result.bam"; 

  my $copyNumberDataset = "${organismAbbrev}_copyNumberVariations_${study}_RSRC";
  my $cnvBWUrl = "/a/service/jbrowse/store?data=$publicAbbrev/bigwig/$copyNumberDataset/$sampleName.bw"; 

  my $alignment = {storeClass => "JBrowse/Store/SeqFeature/BAM",
                   urlTemplate => $bamUrl,
                   key => "$sampleName Alignments",
                   label => "$sampleName Alignments",
                   type => "JBrowse/View/Track/Alignments2",
                   category => "Genetic Variation",
                   metadata => {
                     subcategory => 'DNASeq',
                     dataset => $studyDisplayName,
                     track => 'Read Alignments',
                   },
  };

  my $coverage = {storeClass => "JBrowse/Store/SeqFeature/BAM",
                  urlTemplate => $bamUrl,
                  key => "$sampleName Coverage",
                  label => "$sampleName Coverage",
                  chunkSizeLimit => 20000000,
                  maxFeatureScreenDensity => 1,
                  type => "JBrowse/View/Track/FeatureCoverage",
                  category => "Genetic Variation",
                  metadata => {
                    subcategory => 'DNASeq',
                    dataset => $studyDisplayName,
                    track => 'Coverage',
                  },

  };


  
  my $cnvCoverage = {storeClass => "JBrowse/Store/SeqFeature/BigWig",
                     urlTemplate => $cnvBWUrl,
                     key => "$sampleName Coverage normalised to chromosome copy number (ploidy)",
                     label => "$sampleName Coverage normalised to chromosome copy number (ploidy)",
                     type => "JBrowse/View/Track/Wiggle/XYPlot",
                     category => "Genetic Variation",
                     min_score => 0,
                     autoscale => "local",
                     style => {
                       "pos_color"         => "black",
                       "clip_marker_color" =>  "red",
                     },
                     metadata => {
                       subcategory => 'DNASeq',
                       dataset => $studyDisplayName,
                       track => 'Coverage (ploidy Normalized)',
                     },
  };

  push @{$result->{tracks}}, $alignment;
  push @{$result->{tracks}}, $coverage;
  push @{$result->{tracks}}, $cnvCoverage if(lc $hasCNVData eq "true");;
}

print encode_json($result);

$dbh->disconnect();

1;

