#!/usr/bin/perl

use strict;
use lib $ENV{GUS_HOME} . "/lib/perl";
use Data::Dumper;

use DBI;
use DBD::Oracle;
use WDK::Model::ModelConfig;

use JSON;
use URI::Escape;
use Tie::IxHash;

my ($organismAbbrev, $projectName, $buildNumber) = @ARGV;

#sub getDbh {$_[0]->{_dbh}}

    my $modelConfig = new WDK::Model::ModelConfig($projectName);
    my $dbh = DBI->connect( $modelConfig->getAppDbDbiDsn(),
                            $modelConfig->getAppDbLogin(),
                            $modelConfig->getAppDbPassword()
        )
        || die "unable to open db handle to ", $modelConfig->getAppDbDbiDsn();

	my $metadataFile = $ENV{GUS_HOME} . "/lib/jbrowse/auto_generated/$organismAbbrev/metadata.conf";
#print "metadataFile = $metadataFile \n";

my $result = {"jBrowseMetadata" => [] };	

&addCentromereCount($dbh, $result, $organismAbbrev);
&addScaffoldCount($dbh, $result, $organismAbbrev);
&addUnifiedSnpCount($dbh, $result, $organismAbbrev); 
&addChipChipTracks($dbh, $result, $organismAbbrev); 
&addUnifiedMassSpecCount($dbh, $result, $organismAbbrev);
&addTRNACount($dbh, $result);
&addCnvArray($dbh, $result);


#print Dumper $result;
print $organismAbbrev."::centromereCount=".$result->{jBrowseMetadata}[0]{centromereCount}."\n";
print $organismAbbrev."::scaffoldCount=".$result->{jBrowseMetadata}[1]{scaffoldCount}."\n";
print $organismAbbrev."::unifiedSnpCount=".$result->{jBrowseMetadata}[2]{unifiedSnpCount}."\n";
print $organismAbbrev."::unifiedMassSpecCount=".$result->{jBrowseMetadata}[4]{unifiedMassSpecCount}."\n";
print $organismAbbrev."::tRNACount=".$result->{jBrowseMetadata}[5]{tRNACount}."\n\n";

my $chipChipVarsArrayRef = $result->{jBrowseMetadata}[3]{chipChipVars};

#print Dumper @chipChipVarsArray;

foreach my $key (@{$chipChipVarsArrayRef}) {
    print $organismAbbrev."::dataset=".$key->{dataset}."\n";
    print $organismAbbrev."::study=".$key->{study}."\n";
    print $organismAbbrev."::panName=".$key->{panName}."\n";
    print $organismAbbrev."::panId=".$key->{panId}."\n\n";
}




sub addCentromereCount {
  my ($dbh, $result, $organismAbbrev) = @_;
  my $sql = "select count(*) from apidbtuning.organismattributes where hasCentromere = 1 and  internal_abbrev = '${organismAbbrev}'";

  my $sh = $dbh->prepare($sql);
  $sh->execute();
  my $count = $sh->fetchrow_array();
  my $centromereCount = {centromereCount => $count};
  push @{$result->{jBrowseMetadata}}, $centromereCount;
  $sh->finish(); 
  return $result;
}


sub addScaffoldCount {
  my ($dbh, $result, $organismAbbrev) = @_;
  my $sql = "select count(*) from dots.scaffoldgapfeature sgf, apidbtuning.genomicseqattributes sa, apidb.organism o where sa.na_sequence_id = sgf.na_sequence_id and o.taxon_id = sa.taxon_id and o.abbrev = '${organismAbbrev}'";

  my $sh = $dbh->prepare($sql);
  $sh->execute();
  my $count = $sh->fetchrow_array();
  my $scaffoldCount = {scaffoldCount => $count};
  push @{$result->{jBrowseMetadata}}, $scaffoldCount;  
  $sh->finish();
  return $result;
}


sub addUnifiedSnpCount {
  my ($dbh, $result, $organismAbbrev) = @_;

  my $sql = "select count(*) from apidbtuning.datasetpresenter where name like '${organismAbbrev}%HTS_SNP_%'";

  my $sh = $dbh->prepare($sql);
  $sh->execute();
  my $snpCount = $sh->fetchrow_array();
  my $unifiedSnpCount = {unifiedSnpCount => $snpCount};
  push @{$result->{jBrowseMetadata}}, $unifiedSnpCount; 
  $sh->finish();
  return $result;
}


sub addUnifiedMassSpecCount {
  my ($dbh, $result, $organismAbbrev) = @_;

  my $sql = "select count(*) from apidbtuning.datasetpresenter where name like '${organismAbbrev}%massSpec%'";
  my $sh = $dbh->prepare($sql);
  $sh->execute();
  my $count = $sh->fetchrow_array();
  my $unifiedMassSpecCount = {unifiedMassSpecCount => $count};
  push @{$result->{jBrowseMetadata}}, $unifiedMassSpecCount;
  $sh->finish();
  return $result;
}


sub addTRNACount {
  my ($dbh, $result) = @_;

  my $sql = "select count(*) from dots.rnafeature rnaf, sres.ontologyterm ot
where ot.ontology_term_id = rnaf.sequence_ontology_id
and ot.name ='tRNA'";

  my $sh = $dbh->prepare($sql);
  $sh->execute();
  my $count = $sh->fetchrow_array();
  my $tRNACount = {tRNACount => $count};
  push @{$result->{jBrowseMetadata}},  $tRNACount;
  $sh->finish();
  return $result;
}


sub addCnvArray {
  my ($dbh, $result) = @_;

  my $sql = "select distinct pan.name
from study.protocolappnode pan
   , study.study s
   , study.studylink sl
where pan.PROTOCOL_APP_NODE_ID = sl.PROTOCOL_APP_NODE_ID
and sl.study_id = s.study_id
and s.name like 'tcruCLBrenerEsmeraldo-like_cghArrayExper_Tarelton_GSE23576_CNV_RSRC%'
order by pan.name";

  my $sh = $dbh->prepare($sql);
  $sh->execute();

  while(my ($panName) = $sh->fetchrow_array()){
        my $cnvArray = {cnvArray => $panName,
        }; 
  push @{$result->{jBrowseMetadata}}, $cnvArray;
  }
  $sh->finish();
  return $result;
}


sub addChipChipTracks {
  my ($dbh, $result, $organismAbbrev) = @_;
  
 my $sql = "select d.name, s.name, pan.name, pan.protocol_app_node_id
from study.study s
   , SRES.EXTERNALDATABASERELEASE r
   , SRES.EXTERNALDATABASE d
   , study.protocolappnode pan
   , study.studylink sl
where d.name like '${organismAbbrev}%_chipChipExper_%'
and s.EXTERNAL_DATABASE_RELEASE_ID = r.EXTERNAL_DATABASE_RELEASE_ID
and r.EXTERNAL_DATABASE_ID = d.EXTERNAL_DATABASE_ID
and s.study_id = sl.study_id
and sl.protocol_app_node_id = pan.PROTOCOL_APP_NODE_ID
and s.investigation_id is null";
  
  my $sh = $dbh->prepare($sql);
  $sh->execute();
  my $chipChipVarsArray = {"chipChipVars" => [] };
  while(my ($dataset, $study, $panName, $panId) = $sh->fetchrow_array()){
      my $chipChipVars = {dataset => $dataset,
                          study => $study,
                          panName => $panName,
                          panId => $panId,
	};
  
  push @{$chipChipVarsArray->{chipChipVars}}, $chipChipVars;
  }
  push @{$result->{jBrowseMetadata}}, $chipChipVarsArray;
  $sh->finish();
  return $result;
}





