#!/usr/bin/perl

use strict;
use lib $ENV{GUS_HOME} . "/lib/perl";
use JSON;
use ApiCommonModel::Model::JBrowseUtil;
use Data::Dumper;

my ($projectName) = @ARGV;

my $jbrowseUtil = ApiCommonModel::Model::JBrowseUtil->new({projectName => $projectName});
my $dbh = $jbrowseUtil->getDbh();   

my $sql = "select distinct o.public_abbrev as organism_abbrev
     , o.name_for_filenames
     , o.strain_abbrev
     , o.IS_REFERENCE_STRAIN
     , tn.name
     , t.NCBI_TAX_ID as species_ncbi_tax_id
     , d.genome_source
     , d.annotation_source
     , d.ANNOTATION_VERSION
     , d.genome_version
from apidb.organism o
     , sres.taxonname tn
     , apidbtuning.taxonspecies ts
     , sres.taxon t
     , (select taxon_id, genome_source, genome_version, annotation_source, annotation_version
        from apidbtuning.datasethistory h, apidbtuning.datasetnametaxon nt
        where h.dataset_presenter_id = nt.dataset_presenter_id
        and nt.name like '%primary_genome_RSRC'
        and h.annotation_version is not null) d
where o.taxon_id = tn.taxon_id
and tn.name_class = 'scientific name'
and ts.species_taxon_id = t.taxon_id
and ts.taxon_id = o.taxon_id
and o.taxon_id = d.taxon_id
";


my $sh = $dbh->prepare($sql);
$sh->execute();


my $result = {"organisms" => [] };
while(my $hash = $sh->fetchrow_hashref()) {
  push @{$result->{organisms}}, $hash;
}

$dbh->disconnect();

print encode_json($result);

