<?xml version="1.0" encoding="UTF-8"?>
<tuningConfig>

  <tuningTable name="SangerProducts" alwaysUpdate="true">
    <ancillaryTable name="GenesWithChanges"/>

    <program commandLine="buildSangerProductsTT"/>
  </tuningTable>

  <tuningTable name="ReviewedComment" alwaysUpdate="true">
    <internalDependency name="SangerProducts"/>
    <sql>
      <![CDATA[
        create table ReviewedComment&1 nologging as
        select distinct geneid as gene,
                        to_number(regexp_replace(regexp_replace(annotation, '^.*eupathdb_uc=', ''), '[^0-9].*$', '')) as comment_id
        from GenesWithChanges
        where annotation like '%eupathdb_uc=%'
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create index revcom_ix&1 on ReviewedComment&1 (gene, comment_id)
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="AnnotationChange" alwaysUpdate="true">
    <internalDependency name="SangerProducts"/>
    <sql>
      <![CDATA[
        create table AnnotationChange&1 nologging as
        select gwc.geneid as gene, gwc.TranscriptId as mrnaid, gwc.annotation as change,
               cast(null as date) as change_date,
               sp.genename as name, sp.product
        from GenesWithChanges gwc,
             (select transcriptid, geneid, genename, product,
                     row_number() over (partition by transcriptid order by rankalternative) as ranking
              from SangerProducts) sp
        where gwc.transcriptid = sp.transcriptid(+)
          and sp.ranking = 1
          and gwc.geneid in (select id from apidbTuning.GeneId)
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create index annch_ix&1 on AnnotationChange&1 (gene)
      ]]>
    </sql>
  </tuningTable>

  <tuningTable name="ChangedGeneProduct" alwaysUpdate="true">
    <internalDependency name="AnnotationChange"/>
    <sql>
      <![CDATA[
        create table ChangedGeneProduct&1 nologging as
        select distinct *
        from (select ga.source_id as gene, 
                     case when ga.product != ac.product then ac.product else null end as product,
                     case when ga.name != ac.name then ac.name else null end as name
              from apidbTuning.GeneAttributes ga,
                   (select gene,
                           max(product) keep (dense_rank last order by change_date) as product,
                           max(name) keep (dense_rank last order by change_date) as name
                    from AnnotationChange ac
                    where gene is not null
                    group by gene) ac
              where ac.gene = ga.source_id)
        where product is not null or name is not null
      ]]>
    </sql>
    <sql>
      <![CDATA[
        create unique index cgp_ix&1 on ChangedGeneProduct&1 (gene)
      ]]>
    </sql>
  </tuningTable>

</tuningConfig>
