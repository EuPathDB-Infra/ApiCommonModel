<staticQueries>


  <query name="get_feature_by_name">
<![CDATA[
SELECT regexp_replace(trp.source_id, '-1$', '') ctg_name, 
       tas.aa_sequence_id feature_id, 
       tas.aa_sequence_id parent_id, 
       'protein' type, 
       'annotation' source, 
       trp.protein_id name, 
       1  startm, 
       tas.length end
FROM   dots.translatedaasequence tas,
       dots.translatedaafeature taf,
       dots.transcript trp
WHERE  tas.aa_sequence_id = taf.aa_sequence_id and
       taf.na_feature_id = trp.na_feature_id and
        ( trp.source_id = '$name' or trp.source_id like '$name-%')
]]>
  </query>


  <query name="new:Segment">
<![CDATA[
SELECT ta.aa_sequence_id srcfeature_id, 
       1 startm, 
       ta.protein_length end, 
       ta.source_id name, 
       'protein' type,
       'ID=' || ta.aa_sequence_id atts
FROM   ApidbTuning.TranscriptAttributes ta
WHERE  ta.source_id like '%$name%'
]]>
    </query>

    <query name="get_sequence">
<![CDATA[
SELECT tas.sequence 
FROM   DoTS.TranslatedAASequence tas 
WHERE  tas.aa_sequence_id = $srcfeature_id
]]>
    </query>



    <query name="domain:UnifiedPostTraslationalMod">
<![CDATA[
with peptides as (
select ms.sample
     , ms.sample_display
     , ms.experiment
     , ms.PEPTIDE_AA_FEATURE_ID
     , ms.peptide_sequence
     , ms.spectrum_count
     , listagg(ms.residue_location + 1, ',') within group (order by ms.residue_location) as residues
     , listagg(ms.aa_start_min + 1, ',') within group (order by ms.residue_location) as aa_start_mins
     , listagg(ms.modification_type, ',') within group (order by ms.residue_location) as modification_type
FROM  ApiDBTuning.MSModifiedPeptideSummary ms
group by experiment, sample, sample_display, peptide_aa_feature_id, peptide_sequence, ms.SPECTRUM_COUNT
)
select ms.aa_sequence_id  || '_' || ms.residue_location feature_id
     , 'domain' type
     , 'UnifiedPostTraslationalMod' source
     , ms.residue || ' (location ' || ms.residue_location || ')' name
     , '.' phase
     , '.' score
     , null as parent_id
     ,  ms.residue_location + 1 startm
     ,  ms.residue_location + 1 end
     ,  '.' strand
     , 'Experiments='  || listagg(peptides.experiment, '|') within group (order by peptides.peptide_aa_feature_id) || '$dlm' ||
      'MSCounts='     || listagg(peptides.spectrum_count, '|') within group (order by peptides.peptide_aa_feature_id) || '$dlm' ||
      'Samples='      || listagg(peptides.sample_display, '|') within group (order by peptides.peptide_aa_feature_id) || '$dlm' ||
      'Ontologys='    || listagg(peptides.modification_type, '|') within group (order by peptides.peptide_aa_feature_id) || '$dlm' ||
      'PepSeqs='      || listagg(peptides.peptide_sequence, '|') within group (order by peptides.peptide_aa_feature_id) || '$dlm' ||
      'PepAAFeatIds=' || listagg(peptides.peptide_aa_feature_id, '|') within group (order by peptides.peptide_aa_feature_id) || '$dlm' ||
      'AAStartMins=' || listagg(peptides.aa_start_mins, '|') within group (order by peptides.peptide_aa_feature_id) || '$dlm' ||
      'ModificationType=' || ms.modification_type || '$dlm' ||
      'ResidueLocs=' || listagg(peptides.residues, '|') within group (order by peptides.peptide_aa_feature_id) as atts
from ApiDBTuning.MSModifiedPeptideSummary ms, peptides 
where peptides.PEPTIDE_AA_FEATURE_ID = ms.peptide_aa_feature_id
    AND ms.aa_sequence_id = $srcfeature_id
    AND ms.aa_start_min <= $rend
    AND ms.aa_end_max >= $base_start
group by ms.residue_location, ms.residue, ms.aa_sequence_id, ms.modification_type
    ]]>
  </query>

    <query name="domain:MassSpecPeptidePhospho">
<![CDATA[
    SELECT
       mps.peptide_aa_feature_id as feature_id
    , 'domain' type
    , '$source' source
    , mps.source_id name
    , mps.aa_start_min startm
    , mps.aa_end_max end
    , 'Experiment='    || mps.experiment || '$dlm' ||
           'Count='    || mps.spectrum_count || '$dlm' ||
           'Sample='   || mps.sample_display_name || '$dlm' ||
           'Color='    || mps.html_color || '$dlm' ||
           'ModSite='  || nvl(listagg(msps.residue_location + 1, ';') within group (order by msps.residue_location), 'NA') || '$dlm' ||
           'Ontology=' || nvl(listagg(msps.modification_type,';') within group (order by  msps.residue_location), 'NA') || '$dlm' ||
           'Residue='  || nvl(listagg(msps.residue,';') within group (order by  msps.residue_location), 'NA') || '$dlm' ||
           'PepSeq='   || mps.peptide_sequence
     AS atts
    FROM apidbtuning.mspeptidesummary mps
       , apidbtuning.msmodifiedpeptidesummary msps
    WHERE mps.peptide_aa_feature_id = msps.peptide_aa_feature_id(+)
     AND mps.external_database_name $$edName$$
     AND mps.aa_sequence_id = $srcfeature_id
     AND mps.aa_start_min <= $rend 
     AND mps.aa_end_max >= $base_start 
    GROUP BY mps.aa_sequence_id, mps.source_id, mps.aa_start_min, mps.aa_end_max, mps.experiment, mps.spectrum_count
    ,mps.html_color, mps.peptide_sequence, mps.peptide_aa_feature_id, mps.sample, mps.sample_display_name
    ]]>
  </query>

    <query name="domain:MassSpecPeptide">
<![CDATA[
      SELECT msps.aa_sequence_id || '_' || msps.aa_start_min || '_' || msps.aa_end_max || '_' || msps.sample as feature_id,
       'domain' type,
       '$source' Source,
       msps.source_id Name,
       msps.aa_start_min Startm,
       Msps.aa_end_max End,
       'Count='       || msps.spectrum_count || '$dlm' ||
       'ExtDbName='   || msps.external_database_name || '$dlm' ||
       'Experiment='  || Msps.Experiment || '$dlm' ||
       'Sample='      || Msps.Sample_display_name || '$dlm' ||
       'Color='       || Msps.Html_Color || '$dlm' ||
       'PepSeq='      || msps.peptide_sequence atts
FROM  apidbtuning.mspeptidesummary msps
Where msps.aa_sequence_id =  $srcfeature_id
      and msps.external_database_name $$edName$$
    ]]>
   </query>

 <query name="lowcomplexity:seg">
<![CDATA[ 
SELECT lc.aa_feature_id feature_id,
       'lowcomplexity' type, 
       'seg' source, 
       'low complexity region' name, 
       '.' score, 
       lc.aa_sequence_id parent_id, 
       aal.start_min startm, 
       aal.end_max end, 
       '.' strand,
       'Sequence=' || substr(aas.sequence, aal.start_min, (aal.end_max-aal.start_min+1)) atts
FROM   dots.LowComplexityAAFeature lc,
       dots.AALocation aal, dots.AASequence aas
WHERE  lc.aa_feature_id = aal.aa_feature_id and
       lc.aa_sequence_id = aas.aa_sequence_id and
       aal.start_min <= $rend and 
       aal.end_max >= $base_start and 
       lc.aa_sequence_id = $srcfeature_id 
ORDER BY aal.start_min
]]>
    </query>

    <query name="get_2d_struc">
<![CDATA[
SELECT ssc.structure_type, ssc.call_confidence 
FROM   DoTS.SecondaryStructure ss,
       DoTS.SecondaryStructureCall ssc
WHERE  ss.aa_sequence_id = $srcfeature_id and
       ss.secondary_structure_id = ssc.secondary_structure_id
]]>
    </query>

    <query name="get_2d_struc_jbrowse">
<![CDATA[
with t as (SELECT ssc.call_confidence
FROM   DoTS.SecondaryStructure ss,
       DoTS.SecondaryStructureCall ssc
WHERE  ss.aa_sequence_id = $srcfeature_id
       and upper(ssc.structure_type) = '$$structureType$$'       
       and ss.secondary_structure_id = ssc.secondary_structure_id
        )
select SUBSTR(call_confidence, level, 1) score, level as startm, level as end
FROM t
CONNECT BY LEVEL <= LENGTH(call_confidence)
]]>
    </query>

    <query name="hydropathy_jbrowse">
<![CDATA[
select * from (
with t as (SELECT sequence
       from apidbtuning.proteinsequence ps
          , apidbtuning.proteinattributes pa
       WHERE  pa.aa_sequence_id = $srcfeature_id
        and ps.source_id = pa.source_id
        )
select decode(to_char(SUBSTR(sequence, level, 1)), 'I',4.5,
                                                   'V',4.2,
                                                   'L',3.8,
                                                   'F',2.8,
                                                   'C',2.5,
                                                   'M',1.9,
                                                   'A',1.8,
                                                   'G',-0.4,
                                                   'T',-0.7,
                                                   'W',-0.9,
                                                   'S',-0.8,
                                                   'Y',-1.3,
                                                   'P',-1.6,
                                                   'H',-3.2,
                                                   'E',-3.5,
                                                   'Q',-3.5,
                                                   'D',-3.5,
                                                   'N',-3.5,
                                                   'K',-3.9,
                                                   'R',-4.5, null) score, level as startm, level as end
FROM t
CONNECT BY LEVEL <= LENGTH(sequence)
) where score is not null
]]>
    </query>

    <query name="domain:ExportPred" includeProjects="PlasmoDB,UniDB">
<![CDATA[
SELECT DISTINCT df.aa_feature_id feature_id,
       'domain' type,
       'ExportPred' source,
       df.aa_feature_id name,
       '.' score,
       df.parent_id parent_id,
       min(aal.start_min) startm,
       max(aal.end_max) end,
       '.' strand,
       'DomainName=' || df.name || '$dlm' ||
       'ID=' || df.aa_feature_id atts
FROM   dots.domainfeature df,
       dots.aasequence aas,
       dots.aalocation aal
WHERE  df.algorithm_name = 'exportpred' and
       df.aa_sequence_id = $srcfeature_id and
       aas.aa_sequence_id = $srcfeature_id and
       df.aa_feature_id = aal.aa_feature_id
GROUP BY df.aa_feature_id, df.parent_id, df.name
]]>
    </query>
<!--
  <query name="domain:SignalP" excludeProjects="AmoebaDB,PiroplasmaDB,ToxoDB,VectorBase">
<![CDATA[
SELECT
       spf.aa_feature_id feature_id,
       'domain' type,
       'SignalP' source,
       spf.aa_feature_id name,
       '.' score,
       spf.parent_id parent_id,
       1 startm,
       aal.end_max end,
       '.' strand,
       'DScore=' || ((spf.means_score + spf.maxy_score) / 2) || '$dlm' ||
       'SignalProb=' || spf.signal_probability || '$dlm' ||
       'Algorithm=' || spf.algorithm_name || '$dlm' ||
       'ConclusionScore=' || (spf.maxy_conclusion +
               spf.maxc_conclusion +
               spf.maxs_conclusion +
               spf.means_conclusion) as  atts
FROM
       dots.signalpeptidefeature spf,
       dots.aalocation aal
WHERE
       spf.aa_sequence_id = $srcfeature_id and
       aal.aa_feature_id = spf.aa_feature_id and
       (( spf.maxy_conclusion +
         spf.maxc_conclusion +
         spf.maxs_conclusion +
         spf.means_conclusion
       ) >= 3
       OR ((spf.means_score + spf.maxy_score) / 2) >= 0.5
       OR spf.signal_probability >= 0.5
       OR spf.signal_probability is null
      ) 
]]>
    </query>

-->
  <query name="domain:SignalP">
<![CDATA[
SELECT
       spf.aa_feature_id feature_id,
       'domain' type,
       'SignalP' source,
       spf.aa_feature_id name,
       '.' score,
       spf.parent_id parent_id,
       1 startm,
       aal.end_max end,
       '.' strand,
       'Algorithm=' || spf.algorithm_name as  atts
FROM
       dots.signalpeptidefeature spf,
       dots.aalocation aal
WHERE
       spf.aa_sequence_id = $srcfeature_id and
       aal.aa_feature_id = spf.aa_feature_id
]]>
    </query>


    <query name="domain:TMHMM">
<![CDATA[
SELECT
      tmf.aa_feature_id || '_' ||aal.start_min feature_id,
       'domain' type,
       'TMHMM' source,
       tmf.aa_feature_id name,
       '.' score,
       tmf.parent_id parent_id,
       aal.start_min startm,
       aal.end_max end,
       '.' strand,
       'Topology=' || tmf.topology atts
FROM
       dots.transmembraneaafeature tmf,
       dots.aalocation aal
WHERE
       tmf.aa_sequence_id = $srcfeature_id and
       tmf.aa_feature_id = aal.aa_feature_id
]]>
    </query>

  <query name="domain:interpro">
<![CDATA[
SELECT df.aa_feature_id feature_id, 
       'domain' type, 
       'interpro' source, 
       dr.primary_identifier name, 
       df.score score, 
       df.parent_id parent_id, 
       al.start_min startm, 
       al.end_max end, 
       'Note=' || dr.secondary_identifier || ' ' || dr.remark || '$dlm' || 
       'Db=' || xd1.name || '$dlm' || 
       'InterproId=' || df2.source_id || '$dlm' || 
       'Evalue=' || df.e_value || '$dlm' || 
       'Pi=' || dr.primary_identifier atts
             from
             dots.aalocation al,
             sres.externaldatabaserelease xdr1,
             sres.externaldatabase xd1,
             sres.externaldatabaserelease xdr3,
             sres.externaldatabase xd3,
             sres.dbref dr,
             dots.DbRefAAFeature draf,
             dots.domainfeature df,
--           dots.genefeature gf,
--           dots.transcript t,
--           dots.translatedaafeature taf,
--           dots.translatedaasequence tas,
             dots.domainfeature df2
             where  df.aa_sequence_id = $srcfeature_id 
             and al.end_max > $base_start
             and al.start_min < $rend 
             and xd3.name
                 in ('InterproscanData_RSRC', 'INTERPRO', 'Prints', 'HAMAP',
                     'SFLD', 'TIGRFAM', 'SUPERFAMILY', 'Pfam', 'PIRSF',
                     'PROSITE patterns', 'Superfamily', 'PRINTS', 'InterProScan',
                     'PFAM', 'SMART', 'CDD', 'PANTHER')
--           and gf.na_feature_id = t.parent_id
--           and t.na_feature_id = taf.na_feature_id
--           and taf.aa_sequence_id = tas.aa_sequence_id
--           and tas.aa_sequence_id = df.aa_sequence_id
             and df.aa_feature_id = draf.aa_feature_id
             and df.aa_feature_id = al.aa_feature_id
             and draf.db_ref_id = dr.db_ref_id
             and dr.external_database_release_id = xdr1.external_database_release_id
             and xdr1.external_database_id = xd1.external_database_id
             and df.external_database_release_id = xdr3.external_database_release_id
             and xdr3.external_database_id = xd3.external_database_id
             and df.parent_id = df2.aa_feature_id (+)
             and dr.primary_identifier is not null
      ]]> 
  </query>

    <query name="match:BLASTP">
<![CDATA[ 
SELECT * FROM 
(SELECT sim.similarity_id feature_id,
       'match' type, 
       'BLASTP' source, 
       eta.source_id name, 
       sim.score score, 
       sim.query_id  parent_id, 
       sim.min_query_start startm, 
       sim.max_query_end   end, 
       '.' strand,
       'note=' || replace(replace(replace(eta.description,'RecName','Name'), ';', ','), '=', ':') || '$dlm' ||
       'Expect=' || sim.pvalue_mant || 'e' || sim.pvalue_exp || '$dlm' ||
       'PercentIdentity=' || round(100 * sim.number_identical / sim.total_match_length) || '$dlm' ||
       'PercentPositive=' || round(100 * sim.number_positive / sim.total_match_length) atts
FROM   dots.similarity sim,
       dots.externalaasequence eta,
       dots.translatedaasequence tas, 
       core.tableinfo qtab,
       core.tableinfo stab
WHERE  sim.query_id = tas.aa_sequence_id and
       sim.subject_id = eta.aa_sequence_id and
       sim.subject_table_id = stab.table_id and
       stab.name = 'ExternalAASequence' and
       sim.query_table_id  = qtab.table_id and
       qtab.name = 'TranslatedAASequence' and
       sim.query_id = $srcfeature_id 
ORDER BY
       to_number(sim.pvalue_mant || 'e' || sim.pvalue_exp) asc,
       sim.total_match_length desc,
       sim.score desc

) WHERE RowNum < 6
]]>
    </query>

    <query name="match:BLASTP:subfeatures">
<![CDATA[ 
SELECT simp.similarity_span_id feature_id, 
       'HSP' type, 
       'BLASTP' source, 
       simp.similarity_span_id name, 
       '.' phase, 
       simp.score || '' score, 
       simp.query_start startm, 
       simp.query_end end, 
       decode (simp.is_reversed, 0, '+1', 1, '-1', '.') strand, 
       '' atts 
FROM   dots.similarity sim, dots.similarityspan simp 
WHERE  sim.similarity_id = simp.similarity_id and 
       sim.similarity_id  = $parent_id
]]>
    </query>   

</staticQueries>
