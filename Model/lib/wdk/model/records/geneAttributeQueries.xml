<wdkModel>
    <querySet name="GeneAttributes" queryType="attribute" isCacheable="false">

     <!-- notes
          TODO
       - all projects need a gene alias query (or, we have to break that out of the
         <recordClass> element

     -->


            <defaultTestParamValues includeProjects="PlasmoDB,EuPathDB,UniDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">PlasmoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_221330</paramValue>
               <paramValue name="project_id">ToxoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd3_1400</paramValue>
               <paramValue name="project_id">CryptoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">GiardiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="TrichDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">TrichDB</paramValue>
            </defaultTestParamValues>

            <!--TODO revisit the source_id, its correct but is a random source_id-->
            <defaultTestParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">TriTrypDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">AmoebaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU07_1760</paramValue>
               <paramValue name="project_id">MicrosporidiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="PiroplasmaDB">
               <paramValue name="source_id">BBOV_IV003850</paramValue>
               <paramValue name="project_id">PiroplasmaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="HostDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">HostDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="FungiDB,SchistoDB,InitDB">
               <paramValue name="source_id"></paramValue>
               <paramValue name="project_id"></paramValue>
            </defaultTestParamValues>

            <testRowCountSql includeProjects="EuPathDB">
               SELECT count(*) FROM ApidbTuning.GeneAttributes
            </testRowCountSql>
            <testRowCountSql excludeProjects="EuPathDB">
               select count(na_feature_id)
               from dots.GeneFeature
               where external_database_release_id in (
                 select distinct(dbr.external_database_release_id)
                 from ApidbTuning.GeneAttributes ga, sres.ExternalDatabase db,
                      sres.ExternalDatabaseRelease dbr
                 where db.name = ga.external_db_name
                   and dbr.version = ga.external_db_version
                   and dbr.external_database_id = db.external_database_id
                 )
            </testRowCountSql>



       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Gene alias -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="GeneAlias" doNotTest="true">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="old_source_id"/>
            <column name="old_project_id"/>
            <sql>
              <![CDATA[
                SELECT a.gene AS source_id, 
                       ga.project_id,
                       a.ID as old_source_id, ga.project_id AS old_project_id
                FROM ApidbTuning.GeneId a, apidbtuning.geneattributes ga
                WHERE a.unique_mapping = 1   
                and a.gene = ga.source_id
              ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="Bfmv">
            <column name="project_id" ignoreCase="true"/>
            <column name="lc_project_id" ignoreCase="false"/>
            <column name="project"  ignoreCase="true"/>
            <column name="source_id" ignoreCase="true"/>

            <!-- GENE specific -->

            <column name="start_min"/>
            <column name="end_max"/>
            <column name="start_min_text" sortingColumn="start_min"/>
            <column name="end_max_text" sortingColumn="end_max"/>
            <column name="strand_plus_minus"/>
            <column name="strain" ignoreCase="true"/>
            <column name="product" ignoreCase="true"/>
            <column name="name" ignoreCase="true"/>
            <column name="gene_type" ignoreCase="true"/>
            <column name="exon_count"/>
<!-- TODO            <column name="representative_transcript" includeProjects="ToxoDB,EuPathDB"/> -->
            <column name="is_deprecated"/>
            <column name="context_start"/>
            <column name="context_end"/>
            <column name="zoom_context_start"/>
            <column name="zoom_context_end"/>
            <column name="tight_zoom_context_start"/>
            <column name="tight_zoom_context_end"/>
            <column name="orthomcl_name"/>
            <column name="ortholog_number"/>
            <column name="paralog_number"/>
            <column name="transcript_count"/>
            <column name="representative_transcript"/>
            <column name="orthomcl_link"/>
            <column name="cyc_gene_id" sortingColumn="source_id"/>
            <column name="cyc_db" sortingColumn="organism_full"
                    excludeProjects="AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,UniDB,InitDB,PiroplasmaDB"/>
            <column name="total_hts_snps"/>
            <column name="hts_nonsynonymous_snps"/>
            <column name="hts_synonymous_snps"/>
            <column name="hts_stop_codon_snps"/>
            <column name="hts_noncoding_snps"/>
            <column name="hts_nonsyn_syn_ratio"/>
            <column name="uniprot_id"/>
            <column name="uniprot_id_internal"/>
            <column name="entrez_id"/>
            <column name="is_pseudo"/>
            <column name="pseudo_string"/>
            <column name="sequence_id" ignoreCase="true"/>
            <column name="organism_full"  sortingColumn="organism_full"/>
            <column name="organism_text"  sortingColumn="organism_full"/><!-- CHECK-->
            <column name="genus_species"  sortingColumn="organism_full"/>
            <column name="ncbi_tax_id"/>
            <column name="so_id"/>
            <column name="so_term_name"/>
            <column name="so_term_definition"/>
            <column name="so_version"/>
            <column name="anticodon"/>
            <column name="external_db_name"/>
            <column name="external_db_version"/>
            <column name="chromosome" sortingColumn="chromosome_order_num"/>
            <column name="chromosome_order_num"/>
            <column name="previous_ids" excludeProjects="EuPathDB"/>
            <column name="user_comment_link_url" ignoreCase="false"/>
            <column name="show_strains"/>

            <!-- TODO UniDB Problem -->
            <sqlParamValue name="cyc_db" includeProjects="PlasmoDB,EuPathDB">
                <![CDATA[
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'PLASMO', null)
                ]]>
            </sqlParamValue>
            <sqlParamValue name="cyc_db" includeProjects="ToxoDB">
                <![CDATA[
                   'TOXO'
                ]]>
            </sqlParamValue>
 <!-- TODO : check this -->
            <sqlParamValue name="cyc_db" includeProjects="CryptoDB,GiardiaDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,SchistoDB,UniDB,InitDB,PiroplasmaDB">
                <![CDATA[
                   DECODE(
                   substr(
                     bfmv.organism,
                     instr(ltrim(bfmv.organism), ' ', 1, 1)+1,
                     instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                   ),
                  'parvum', 'cparvum', 'hominis')
                ]]>
            </sqlParamValue>

            <sql>
              <![CDATA[
            SELECT bfmv.project_id
                   , lower(bfmv.project_id) as lc_project_id
                   , bfmv.project_id as project
                   , bfmv.source_id
                   , start_min
                   , end_max
                   , trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text
                   , trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text
                   , bfmv.strand_plus_minus
                   , bfmv.product
                   , bfmv.name
                   , gene_type
                   , bfmv.exon_count
                   , bfmv.transcript_count
                   , bfmv.representative_transcript
                   --TODO  , representative_transcript
                   , DECODE(bfmv.is_deprecated, 0, 'No', 1, 'Yes') AS is_deprecated
                   , bfmv.context_start
                   , bfmv.context_end
                   , bfmv.zoom_context_start
                   , bfmv.zoom_context_end
                   , bfmv.start_min - greatest(200, round((end_max - start_min) / 10)) as tight_zoom_context_start
                   , bfmv.end_max + greatest(200, round((end_max - start_min) / 10)) as tight_zoom_context_end
                   , ortholog_number
                   , paralog_number
                   , bfmv.orthomcl_name as orthomcl_name
                   , CASE WHEN (bfmv.orthomcl_name LIKE 'OG5%' AND bfmv.orthomcl_name NOT LIKE '%|%')
                        THEN '<a href="http://orthomcl.org/cgi-bin/OrthoMclWeb.cgi?rm=sequenceList&groupac=' ||
                        orthomcl_name || '">' || orthomcl_name || '</a>'
                        ELSE orthomcl_name END AS orthomcl_link
                   , UPPER(bfmv.source_id) AS cyc_gene_id
                   , &&cyc_db&& AS cyc_db
                   , bfmv.total_hts_snps
                   , bfmv.hts_nonsynonymous_snps
                   , bfmv.hts_synonymous_snps
                   , bfmv.hts_noncoding_snps
                   , bfmv.hts_stop_codon_snps
                   , bfmv.hts_nonsyn_syn_ratio
                   , uniprot_id
                   , uniprot_id_internal
                   , entrez_id
                   , decode(is_pseudo,0,'No',1,'Yes') as is_pseudo
                   , decode(is_pseudo,0,'gene',1,'pseudogene') as pseudo_string
                   , CASE WHEN bfmv.previous_ids is not null THEN 'Previous IDs: '||bfmv.previous_ids||'<br>' ELSE '' END as previous_ids
                   , bfmv.sequence_id
                   , bfmv.organism as organism_full
                   , genus_species
                   , strain
                   , bfmv.ncbi_tax_id
                   , bfmv.so_id
                   , bfmv.so_term_name
                   , bfmv.so_term_definition
                   , bfmv.so_version
                   , bfmv.anticodon
                   , bfmv.external_db_name
                   , bfmv.external_db_version
                   , SUBSTR(bfmv.organism, 1, 1) || '. ' ||
                        SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) as organism_text
                   , CASE WHEN chromosome_order_num is not null THEN to_char(chromosome)
                        WHEN sequence_type in ('apicoplast_chromosome','mitochondrial_chromosome') THEN sequence_type
                        ELSE 'Not Assigned'
                   END as chromosome
                   , chromosome_order_num
                   , '@WEBAPP_BASE_URL@/addComment?stableId='||bfmv.source_id
                   ||'&commentTargetId=gene'
                   ||'&externalDbName='||bfmv.external_db_name
                   ||'&externalDbVersion='||bfmv.external_db_version
                   ||'&organsim='||genus_species
                   ||'&locations='||bfmv.start_min||'-'||bfmv.end_max
                   ||'&contig='||bfmv.sequence_id
                   ||'&strand='||bfmv.strand_plus_minus
                   as user_comment_link_url
                   , CASE WHEN (bfmv.strain_count > 1) THEN 'Yes' ELSE 'No' END AS show_strains
            from ApidbTuning.GeneAttributes bfmv
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="GeneOverview">
            <column name="project_id" ignoreCase="true"/>
            <column name="source_id" ignoreCase="true"/>
            <column name="genome_status" ignoreCase="true"/>
            <column name="data_release_policy" ignoreCase="false"/>
            <column name="new_product_name" ignoreCase="false"/>
            <column name="new_gene_name" ignoreCase="false"/>
            <column name="type_with_pseudo" ignoreCase="false"/>
            <column name="special_link" ignoreCase="false"/>
            <column name="user_comment_link_text" ignoreCase="false"/>
            <column name="num_user_comments" ignoreCase="false"/>
            <sql>
              <![CDATA[
              -- use <span class="GeneOverviewHighlighted">$$content$$</span> for text to be highlighted in overview section
              SELECT ga.project_id, ga.source_id, gsum.release_policy AS data_release_policy,
                     CASE WHEN prod.product IS NOT NULL
                            THEN ''||prod.product
                           ELSE null
                     END AS new_product_name,
                     CASE WHEN ga.is_pseudo = 1
                            THEN ga.gene_type||' pseudogene'
                          ELSE ga.gene_type
                     END AS type_with_pseudo,
                     CASE WHEN prod.name IS NOT NULL
                            THEN '<span class="eupathdb-GeneOverviewHighlighted">Updated name</span>: '||prod.name
                          ELSE NULL
                     END AS new_gene_name,
                     CASE WHEN gsum.is_reference_strain = 1
                            THEN decode(to_char(gsum.is_curated_genome), 'true', '<span class="eupathdb-GeneOverviewHighlighted">Curated</span>',
                                                                'false', '') || ' Reference Strain'
                          ELSE decode(to_char(gsum.is_curated_genome), 'true', '<span class="eupathdb-GeneOverviewHighlighted">Curated</span>',
                                                              'false', '') || ' Non-Reference Strain'
                     END AS genome_status,
                     CASE WHEN ua.status = 1
                            THEN '<a href="'||REPLACE(gsum.link_url, 'EXTERNAL_ID_HERE', ga.source_id)||'">'|| to_char(gsum.updated_link_text) ||'</a>'
                          ELSE CASE WHEN to_char(gsum.special_link_text) IS NOT NULL
                                      THEN CASE WHEN gsum.link_url IS NOT NULL
                                                  THEN '<a href="'||REPLACE(gsum.link_url, 'EXTERNAL_ID_HERE', ga.source_id)
                                                       ||'">'||(to_char(gsum.special_link_text))||'</a>'
                                                ELSE to_char(gsum.special_link_text)
                                           END
                                    ELSE ''
                               END
                     END AS special_link,
                     CASE WHEN comm.num_user_comments >= 1
                            THEN '<a href="#UserComments">View <span class="eupathdb-GeneOverviewHighlighted">'
                                 || comm.num_user_comments || '</span> user comment'
                                 || CASE WHEN comm.num_user_comments = 1
                                           THEN '</a>'
                                         ELSE 's</a>'
                                    END
                          ELSE 'Add the first User Comment'
                     END AS user_comment_link_text,
                     NVL(comm.num_user_comments, 0) AS num_user_comments
              FROM apidbtuning.annotatedgenomesummary gsum, apidbtuning.geneattributes ga, apidbtuning.changedgeneproduct prod,
                   (SELECT distinct gene, 1 AS status FROM apidbtuning.annotationchange) ua,
                   (SELECT stable_id AS gene_id, project_name, count(distinct comment_id) AS num_user_comments
                    FROM @COMMENT_SCHEMA@MappedComment@COMMENT_DBLINK@
                    WHERE is_visible = 1
                    GROUP BY stable_id, project_name) comm
              WHERE gsum.taxon_id = ga.taxon_id
                AND ga.source_id = ua.gene(+)
                AND ga.source_id = prod.gene(+)
                AND ga.source_id = comm.gene_id(+)
                AND ga.project_id = comm.project_name(+)
              ]]>
            </sql>
        </sqlQuery>


        <!--
        <sqlQuery name="DnaGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="dna_gtracks" />
            <sql>
              <![CDATA[
            with has_proteomic_data as (
                    select source_id
                    from
                      (select
                         ga.gene_source_id as source_id
                         from APIDB.massspecsummary mss, APIDBTUNING.transcriptattributes ga
                        where ga.aa_sequence_id =mss.aa_sequence_id
                       ))
            select ga.source_id as source_id, ga.project_id,
                   gto.gtracks||'%1EUnifiedMassSpecPeptides' as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga,has_proteomic_data
            where ga.organism = gto.organism
              and ga.source_id = has_proteomic_data.source_id
              and gto.type = 'dna'
            union
            select ga.source_id as source_id, ga.project_id,
                   gto.gtracks as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and ga.source_id not in (select source_id from has_proteomic_data)
              and gto.type = 'dna'
            union
            select ga.source_id as source_id, ga.project_id,
                   '' as dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism(+)
            and ga.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto where gto.type = 'dna')
              ]]>
            </sql>
        </sqlQuery>
        -->

        <sqlQuery name="SyntenyGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="synteny_gtracks" />
            <sql>
              <![CDATA[
            select ga.source_id as source_id, ga.project_id,
                   gto.gtracks as  synteny_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and gto.type = 'synteny'
            union
            select ga.source_id as source_id, ga.project_id,
                   '' as synteny_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism(+)
            and ga.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto where gto.type = 'synteny')
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="GeneModelGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="gene_model_gtracks" />
            <column name="highlight"/>
            <sql>
              <![CDATA[
            select ga.source_id as source_id, ga.project_id,
                   gto.gtracks as gene_model_gtracks, '' as highlight
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and gto.type = 'gene_model'
            union
            select ta.gene_source_id as source_id, ta.project_id,
               'Gene%1EGSNAPUnifiedIntronJunctionRefined%1EGSNAPUnifiedIntronJunctionInclusive' as gene_model_gtracks,
               apidb.tab_to_string(set(cast(collect( ';h_feat=' || replace(ta.source_id,':','%3A') || '@yellow' ) as apidb.varchartab)),'') as highlight
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.transcriptattributes ta
            where ta.organism = gto.organism(+)
            and ta.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto where gto.type = 'gene_model')
            group by ta.gene_source_id, ta.project_id
              ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="ProteinExpressionPtracks" isCacheable="false" excludeProjects="EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="protein_expression_gtracks"/>
            <sql>
              <![CDATA[
SELECT
  ta.source_id
, ta.project_id
,(apidb.tab_to_string( SET(CAST(collect(track_names ORDER BY order_num, track_names) AS apidb.varchartab)), '%1E')) AS protein_expression_gtracks
FROM
  (SELECT
    'MassSpecPeptides_'
    ||dsp.name AS track_names
  , ga.gene_source_id
  , '1' AS order_num
  FROM
    apidb.datasource ds
  , apidbtuning.datasetpresenter dsp
  , APIDB.massspecsummary mss
  , SRES.externaldatabase ed
  , sres.externaldatabaserelease edr
  , APIDBTUNING.transcriptattributes ga
  WHERE
    (
      ds.name LIKE dsp.dataset_name_pattern
      OR ds.name = dsp.name
    )
    AND ds.name LIKE '%_massSpec_%'
    AND ds.type = 'protein_expression'
    AND mss.external_database_release_id = edr.external_database_release_id
    AND edr.external_database_id = ed.external_database_id
    AND ed.name = ds.name
    AND ga.aa_sequence_id = mss.aa_sequence_id
  UNION
  SELECT
    'UnifiedPostTraslationalMod' AS track_names
  , gene_source_id
  , '2' AS order_num
  FROM
    APIDBTUNING.MSModifiedPeptideSummary
  ) tracks
, apidbtuning.geneattributes ta
WHERE
  ta.source_id = tracks.gene_source_id (+)
GROUP BY
  ta.source_id
, ta.project_id
              ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="GenomeSequencingAndAnnotation">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="attribution"/>
            <sql>
              <![CDATA[
              select ga.source_id, ga.project_id,
                     nvl(specific.description, generic.description) as attribution
              from apidbTuning.GeneAttributes ga, 
                   (select dnt.name, dp.description
                    from apidbTuning.DatasetNameTaxon dnt, apidbTuning.DatasetPresenter dp
                    where dnt.dataset_presenter_id = dp.dataset_presenter_id
                   ) specific,
                   (select dnt.taxon_id, p.description AS description
                    from apidbTuning.DatasetNameTaxon dnt,
                         apidb.Datasource ds, apidbTuning.DatasetPresenter p
                    where dnt.name = ds.name
                      and ds.type = 'genome'
                      and dnt.dataset_presenter_id = p.dataset_presenter_id
                   ) generic
              where ga.taxon_id = generic.taxon_id
                and ga.external_db_name = specific.name (+)
              ]]>
            </sql>
        </sqlQuery>

      </querySet>
    </wdkModel>
