<wdkModel>
    <querySet name="SnpTables" queryType="table" isCacheable="false" includeProjects="ToxoDB,PlasmoDB,CryptoDB,EuPathDB,AmoebaDB,TriTrypDB">

      <defaultTestParamValues includeProjects="PlasmoDB">
         <paramValue name="source_id">CombinedSNP.MAL13.6332</paramValue>
         <paramValue name="project_id">PlasmoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="ToxoDB">
         <paramValue name="source_id">SNP_TGME49_chrVI_485196</paramValue>
         <paramValue name="project_id">ToxoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="CryptoDB">
         <paramValue name="source_id">chr3-2_66329</paramValue>
         <paramValue name="project_id">CryptoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="TriTrypDB">
         <paramValue name="source_id">NGS_SNP.Tb927_01_v4.36382</paramValue>
         <paramValue name="project_id">TriTrypDB</paramValue>
      </defaultTestParamValues>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Strains for HTS SNPs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="HTSStrainsTable" includeProjects="PlasmoDB,CryptoDB,AmoebaDB,ToxoDB,TriTrypDB" 
              isCacheable="false">

           <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">NGS_SNP.AAEE01000002.1096761</paramValue>
            </testParamValues>
           <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">NGS_SNP.Pf3D7_05_v3.694493</paramValue>
            </testParamValues>
           <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">NGS_SNP.TGME49_chrIb.1890502</paramValue>
            </testParamValues>

            <column name="source_id" />
            <column name="project_id" />
            <column name="strain"/>
            <column name="allele"/>
            <column name="allele_gene_strand"/>
            <column name="product"/>
            <column name="coverage"/>
            <column name="pvalue"/>
            <column name="allele_percent"/>
            <column name="view_align"/>
            <column name="has_align"/>
            <column name="isolate_source_id"/>
            <column name="haplogroup" includeProjects="ToxoDB"/>
            <sql includeProjects="PlasmoDB,CryptoDB,AmoebaDB,TriTrypDB">
            <![CDATA[
SELECT snp.source_id, '@PROJECT_ID@' AS project_id,
       b.source_id as isolate_source_id,
       var.strain as strain,
       var.allele,
       CASE WHEN snp.gene_strand = 'reverse' THEN apidb.reverse_complement(var.allele) 
            WHEN snp.gene_source_id is null THEN ''
            ELSE var.allele 
       END as allele_gene_strand,
       var.product,
       var.coverage, 
       var.read_percent as allele_percent,
       var.p_value as pvalue,
       CASE WHEN b.source_id is null THEN ''
            ELSE lower(snp.project_id) || 
              '/?name=' || nas.source_id || ':' || to_char(snp.location - 50) || '..' || to_char(snp.location + 50) || 
              ';l=' || d.name  || '_' || var.strain || 
              ';h_region=' || nas.source_id || ':' || to_char(snp.location) || '..' || to_char(snp.location + 1) || '@red'  
       END as view_align,
       CASE WHEN b.source_id is null THEN '' ELSE 'view alignment' END as has_align,
       d.name 
FROM   apidbtuning.SnpAttributes snp, 
      apidb.SequenceVariation var, 
      study.study s, 
      rad.studybiomaterial sb, 
      study.biomaterial b, 
      dots.nasequence nas,
      SRES.externaldatabase d,
      sres.externaldatabaserelease r
WHERE snp.na_sequence_id = var.ref_na_sequence_id
  AND snp.location = var.location
  AND nas.na_sequence_id = snp.na_sequence_id
  AND var.external_database_release_id = b.external_database_release_id(+)
  AND b.bio_material_id = sb.bio_material_id(+)
  AND sb.study_id = s.study_id(+)
  and s.external_database_release_id = r.external_database_release_id
  and r.external_database_id = d.external_database_id
ORDER BY var.strain
             ]]>
           </sql>
           <sql includeProjects="ToxoDB">
SELECT * FROM
(
SELECT snp.source_id, '@PROJECT_ID@' AS project_id,
       b.source_id as isolate_source_id,
       var.strain as strain,
       var.allele,
       CASE WHEN snp.gene_strand = 'reverse' THEN apidb.reverse_complement(var.allele) 
            WHEN snp.gene_source_id is null THEN ''
            ELSE var.allele 
       END as allele_gene_strand,
       var.phenotype, 
       oe.value as haplogroup,
       CASE WHEN oe.value = '6a' THEN 6
            WHEN oe.value = '6b' THEN 6
            WHEN oe.value = 'unknown' THEN 0
            ELSE to_number(oe.value)
       END as order_num,
       var.product,
       var.coverage, 
       var.allele_percent,
       var.pvalue,
       CASE WHEN b.source_id is null THEN ''
            ELSE lower(snp.project_id) || 'htssnp' || 
              '/?name=' || nas.source_id || ':' || to_char(l.start_min - 50) || '..' || to_char(l.start_min + 50) || 
              ';l=' || d.name || var.strain || '_CoverageDensity%1E' || 
                       d.name || var.strain || '_CoverageXyplot%1E' || 
                       d.name || var.strain || '_Alignment%1E' ||
              ';h_region=' || nas.source_id || ':' || to_char(l.start_min) || '..' || to_char(l.start_min + 1) || '@red'  
       END as view_align,
       CASE WHEN b.source_id is null THEN '' ELSE 'view alignment' END as has_align
FROM   apidbtuning.SnpAttributes snp, 
      dots.SeqVariation var, 
      study.study s, 
      rad.studybiomaterial sb, 
      study.biomaterial b, 
      dots.snpfeature sf, 
      dots.nalocation l, 
      dots.nasequence nas,
      study.ontologyentry oe,
      study.biomaterialcharacteristic bc, 
      SRES.externaldatabase d,
      sres.externaldatabaserelease r
WHERE var.parent_id = snp.na_feature_id
 AND sf.na_feature_id = snp.na_feature_id
 AND l.na_feature_id = sf.na_feature_id
 AND nas.na_sequence_id = sf.na_sequence_id
 AND var.external_database_release_id = b.external_database_release_id(+)
 AND b.bio_material_id = sb.bio_material_id(+)
 AND sb.study_id = s.study_id(+)
 AND sb.bio_material_id = bc.bio_material_id 
 AND bc.ontology_entry_id = oe.ontology_entry_id
 AND oe.category = 'Haplogroup'
 and snp.type = 'HTS'
 and s.external_database_release_id = r.external_database_release_id
 and r.external_database_id = d.external_database_id
UNION
SELECT snp.source_id, '@PROJECT_ID@' AS project_id,
       b.source_id as isolate_source_id,
       var.strain as strain,
       var.allele,
       CASE WHEN snp.gene_strand = 'reverse' THEN apidb.reverse_complement(var.allele) 
            WHEN snp.gene_source_id is null THEN ''
            ELSE var.allele 
       END as allele_gene_strand,
       var.phenotype, 
       CASE WHEN var.strain = 'RH' THEN '1'
            WHEN var.strain = 'ME49' THEN '2'
            END as haplogroup,
       CASE WHEN var.strain = 'RH' THEN 1
            WHEN var.strain = 'ME49' THEN 2
            END as order_num,
       var.product,
       var.coverage, 
       var.allele_percent,
       var.pvalue,
       CASE WHEN b.source_id is null THEN ''
            ELSE lower(snp.project_id) || 
              '/?name=' || nas.source_id || ':' || to_char(l.start_min - 50) || '..' || to_char(l.start_min + 50) || 
              ';l=' || d.name || var.strain || '_CoverageDensity%1E' || 
                       d.name || var.strain || '_CoverageXyplot%1E' || 
                       d.name || var.strain || '_Alignment%1E' ||
              ';h_region=' || nas.source_id || ':' || to_char(l.start_min) || '..' || to_char(l.start_min + 1) || '@red'  
       END as view_align,
       CASE WHEN b.source_id is null THEN '' ELSE 'view alignment' END as has_align
FROM   apidbtuning.SnpAttributes snp, 
      dots.SeqVariation var, 
      study.study s, 
      rad.studybiomaterial sb, 
      study.biomaterial b, 
      dots.snpfeature sf, 
      dots.nalocation l, 
      dots.nasequence nas,
      SRES.externaldatabase d,
      sres.externaldatabaserelease r
WHERE var.parent_id = snp.na_feature_id
 AND sf.na_feature_id = snp.na_feature_id
 AND l.na_feature_id = sf.na_feature_id
 AND nas.na_sequence_id = sf.na_sequence_id
 AND var.external_database_release_id = b.external_database_release_id(+)
 AND b.bio_material_id = sb.bio_material_id(+)
 AND sb.study_id = s.study_id(+)
 AND var.strain in ('ME49', 'RH')
 and snp.type = 'HTS'
 and s.external_database_release_id = r.external_database_release_id
 and r.external_database_id = d.external_database_id
)
order by order_num, strain 
           </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Allele count -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="AlleleCount" includeProjects="ToxoDB,PlasmoDB,CryptoDB,AmoebaDB,TriTrypDB" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="allele_count"/>
            <column name="allele"/>
            <sql>
                <![CDATA[
           SELECT snp.source_id, '@PROJECT_ID@' AS project_id,
                  count(*) as allele_count, var.allele
           FROM   apidbtuning.SnpAttributes snp, 
                  apidb.sequencevariation var
           WHERE  snp.na_sequence_id = var.ref_na_sequence_id
              AND snp.location = var.location
           GROUP BY snp.source_id, var.allele
                ]]>
            </sql>
       </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Product count -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="ProductCount" includeProjects="ToxoDB,PlasmoDB,CryptoDB,AmoebaDB,TriTrypDB" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="product_count"/>
            <column name="product"/>
            <sql>
                <![CDATA[
           SELECT snp.source_id, '@PROJECT_ID@' AS project_id,
                  count(*) as product_count, var.product
           FROM   apidbtuning.SnpAttributes snp, 
                  apidb.sequencevariation var
           WHERE  snp.na_sequence_id = var.ref_na_sequence_id
              AND snp.location = var.location
              AND var.product is not null
           GROUP BY snp.source_id, var.product
                ]]>
            </sql>
       </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Providers -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="Providers" includeProjects="PlasmoDB" 
               isCacheable="false">
            <column name="source_id" />
            <column name="project_id" />
            <column name="snpchip_source_id"/>
            <column name="name"/>

            <sql>
            <![CDATA[
SELECT sb.source_id, '@PROJECT_ID@' AS project_id,
       sa.source_id as snpchip_source_id, ed.name
FROM   dots.Snpfeature sa, dots.nalocation la, apidb.snp sb, 
       sres.externaldatabase ed, sres.externaldatabaserelease edr
WHERE  sa.na_sequence_id = sb.na_sequence_id
   and sa.na_feature_id = la.na_feature_id
   and la.start_min = sb.location
   and sb.source_id != sa.source_id
   and sa.external_database_release_id = edr.external_database_release_id
   and edr.external_database_id = ed.external_database_id
   and sa.name in ('Broad_barcode','Broad_3k_chip','Broad_hd_array')
             ]]>
           </sql>

        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Isolates -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

      <sqlQuery name="AllResults" isCacheable="false" includeProjects="EuPathDB">
            <paramRef ref="recordParams.snps_answer"/>
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="wdk_weight"/>
            <sql>
                <![CDATA[
                    SELECT  c.source_id, c.project_id, c.wdk_weight 
                    FROM $$snps_answer$$ c
                ]]>
            </sql>
        </sqlQuery>
      <sqlQuery name="ApiProjectSnps" isCacheable="false" includeProjects="EuPathDB">
            <paramRef ref="recordParams.Project"/>
            <paramRef ref="recordParams.snps_answer"/>
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="wdk_weight"/>
            <sql>
                <![CDATA[
                    SELECT c.source_id, c.project_id, c.wdk_weight 
                    FROM $$snps_answer$$ c, ApidbTuning.SnpAttributes sa
                    where sa.source_id = c.source_id
                    and sa.project_id = $$Project$$
                ]]>
            </sql>
     </sqlQuery>

        <!-- this is not a filter query, it is the query used for basket function -->
        <sqlQuery name="AllSnpRecords" isCacheable="false" doNotTest="true">
            <column name="source_id"/>
            <column name="project_id"/>
            <sql>
                <![CDATA[ 
                SELECT sa.source_id, sa.project_id
                FROM ApidbTuning.SnpAttributes sa
                ]]>
            </sql>
        </sqlQuery>
    </querySet>

</wdkModel>
