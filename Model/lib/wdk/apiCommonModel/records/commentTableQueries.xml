<wdkModel>

  <querySet name="CommentTables" queryType="table" isCacheable="false">

      <defaultTestParamValues includeProjects="PlasmoDB">
         <paramValue name="source_id">%%defaultGene%%</paramValue>
         <paramValue name="project_id">PlasmoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="ToxoDB">
          <paramValue name="source_id">TGME49_221330</paramValue>
          <paramValue name="project_id">ToxoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="CryptoDB">
          <paramValue name="source_id">cgd3_1400</paramValue>
          <paramValue name="project_id">CryptoDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="GiardiaDB">
          <paramValue name="source_id">%%defaultGene%%</paramValue>
          <paramValue name="project_id">GiardiaDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="TrichDB">
          <paramValue name="source_id">%%defaultGene%%</paramValue>
          <paramValue name="project_id">TrichDB</paramValue>
      </defaultTestParamValues>

      <defaultTestParamValues includeProjects="TriTrypDB">
          <paramValue name="source_id">Tb927.8.4640</paramValue>
          <paramValue name="project_id">TriTrypDB</paramValue>
      </defaultTestParamValues>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- User Comments -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="GeneComments" excludeProjects="ToxoDB" isCacheable="false">
            <testParamValues minRows="0" includeProjects="MicrosporidiaDB,PiroplasmaDB"/>
            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd5_780</paramValue>
            </testParamValues>
            <testParamValues minRows="0" includeProjects="TrichDB"/>
            <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_39483</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Tb927.8.4640</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="comment_id"/>
            <column name="pmids"/>
            <column name="genecount"/>
            <column name="filecount"/>
            <column name="stable_id"/>
            <column name="headline"/>
            <column name="user_name_org"/>
            <column name="comment_date"/>
            <column name="comment_target_id"/>
            <sql>
            <![CDATA[
                    SELECT c.comment_target_id, c.project_name as project_id, c.comment_id, 
                           c.stable_id, c.stable_id as source_id, c.comment_date, c.headline,
                           files.filecount, references.pmids, gene_counts.geneCount,
                           u.first_name || ' ' || u.last_name || ', ' || u.organization as user_name_org
                    FROM @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c, @USER_SCHEMA@users@USER_DBLINK@ u,
                         (SELECT comment_id, count(*) as filecount
                          FROM @COMMENT_SCHEMA@CommentFile@COMMENT_DBLINK@
                          GROUP BY comment_id) files,
                         (SELECT comment_id,
                                  apidb.tab_to_string(set(cast(collect(source_id) as apidb.varchartab)),',') as pmids
                          FROM @COMMENT_SCHEMA@CommentReference@COMMENT_DBLINK@
                          WHERE database_name='pubmed'
                          GROUP BY comment_id
                          ) references,
                         (SELECT comment_id, count(stable_id) as geneCount
                          FROM @COMMENT_SCHEMA@commentStableId@COMMENT_DBLINK@
                          GROUP BY comment_id) gene_counts
                    WHERE c.project_name = '@PROJECT_ID@'
                      AND c.comment_target_id = 'gene'
                      AND c.review_status_id != 'rejected'
                      AND c.review_status_id != 'task'
                      AND c.review_status_id != 'community'
                      AND c.is_visible = 1
                      AND c.user_id = u.user_id
                      AND c.comment_id = files.comment_id(+)
                      AND c.comment_id = references.comment_id(+)
                      AND c.comment_id = gene_counts.comment_id(+)
                    ORDER BY c.comment_id desc
            ]]>
            </sql>
        </sqlQuery>

       <sqlQuery name="GeneComments" includeProjects="ToxoDB" isCacheable="false">
            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_102050</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="comment_id"/>
            <column name="pmids"/>
            <column name="genecount"/>
            <column name="filecount"/>
            <column name="stable_id"/>
            <column name="headline"/>
            <column name="user_name_org"/>
            <column name="comment_date"/>
            <column name="comment_target_id"/>
            <sql>
            <![CDATA[
                    SELECT c.comment_target_id, c.project_name as project_id, c.comment_id, 
                           c.stable_id, c.stable_id as source_id, c.comment_date, c.headline,
                           files.filecount, references.pmids, gene_counts.geneCount,
                           u.first_name || ' ' || u.last_name || ', ' || u.organization as user_name_org
                    FROM @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c, @USER_SCHEMA@users@USER_DBLINK@ u,
                         (SELECT comment_id, count(*) as filecount
                          FROM @COMMENT_SCHEMA@CommentFile@COMMENT_DBLINK@
                          GROUP BY comment_id) files,
                         (SELECT comment_id,
                                  apidb.tab_to_string(set(cast(collect(source_id) as apidb.varchartab)),',') as pmids
                          FROM @COMMENT_SCHEMA@CommentReference@COMMENT_DBLINK@
                          WHERE database_name='pubmed'
                          GROUP BY comment_id
                          ) references,
                         (SELECT comment_id, count(stable_id) as geneCount
                          FROM @COMMENT_SCHEMA@commentStableId@COMMENT_DBLINK@
                          GROUP BY comment_id) gene_counts
                    WHERE c.project_name = '@PROJECT_ID@'
                      AND c.comment_target_id = 'gene'
                      AND c.review_status_id != 'rejected'
                      AND c.review_status_id != 'task'
                      AND c.is_visible = 1
                      AND c.user_id = u.user_id
                      AND c.comment_id = files.comment_id(+)
                      AND c.comment_id = references.comment_id(+)
                      AND c.comment_id = gene_counts.comment_id(+)
                    ORDER BY c.comment_id desc
            ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Community expert comments and annotations                    -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="CommunityComments"
                 isCacheable="false">

            <testParamValues minRows="0" includeProjects="TrichDB,PlasmoDB,CryptoDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,PiroplasmaDB"/>
            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_048700</paramValue>
            </testParamValues>

            <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_4313</paramValue>
            </testParamValues>

            <column name="project_id"/>
            <column name="source_id"/>
            <column name="comment_id"/>
            <column name="pmids"/>
            <column name="genecount"/>
            <column name="filecount"/>
            <column name="stable_id"/>
            <column name="headline"/>
            <column name="user_name_org"/>
            <column name="authors"/>
            <column name="comment_date"/>
            <column name="comment_target_id"/>
            <sql>
            <![CDATA[
                   SELECT c.comment_target_id, c.project_name as project_id, c.comment_id, 
                           c.stable_id, c.stable_id as source_id, c.comment_date, c.headline,
                           files.filecount, references.pmids, gene_counts.geneCount,
                           u.first_name || ' ' || u.last_name || ', ' || u.organization as user_name_org,
                           authortable.authors 
                    FROM @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c, @USER_SCHEMA@users@USER_DBLINK@ u,
                         (SELECT comment_id, count(*) as filecount
                          FROM @COMMENT_SCHEMA@CommentFile@COMMENT_DBLINK@
                          GROUP BY comment_id) files,
                         (SELECT comment_id,
                                  apidb.tab_to_string(set(cast(collect(source_id) as apidb.varchartab)),',') as pmids
                          FROM @COMMENT_SCHEMA@CommentReference@COMMENT_DBLINK@
                          WHERE database_name='pubmed'
                          GROUP BY comment_id
                          ) references,
                         (SELECT comment_id,
                                  apidb.tab_to_string(set(cast(collect(source_id) as apidb.varchartab)),',') as authors
                          FROM @COMMENT_SCHEMA@CommentReference@COMMENT_DBLINK@
                          WHERE database_name='author'
                          GROUP BY comment_id
                          ) authortable, 
                         (SELECT comment_id, count(stable_id) as geneCount
                          FROM @COMMENT_SCHEMA@commentStableId@COMMENT_DBLINK@
                          GROUP BY comment_id) gene_counts
                    WHERE c.project_name = '@PROJECT_ID@'
                      AND c.comment_target_id = 'gene'
                      AND c.review_status_id != 'rejected'
                      AND c.review_status_id = 'community'
                      AND c.is_visible = 1
                      AND c.user_id = u.user_id
                      AND c.comment_id = files.comment_id(+)
                      AND c.comment_id = references.comment_id(+)
                      AND c.comment_id = authortable.comment_id(+)
                      AND c.comment_id = gene_counts.comment_id(+)
              ORDER BY c.comment_id desc
            ]]>
            </sql>
       </sqlQuery>


       <sqlQuery name="IsolateComments" excludeProjects="TrichDB"
                 isCacheable="false" doNotTest="true">

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="comment_id"/>
            <column name="pmids"/>
            <column name="genecount"/>
            <column name="filecount"/>
            <column name="stable_id"/>
            <column name="headline"/>
            <column name="user_name_org"/>
            <column name="comment_date"/>
            <column name="comment_target_id"/>
            <sql>
            <![CDATA[
              SELECT ga.source_id, ga.project_id, apicomm.comment_id, 
                     apicomm.comment_target_id,
                     apicomm.stable_id, apicomm.comment_date, apicomm.geneCount,
                     apicomm.filecount, apicomm.pmids, apicomm.headline, apicomm.user_name_org
              FROM ApidbTuning.IsolateAttributes ga,
                   (SELECT c.comment_target_id, c.project_name as project_id, csi.comment_id, csi.stable_id, c.comment_date, c.headline,
                           files.filecount, references.pmids, gene_counts.geneCount,
                           u.first_name || ' ' || u.last_name || ', ' || u.organization as user_name_org
                    FROM @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c, @USER_SCHEMA@users@USER_DBLINK@ u,
                         ( SELECT comment_id, stable_id from @COMMENT_SCHEMA@comments@COMMENT_DBLINK@
                          UNION
                           SELECT comment_id, stable_id from @COMMENT_SCHEMA@commentStableId@COMMENT_DBLINK@) csi,
                         (SELECT comment_id, count(*) as filecount
                          FROM @COMMENT_SCHEMA@CommentFile@COMMENT_DBLINK@
                          GROUP BY comment_id) files,
                         (SELECT comment_id,
                                  apidb.tab_to_string(set(cast(collect(source_id) as apidb.varchartab)),',') as pmids
                          FROM @COMMENT_SCHEMA@CommentReference@COMMENT_DBLINK@
                          WHERE database_name='pubmed'
                          GROUP BY comment_id
                          ) references,
                         (SELECT comment_id, count(stable_id) as geneCount
                          FROM @COMMENT_SCHEMA@commentStableId@COMMENT_DBLINK@
                          GROUP BY comment_id) gene_counts
                    WHERE c.project_name = '@PROJECT_ID@'
                      AND c.comment_target_id = 'isolate'
                      AND c.review_status_id != 'rejected'
                      AND c.review_status_id != 'task'
                      AND c.is_visible = 1
                      AND c.comment_id = csi.comment_id
                      AND c.user_id = u.user_id
                      AND c.comment_id = files.comment_id(+)
                      AND c.comment_id = references.comment_id(+)
                      AND c.comment_id = gene_counts.comment_id(+)
                   ) apicomm
              WHERE ga.source_id = apicomm.stable_id
                AND ga.project_id = apicomm.project_id
              ORDER BY apicomm.comment_id desc
            ]]>
            </sql>
        </sqlQuery> 

        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <!-- Comment category link -->
        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
                     
        <sqlQuery name="CommentCategoryLink" excludeProjects="EuPathDB" 
                  doNotTest="true">

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="category_link"/>
            <sql>
            <![CDATA[
              SELECT c.stable_id AS source_id, '@PROJECT_ID@' as project_id,
                     lower(t.category) || ':' || count(t.category) as category_link
              FROM   @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c,
                     @COMMENT_SCHEMA@TargetCategory@COMMENT_DBLINK@ t,
                     @COMMENT_SCHEMA@CommentTargetCategory@COMMENT_DBLINK@ tc
              WHERE  c.comment_id = tc.comment_id
                 AND t.target_category_id = tc.target_category_id
              GROUP BY c.stable_id, t.category
            ]]>
          </sql>
        </sqlQuery> 

       <sqlQuery name="GenomeComments" excludeProjects="EuPathDB"
                 isCacheable="false">

            <testParamValues minRows="0" includeProjects="MicrosporidiaDB,GiardiaDB,TrichDB,ToxoDB,CryptoDB,TriTrypDB,AmoebaDB,PiroplasmaDB"/>
            <testParamValues includeProjects="PlasmoDB">
              <paramValue name="source_id">Pf3D7_09</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="comment_id"/>
            <column name="pmids"/>
            <column name="genecount"/>
            <column name="filecount"/>
            <column name="stable_id"/>
            <column name="headline"/>
            <column name="user_name_org"/>
            <column name="comment_date"/>
            <column name="comment_target_id"/>
            <sql>
            <![CDATA[
              SELECT ga.source_id, apicomm.project_id, apicomm.comment_id,
                     apicomm.comment_target_id,
                     apicomm.stable_id, apicomm.comment_date, apicomm.geneCount,
                     apicomm.filecount, apicomm.pmids, apicomm.headline, apicomm.user_name_org
              FROM dots.NASequence ga,
                   (SELECT c.comment_target_id, c.project_name as project_id, csi.comment_id, csi.stable_id, c.comment_date, c.headline,
                           files.filecount, references.pmids, gene_counts.geneCount,
                           u.first_name || ' ' || u.last_name || ', ' || u.organization as user_name_org
                    FROM @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c, @USER_SCHEMA@users@USER_DBLINK@ u,
                         ( SELECT comment_id, stable_id from @COMMENT_SCHEMA@comments@COMMENT_DBLINK@
                          UNION
                           SELECT comment_id, stable_id from @COMMENT_SCHEMA@commentStableId@COMMENT_DBLINK@) csi,
                         (SELECT comment_id, count(*) as filecount
                          FROM @COMMENT_SCHEMA@CommentFile@COMMENT_DBLINK@
                          GROUP BY comment_id) files,
                         (SELECT comment_id,
                                  apidb.tab_to_string(set(cast(collect(source_id) as apidb.varchartab)),',') as pmids
                          FROM @COMMENT_SCHEMA@CommentReference@COMMENT_DBLINK@
                          WHERE database_name='pubmed'
                          GROUP BY comment_id
                          ) references,
                         (SELECT comment_id, count(stable_id) as geneCount
                          FROM @COMMENT_SCHEMA@commentStableId@COMMENT_DBLINK@
                          GROUP BY comment_id) gene_counts
                    WHERE c.project_name = '@PROJECT_ID@'
                      AND c.comment_target_id = 'genome'
                      AND c.review_status_id != 'rejected'
                      AND c.review_status_id != 'task'
                      AND c.is_visible = 1
                      AND c.comment_id = csi.comment_id
                      AND c.user_id = u.user_id
                      AND c.comment_id = files.comment_id(+)
                      AND c.comment_id = references.comment_id(+)
                      AND c.comment_id = gene_counts.comment_id(+)
                   ) apicomm
              WHERE ga.source_id = apicomm.stable_id
              ORDER BY apicomm.comment_id desc
            ]]>
            </sql>
        </sqlQuery> 

<!--
       <sqlQuery name="PhenotypeComments"
                 isCacheable="false">

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="comment_id"/>
            <column name="pmids"/>
            <column name="filecount"/>
            <column name="stable_id"/>
            <column name="headline"/>
            <column name="user_name_org"/>
            <column name="comment_date"/>
            <column name="comment_target_id"/>
            <sql>
            <![CDATA[
              SELECT ga.source_id, ga.project_id, apicomm.comment_id, 
                     apicomm.comment_target_id,
                     apicomm.stable_id, apicomm.comment_date, 
                     apicomm.filecount, apicomm.pmids, apicomm.headline, apicomm.user_name_org
              FROM ApidbTuning.GeneAttributes ga,
                   (SELECT c.comment_target_id, c.project_name as project_id, csi.comment_id, csi.stable_id, 
                           c.comment_date, c.headline,
                           files.filecount, references.pmids, 
                           u.first_name || ' ' || u.last_name || ', ' || u.organization as user_name_org
                    FROM @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c, @USER_SCHEMA@users@USER_DBLINK@ u,
                         ( SELECT comment_id, stable_id from @COMMENT_SCHEMA@comments@COMMENT_DBLINK@
                          UNION
                           SELECT comment_id, stable_id from @COMMENT_SCHEMA@commentStableId@COMMENT_DBLINK@) csi,
                         (SELECT comment_id, count(*) as filecount
                          FROM @COMMENT_SCHEMA@CommentFile@COMMENT_DBLINK@
                          GROUP BY comment_id) files,
                         (SELECT comment_id,
                                  apidb.tab_to_string(set(cast(collect(source_id) as apidb.varchartab)),',') as pmids
                          FROM @COMMENT_SCHEMA@CommentReference@COMMENT_DBLINK@
                          WHERE database_name='pubmed'
                          GROUP BY comment_id
                          ) references
                    WHERE c.project_name = '@PROJECT_ID@'
                      AND c.comment_target_id = 'phenotype'
                      AND c.review_status_id != 'rejected'
                      AND c.review_status_id != 'task'
                      AND c.is_visible = 1
                      AND c.comment_id = csi.comment_id
                      AND c.user_id = u.user_id
                      AND c.comment_id = files.comment_id(+)
                      AND c.comment_id = references.comment_id(+)
                   ) apicomm
              WHERE ga.source_id = apicomm.stable_id
                AND ga.project_id = apicomm.project_id
              ORDER BY apicomm.comment_id desc
            ]]>
            </sql>
        </sqlQuery>
-->


   </querySet>

</wdkModel>
