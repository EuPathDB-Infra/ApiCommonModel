<wdkModel>
  <querySet name="CompoundTables" queryType="table" isCacheable="false"  includeProjects="PlasmoDB">

      <defaultTestParamValues includeProjects="PlasmoDB">
          <paramValue name="source_id">CID:93072</paramValue>
          <paramValue name="project_id">PlasmoDB</paramValue>
      </defaultTestParamValues>

    <sqlQuery name="Properties">
            <column name="project_id"/>
            <column name="source_id"  />
            <column name="property"  />
            <column name="value"  />
           <sql>
            <![CDATA[
	       SELECT '@PROJECT_ID@' AS project_id, ca.source_id, property, 
		      CASE WHEN property ='MolecularFormula'
		           THEN REGEXP_REPLACE(value,'(\d)','<sub>\1</sub>')
			   ELSE value END AS value
	       FROM apidb.PubChemCompound c, ApidbTuning.CompoundAttributes ca
               WHERE c.compound_id = ca.compound_id
               AND NOT property = 'Synonym'
	       ORDER BY property
            ]]>
            </sql>
    </sqlQuery>

    <sqlQuery name="Synonyms">
            <column name="project_id"/>
            <column name="source_id"  />
            <column name="property"  />
            <column name="value"  />
           <sql>
            <![CDATA[
	       SELECT '@PROJECT_ID@' AS project_id, ca.source_id, property, value
	       FROM apidb.PubChemCompound c, ApidbTuning.CompoundAttributes ca
               WHERE c.compound_id = ca.compound_id
               AND property = 'Synonym'
	       ORDER BY property
            ]]>
            </sql>
    </sqlQuery>


    <sqlQuery name="SubstanceProps">
            <column name="project_id"/>
            <column name="source_id"  />
            <column name="substance_id"  />
            <column name="property"  />
            <column name="value"  />
           <sql>
            <![CDATA[
	      SELECT '@PROJECT_ID@' as project_id, ca.source_id, s2.property, to_char(s1.substance_id) as substance_id,
		      CASE WHEN REGEXP_LIKE(s2.value, '^C(\d)+$') 
		      THEN '<a href="http://www.genome.jp/dbget-bin/www_bget?cpd:' || s2.value || '">' || s2.value || '</a>'
		      ELSE  s2.value END AS value
	      FROM APIDB.pubchemsubstance s1, APIDB.pubchemsubstance s2, ApidbTuning.CompoundAttributes ca
	      WHERE s1.property = 'CID'
             AND s1.value = ca.compound_id
	      AND s1.substance_id = s2.substance_id
	      AND NOT s2.property = 'CID'
	      UNION
	      SELECT '@PROJECT_ID@' as project_id, ca.source_id, s.property, ca.substance_id,
                      CASE WHEN (s.property='KEGG') 
                      THEN '<a href="http://www.genome.jp/dbget-bin/www_bget?cpd:' || s.value || '">' || s.value || '</a>'
                      ELSE  s.value END AS value
              FROM APIDB.pubchemsubstance s, ApidbTuning.CompoundAttributes ca
              WHERE ca.source_id = 'SID:' || s.substance_id
              AND NOT s.property = 'CID'
        ]]>
           </sql>
    </sqlQuery>



    <sqlQuery name="CompoundsFromMetabolicPathways">
      <column name="source_id"  />
      <column name="project_id"/>
      <column name="compound"/>
      <column name="enzyme"/>
      <column name="enzyme_link"/>
      <column name="reaction"/>
      <column name="reaction_link"/>
      <column name="name"/>
      <column name="pathway"/>
      <column name="type"/>
      <sql>
	<![CDATA[
      WITH enzy AS    
           (SELECT distinct ec.ec_number 
            FROM apidbtuning.geneAttributes gf,
                       dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
            WHERE asec.aa_sequence_id = gf.aa_sequence_id
              AND   ec.enzyme_class_id = asec.enzyme_class_id)
      SELECT distinct  compound_source_id AS source_id, compound, pathway, type, enzyme, 
               reaction, '<a href="http://www.genome.jp/dbget-bin/www_bget?' || REPLACE (reaction, ' ', '+') || ' ">' || reaction || '</a>' as reaction_link,
              CASE when enzyme in (select ec_number from enzy)
              THEN '<a href="processQuestion.do?questionFullName=GeneQuestions.InternalGenesByEcNumber&' || 'array%28organism%29=all&' || 'array%28ec_number_pattern%29=' || enzyme || '&' || 'questionSubmit=Get+Answer'  || '">' || enzyme || '</a>'
              ELSE  enzyme  END AS enzyme_link, 
              pc.name, 'PlasmoDB' AS project_id
       FROM apidbtuning.PathwayCompounds pc
       ORDER BY pathway
	]]>
	    </sql>
        </sqlQuery>

    <sqlQuery name="RelatedCompounds">
      <column name="source_id"  />
      <column name="project_id"/>
      <column name="subst_id"/>
      <column name="type"/>
      <column name="related_id"/>
      <sql>
	SELECT ca.source_id, '@PROJECT_ID@' AS project_id,
                        s1.substance_id as subst_id, s2.type, s2.value as related_id
	  FROM  APIDB.pubchemsubstance s1,  APIDB.pubchemsubstance s2, ApidbTuning.CompoundAttributes ca
	 WHERE s1.substance_id = s2.substance_id
	   AND s1.property='CID' 
	   AND s1.type = 'standardized'
           AND s1.value = ca.compound_id
	   AND s2.property='CID'
	   AND not s1.value = s2.value
	    </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Mass Spec (Metabolite)  Graphs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="MassSpecGraphs" includeProjects="PlasmoDB">
            <column name="source_id" />
            <column name="project_id" />
            <column name="graph_ids" />
            <column name="module" />
            <column name="species"/>
            <column name="mainOpen" />
            <column name="dataOpen" />
            <column name="display_name" />
            <column name="description" />
            <column name="x_axis" />
            <column name="y_axis" />
            <column name="visible_parts" />
            <column name="has_graph_data"/>
	    <column name="has_meta_data"/>
            <column name="dataset_name"/>
            <column name="is_graph_custom"/>

            <sql>
            <![CDATA[
select distinct * from (
select gg.source_id,
       '@PROJECT_ID@' AS project_id,
       gg.profile_graph_id as graph_ids,
       gg.module,
       'TRUE' as mainOpen,
       'FALSE' as dataOpen,
       gg.display_name || gg.profile_graph_id as display_name,
       gg.description,
       gg.name as dataset_name,
      gg.is_graph_custom,
       gg.x_axis,
       gg.y_axis,
       gg.visible_parts,
       case when profile_graph_id is null then 0 else 1 end as has_graph_data, 
       'FALSE' has_meta_data,
       gg.order_num,
       'N/A' as species
from (select distinct ca.source_id, d.name, ps.name as profile_name, 
p.source_id as profile_graph_id, pgd.*
          from apidb.pubchemCompound pcc, apidbtuning.compoundAttributes ca,  
                  apidb.ProfileSet ps, apidb.profile p, 
                  Sres.ExternalDatabaseRelease edr, Sres.ExternalDatabase d ,
 (select '' as dataset,
       '' as display_name,
       '' as description,
       '' as module,
       '' as x_axis,
       '' as y_axis,
       '' as visible_parts,
       '' as is_graph_custom,
       0 as order_num
       from dual
      -- TEMPLATE_ANCHOR compoundPageGraphDescriptions
) pgd 
      where ps.external_database_release_id = edr.external_database_release_id
         and edr.external_database_id = d.external_database_id
         and p.profile_set_id = ps.profile_set_id
         and d.name = pgd.dataset
         and p.subject_row_id = pcc.pubchem_compound_id
         and pcc.compound_id = ca.compound_id
      ) gg
)
order by graph_ids asc
             ]]>
            </sql>
        </sqlQuery>

    </querySet>
</wdkModel>
