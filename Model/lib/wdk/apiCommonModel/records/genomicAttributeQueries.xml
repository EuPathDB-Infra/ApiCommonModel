<wdkModel>

  <!-- notes

   - attribute queries on the component sites will now need projectId param so the sql can be
     shared with the portal

   - crypto and api have to adjust to a new set name (old is 'ContigAttributes')

  -->

    <querySet name="SequenceAttributes" queryType="attribute">

            <defaultTestParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">Pf3D7_11</paramValue>
               <paramValue name="project_id">PlasmoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="ToxoDB,EuPathDB">
               <paramValue name="source_id">TGME49_chrIII</paramValue>
               <paramValue name="project_id">ToxoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">AAEE01000001</paramValue>
               <paramValue name="project_id">CryptoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">CH991779</paramValue>
               <paramValue name="project_id">GiardiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="TrichDB">
               <paramValue name="source_id">DS113177</paramValue>
               <paramValue name="project_id">TrichDB</paramValue>
            </defaultTestParamValues>
           
            <!-- TODO revisit source_id --> 
            <defaultTestParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Lmjchr36</paramValue>
               <paramValue name="project_id">TriTrypDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">DS571186</paramValue>
               <paramValue name="project_id">AmoebaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">NC_003230</paramValue>
               <paramValue name="project_id">MicrosporidiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="InitDB">
               <paramValue name="source_id"></paramValue>
               <paramValue name="project_id"></paramValue>
            </defaultTestParamValues>


            <testRowCountSql excludeProjects="EuPathDB">
               select count(na_sequence_id)
               from dots.NaSequence
               where external_database_release_id in (
                 select distinct(dbr.external_database_release_id)
                 from apidb.SequenceAttributes a, sres.ExternalDatabase db,
                      sres.ExternalDatabaseRelease dbr
                 where db.name = a.database_name
                   and dbr.version = a.database_version
                   and dbr.external_database_id = db.external_database_id
                 )
               and subclass_view in ('VirtualSequence', 'ExternalNASequence')
 
            </testRowCountSql>

            <testRowCountSql includeProjects="EuPathDB">
               SELECT count(*) FROM apidb.SequenceAttributes
            </testRowCountSql>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- BFMV -->  
       <!-- There are currently two flavors of this query, one for the portal
            and one for components.  The component version references the
            apidb.scaffold_map tuning table (which doesn't exist in portal
            instances) in order to work around a bug in apidb.SequenceAttributes.
            The bug is that when a contig is mapped to a scaffold that's mapped
            to a chromosome, the "chromosome" field of the scaffold gets
            populated but in the contig it does not. Once this bug is fixed,
            everybody can use the query now used for the portal (that is, the
            one which does not reference scaffold_map).                  -->
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <sqlQuery name="Bfmv">
        <testParamValues includeProjects="GiardiaDB">
        <paramValue name="source_id">CH991770</paramValue>
        </testParamValues>      
            <column name="chromosome" sortingColumn="chromosome_order_num"/>
            <column name="chromosome_order_num"/>
            <column name="source_id" ignoreCase="true"/>
            <column name="project_id" ignoreCase="true"/>
            <column name="a_count"  />
            <column name="c_count"/>
            <column name="g_count" />
            <column name="t_count" />
            <column name="other_count" />
            <column name="length"/>
            <column name="is_top_level" />
            <column name="formatted_length" sortingColumn="length"/>
            <column name="secondary_identifier" includeProjects="CryptoDB" />
            <column name="chromosomemappingtext" includeProjects="CryptoDB" />
            <column name="at_percent"/>
            <column name="organism_text" ignoreCase="true"/>
            <column name="formatted_organism"
                    sortingColumn="organism_text" ignoreCase="true"/>
            <column name="sequence_description" includeProjects="EuPathDB,PlasmoDB"
                    ignoreCase="true"/>
            <column name="genbank_accession" ignoreCase="true"/>
            <column name="externalDbName"/>
            <column name="externalDbVersion" />
            <column name="cyc_db" includeProjects="CryptoDB" />
            <sql excludeProjects="EuPathDB">
            <![CDATA[
                SELECT bfmv.source_id, bfmv.project_id, bfmv.a_count, bfmv.c_count,
                    bfmv.g_count, bfmv.t_count, bfmv.other_count,
                    bfmv.length, bfmv.at_percent, bfmv.organism as organism_text, bfmv.is_top_level,
                    trim(to_char(bfmv.length,'999,999,999')) as formatted_length,
                    '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.' ||
                    REGEXP_REPLACE(SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ')), '[[:space:]]+',
                                   chr(38) || 'nbsp;') || '</i>'
                      AS formatted_organism,
                    bfmv.ncbi_tax_id, bfmv.sequence_description,
                    bfmv.genbank_accession, bfmv.database_name,
                    bfmv.database_version as externalDbVersion, database_name as externalDbName,
                    bfmv.chromosome, bfmv.chromosome_order_num,
                    CASE WHEN (bfmv.chromosome is NOT NULL) THEN 'This is ' || bfmv.chromosome || '.'
                         WHEN (is_top_level=1 AND bfmv.chromosome is NULL) THEN 'This contig has not been mapped to a chromosome.' 
                         ELSE (SELECT 'This contig has been mapped to ' || virtual_source_id||' ( '|| sattr.chromosome || ' ).'
                                 FROM   apidb.scaffold_map sm, apidb.sequenceAttributes sattr
                                 WHERE  bfmv.source_id = sm.piece_source_id
                                 AND    sm.virtual_source_id = sattr.source_id )
                    END as chromosomemappingtext,
                    bfmv.source_id as secondary_identifier,
                    DECODE(
                    substr(bfmv.organism, 
                           instr(ltrim(bfmv.organism), ' ', 1, 1)+1, 
                           instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                          ),
                          'parvum', 'cparvum', 'hominis') as cyc_db
                   FROM apidb.SequenceAttributes bfmv
             ]]>
           </sql>
           <sql includeProjects="EuPathDB">
            <![CDATA[
                SELECT bfmv.source_id, bfmv.project_id, bfmv.a_count, bfmv.c_count,
                    bfmv.g_count, bfmv.t_count, bfmv.other_count,
                    bfmv.length, bfmv.at_percent, bfmv.organism as organism_text, bfmv.is_top_level,
                    trim(to_char(bfmv.length,'999,999,999')) as formatted_length,
                    '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.' ||
                    REGEXP_REPLACE(SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ')), '[[:space:]]+',
                                   chr(38) || 'nbsp;') || '</i>'
                      AS formatted_organism,
                    bfmv.ncbi_tax_id, bfmv.sequence_description,
                    bfmv.genbank_accession, bfmv.database_name,
                    bfmv.database_version as externalDbVersion, database_name as externalDbName,
                    bfmv.chromosome, bfmv.chromosome_order_num,
                    DECODE(bfmv.chromosome, NULL, 'No chromosome mapping available.',
                           'This contig has been mapped to chromosome ' || bfmv.chromosome || '.') as chromosomemappingtext,
                    bfmv.source_id as secondary_identifier,
                    DECODE(
                    substr(bfmv.organism, 
                           instr(ltrim(bfmv.organism), ' ', 1, 1)+1, 
                           instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                          ),
                          'parvum', 'cparvum', 'hominis') as cyc_db
                   FROM apidb.SequenceAttributes bfmv
             ]]>
           </sql>
        </sqlQuery>

        <sqlQuery name="GeneCount">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="gene_count"/>
            <sql>
            <![CDATA[
           select sa.source_id, sa.project_id, nvl(the_count, 0) as gene_count
           from apidb.sequenceAttributes sa,
             (select sa.source_id, sa.project_id, count(*) as the_count
              from apidb.sequenceAttributes sa, apidb.geneAttributes ga
              where ga.sequence_id = sa.source_id
              group by sa.source_id, sa.project_id) gc
           where sa.source_id = gc.source_id(+)
             ]]>
           </sql>
        </sqlQuery>

        <sqlQuery name="HasMSA" excludeProjects="EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="has_msa"/>
            <sql>
            <![CDATA[
           select sa.source_id, sa.project_id, nvl(the_count/the_count, 0) as has_msa
           from apidb.sequenceAttributes sa,
             (select sa.source_id, sa.project_id, count(*) as the_count
              from apidb.sequenceAttributes sa, apidb.synteny syn
              where syn.a_na_sequence_id = sa.na_sequence_id
              group by sa.source_id, sa.project_id) s
           where sa.source_id = s.source_id(+)
             ]]>
           </sql>
        </sqlQuery>


       <sqlQuery name="Aliases" includeProjects="GiardiaDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="alias"/>
            <sql>
            <![CDATA[
            SELECT  CASE WHEN (NOT lower(sequence) = id) THEN id  ELSE 'none' END AS alias, 
                    sequence AS source_id, '@PROJECT_ID@' AS project_id
            FROM    apidb.SequenceId si 
             ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Attribution -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="Attribution" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="short_name"/>
            <sql>
            <![CDATA[
               SELECT ens.source_id, '@PROJECT_ID@' as project_id, 
                       decode(ed.name,
                              'Jane Carlton P. vivax chromosomes', 'TIGR',
                              'Sanger Preichenowi_Contigs_RSRC', 'Sanger',
                              'Pyoelii_Contigs_RSRC', 'TIGR',
                              'Pberghei_chromosomes_RSRC', 'Sanger',
                              'Sanger Pgallinaceum_Contigs_RSRC', 'Sanger',
                              'Pfalciparum_chromosomes_RSRC', 'Sanger',
                              'Sanger P. knowlesi contigs', 'Sanger',
                              'P. chabaudi genome', 'Sanger',
                              'P. falciparum mitochondrial genome', 'LSHTM',
                              'P. falciparum plastid-like DNA', 'NIMR',
                              ed.name) AS short_name
                FROM dots.NaSequence ens,
                     sres.ExternalDatabaseRelease edr,
                     sres.ExternalDatabase ed,
                     apidb.sequenceAttributes sa
                WHERE ens.external_database_release_id = edr.external_database_release_id
                  AND sa.source_id = ens.source_id
                  AND edr.external_database_id = ed.external_database_id
             ]]>
           </sql>

        </sqlQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- GFF sequence-->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="SequenceGffSequence" excludeProjects="EuPathDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="gff_sequence"/>
        <sql>
            select ns.source_id, '@PROJECT_ID@' as project_id,
                   ns.sequence as gff_sequence
            from apidb.SequenceAttributes gs,
                 dots.NaSequence ns
            where ns.na_sequence_id = gs.na_sequence_id
        </sql>
    </sqlQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- GFF attributes (other than sequence) -->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="SequenceGffAttrs" excludeProjects="EuPathDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_web_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_size"/>
        <column name="gff_attr_molecule_type"/>
        <column name="gff_attr_organism_name"/>
        <column name="gff_attr_translation_table"/>
        <column name="gff_attr_topology"/>
        <column name="gff_attr_localization"/>
        <column name="gff_is_top_level"/>
        <sql>
            select ns.source_id, '@PROJECT_ID@' as project_id,
                   'apidb|' || ns.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   'supercontig' as gff_type,
                   1 as gff_fstart,
                   ns.length as gff_fend,
                   '.' as gff_score,
                   '+' as gff_strand,
                   '.' as gff_phase,
                  'apidb|' || ns.source_id as gff_attr_id,
                   ns.source_id as gff_attr_web_id,
                   ns.source_id as gff_attr_name,
                   ns.description as gff_attr_description,
                   ns.length as gff_attr_size,
                   'dsDNA' as gff_attr_molecule_type,
                   SUBSTR(tn.name, 1, INSTR(tn.name || '  ', ' ', 1, 2) - 1) as gff_attr_organism_name,
                   11 as gff_attr_translation_table,
                   'linear' as gff_attr_topology,
                   'nuclear' as gff_attr_localization,
                    gs.is_top_level as gff_is_top_level
            from apidb.SequenceAttributes gs,
                 dots.NaSequence ns,
                 sres.externaldatabase ed,
                 sres.externaldatabaserelease edr,
                 sres.TaxonName tn
            where ns.na_sequence_id = gs.na_sequence_id
              and ns.external_database_release_id = edr.external_database_release_id
              and edr.external_database_id = ed.external_database_id
              and ns.taxon_id = tn.taxon_id
              and tn.name_class = 'scientific name'
        </sql>
    </sqlQuery>

  </querySet>

</wdkModel>
