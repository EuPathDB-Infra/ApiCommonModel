<wdkModel>
    <querySet name="GeneAttributes" queryType="attribute" isCacheable="false">

     <!-- notes

       - all projects need a gene alias query (or, we have to break that out of the 
         <recordClass> element

     -->


            <defaultTestParamValues includeProjects="PlasmoDB,EuPathDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">PlasmoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_221330</paramValue>
               <paramValue name="project_id">ToxoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd3_1400</paramValue>
               <paramValue name="project_id">CryptoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">GiardiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="TrichDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">TrichDB</paramValue>
            </defaultTestParamValues>

            <!--TODO revisit the source_id, its correct but is a random source_id-->
            <defaultTestParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">TriTrypDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">AmoebaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU07_1760</paramValue>
               <paramValue name="project_id">MicrosporidiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="PiroplasmaDB">
               <paramValue name="source_id">BBOV_IV003850</paramValue>
               <paramValue name="project_id">PiroplasmaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="HostDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">HostDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="FungiDB,SchistoDB,InitDB">
               <paramValue name="source_id"></paramValue>
               <paramValue name="project_id"></paramValue>
            </defaultTestParamValues>

            <testRowCountSql excludeProjects="EuPathDB">
               select count(na_feature_id)
               from dots.GeneFeature
               where external_database_release_id in (
                 select distinct(dbr.external_database_release_id)
                 from ApidbTuning.GeneAttributes ga, sres.ExternalDatabase db,
                      sres.ExternalDatabaseRelease dbr
                 where db.name = ga.external_db_name
                   and dbr.version = ga.external_db_version
                   and dbr.external_database_id = db.external_database_id
                 )
            </testRowCountSql>

            <testRowCountSql includeProjects="EuPathDB">
               SELECT count(*) FROM ApidbTuning.GeneAttributes
            </testRowCountSql>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Gene alias -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="GeneAlias" doNotTest="true">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="old_source_id"/>
            <column name="old_project_id"/>
            <sql excludeProjects="ToxoDB">
              <![CDATA[
                SELECT ga.source_id, 
                       '@PROJECT_ID@' AS project_id,
                       a.ID as old_source_id, '@PROJECT_ID@' AS old_project_id
                FROM ApidbTuning.GeneId a, ApidbTuning.GeneAttributes ga
                WHERE ga.source_id = a.gene
                  AND a.unique_mapping = 1
              ]]>
            </sql>
            <sql includeProjects="ToxoDB">
              <![CDATA[
                SELECT f.gene as source_id, '@PROJECT_ID@' AS project_id,
                       f.id as old_source_id, '@PROJECT_ID@' AS old_project_id
                FROM (SELECT gene AS id, gene
                      FROM ApidbTuning.GeneId
                      WHERE id = lower(gene)
                      UNION
                      SELECT id, gene
                      FROM ApidbTuning.GeneId
                      WHERE id <> lower(gene)) f
              ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- TrackNewAnnotation -->
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--  the workshop (re) annotations have become the official annotations and this section is obsolete

        <sqlQuery name="TrackNewAnnotation" includeProjects="PlasmoDB">
           <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PF11_0344</paramValue>
            </testParamValues>

            <column name="project_id"/>
            <column name="source_id" />
            <column name="annotation_status" />
            <column name="new_product" />
            <column name="new_go" />
            <column name="new_ec" />
            <column name="new_protein" />
            <column name="new_product_string"/>
            <sql>
               select '@PROJECT_ID@' as project_id, ga.source_id, tna.status as annotation_status, tna.new_product, tna.new_go, tna.new_ec, tna.new_protein, tna.product as new_product_string
               from Apidb.TRACKNEWANNOTATION tna, ApidbTuning.GeneAttributes ga WHERE ga.source_id = tna.source_id(+)
            </sql>
        </sqlQuery>
-->

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!--  new annotation at GeneDB -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <sqlQuery name="updated_annotation" includeProjects="TriTrypDB,PlasmoDB">
           <testParamValues includeProjects="TriTrypDB">
              <paramValue name="source_id">LbrM.08.0010</paramValue>
           </testParamValues>

            <column name="project_id"/>
            <column name="source_id"/>
            <column name="updated_annotation"/>
            <column name="reviewed_comment_in_genedb"/>
            <column name="reviewed_comment_in_eupathdb"/>
            <sql>
               <![CDATA[
                  select gi.gene as source_id, '@PROJECT_ID@' as project_id,
                         case when max(changes.gene) is null then null
                              else gi.gene
                         end as updated_annotation,
                         count (reviewed.gene) as reviewed_comment_in_genedb,
                         count (reviewed_in_eupathdb.gene) as reviewed_comment_in_eupathdb
                  from ApidbTuning.GeneId gi,
                       (select gene
                        from ApidbTuning.AnnotationChange
                       ) changes,
                       (select gene
                        from ApidbTuning.ReviewedComment
                       ) reviewed,
                       (select gf.source_id as gene
                          FROM   sres.dbref dr, 
                                 dots.DbRefNaFeature drnf,
                                 dots.GeneFeature gf, 
                                 sres.externaldatabase ed, 
                                 sres.externaldatabaserelease edr 
                          WHERE drnf.db_ref_id = dr.db_ref_id
                            AND gf.na_feature_id = drnf.na_feature_id
                            AND ed.external_database_id = edr.external_database_id
                            AND edr.external_database_release_id = dr.external_database_release_id
                            AND ed.name like '%_dbxref_EuPathDB_comment_RSRC'
                       ) reviewed_in_eupathdb 
                  where gi.id = changes.gene(+)
                    and gi.id = reviewed.gene(+)
                    and gi.id = reviewed_in_eupathdb.gene(+)
                  group by gi.gene
               ]]>
            </sql>
        </sqlQuery> 

        <sqlQuery name="Bfmv">
            <column name="project_id" ignoreCase="true"/>
            <column name="lc_project_id" ignoreCase="false"/>
            <column name="source_id" ignoreCase="true"/>
            <column name="gene_type" ignoreCase="true"/>
            <column name="product" ignoreCase="true"/>
            <column name="name" ignoreCase="true"/>
            <column name="start_min"/>
            <column name="end_max"/>
            <column name="start_min_text" sortingColumn="start_min"/>
            <column name="end_max_text" sortingColumn="end_max"/>
            <column name="transcript_length"/>
            <column name="cds_length"/>
            <column name="protein_length"/>
            <column name="context_start"/>
            <column name="context_end"/>
            <column name="coding_start"/>
            <column name="coding_end"/>
            <column name="strand_plus_minus" sortingColumn="strand"/>
            <column name="sequence_id" ignoreCase="true"/>
            <column name="cyc_db" sortingColumn="organism_full"
                    excludeProjects="AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,SchistoDB,InitDB,PiroplasmaDB"/>
            <column name="cyc_gene_id" sortingColumn="source_id"/>
            <column name="tm_count"/>
            <column name="so_id"/>
            <column name="so_term_name"/>
            <column name="so_term_definition"/>
            <column name="ontology_name"/>
            <column name="so_version"/>
            <column name="anticodon"/>
            <column name="molecular_weight"/>
            <column name="isoelectric_point"/>
            <column name="min_molecular_weight"/>
            <column name="max_molecular_weight"/>
            <column name="hydropathicity_gravy_score"/>
            <column name="aromaticity_score"/>
            <column name="external_db_name"/>
            <column name="external_db_version"/>
            <column name="ncbi_tax_id"/>
            <column name="chromosome" sortingColumn="chromosome_order_num"/>
            <column name="chromosome_order_num"/>
            <column name="is_pseudo"/>
            <column name="pseudo_string"/>
            <column name="genus_species"  sortingColumn="organism_full"/>
            <column name="organism_full"  sortingColumn="organism_full"/> 
            <column name="organism_text"  sortingColumn="organism_full"/>
            <column name="project"  ignoreCase="true"/>
            <column name="exon_count"/>
            <column name="strand"/>
            <column name="ec_numbers_string"/>
            <column name="ec_numbers_inferred_string"/>
            <column name="protein_source_id"/>
            <column name="orthomcl_name"/>
            <column name="orthomcl_link"/>
            <column name="total_hts_snps"/>
            <column name="hts_nonsynonymous_snps"/>
            <column name="hts_synonymous_snps"/>
            <column name="hts_stop_codon_snps"/>
            <column name="hts_noncoding_snps"/>
            <column name="hts_nonsyn_syn_ratio"/> 
            <column name="five_prime_utr_length"/>
            <column name="three_prime_utr_length"/>
            <column name="signalp_scores"/>
            <column name="signalp_peptide"/>
            <column name="ortholog_number"/>
            <column name="paralog_number"/>
            <column name="ann_go_component" excludeProjects="GiardiaDB,MicrosporidiaDB"/>
            <column name="ann_go_process" excludeProjects="GiardiaDB,MicrosporidiaDB"/>
            <column name="ann_go_function" excludeProjects="GiardiaDB,MicrosporidiaDB"/>
            <column name="pred_go_component"/>
            <column name="pred_go_process"/>
            <column name="pred_go_function"/>
            <column name="ann_go_id_component" excludeProjects="GiardiaDB,MicrosporidiaDB"/>
            <column name="ann_go_id_process" excludeProjects="GiardiaDB,MicrosporidiaDB"/>
            <column name="ann_go_id_function" excludeProjects="GiardiaDB,MicrosporidiaDB"/>
            <column name="pred_go_id_component"/>
            <column name="pred_go_id_process"/>
            <column name="pred_go_id_function"/>
            <column name="formatted_gene_id"
                    sortingColumn="gene_id" includeProjects="ToxoDB,EuPathDB"/>
            <column name="gene_id" includeProjects="ToxoDB,EuPathDB"/>
            <column name="uniprot_id"/>
            <column name="uniprot_id_internal"/>
            <column name="entrez_id"/>
            <column name="spz_gam_max_expr_timing" includeProjects="PlasmoDB"/>
            <column name="spz_gam_min_expr_timing" includeProjects="PlasmoDB"/>
            <column name="spz_gam_max_pct" includeProjects="PlasmoDB"/>
            <column name="spz_gam_max_fold_ind" includeProjects="PlasmoDB"/>
            <column name="representative_gene" includeProjects="ToxoDB,EuPathDB"/>
            <column name="gene_name" excludeProjects="EuPathDB"/>
            <column name="old_ids" excludeProjects="EuPathDB"/>

            <!-- DerisiExprStats -->
            <column name="derisi_48hr_max_expr_timing" includeProjects="PlasmoDB"/>
            <column name="derisi_48hr_min_expr_timing" includeProjects="PlasmoDB"/>
            <column name="derisi_48hr_max_pct" includeProjects="PlasmoDB"/>
            <column name="derisi_48hr_max_fold_ind" includeProjects="PlasmoDB"/>

            <!-- LegacyPlasmoExpressionGraphs -->
            <column name="graph_daily" includeProjects="PlasmoDB"/>

            <!-- Brady 72Hr -->
            <column name="pru_alk_72hr_max_expr_timing" includeProjects="ToxoDB"/>
            <column name="pru_alk_72hr_min_expr_timing" includeProjects="ToxoDB"/>
            <column name="pru_alk_72hr_max_pct" includeProjects="ToxoDB"/>
            <column name="pru_alk_72hr_max_fold_ind" includeProjects="ToxoDB"/>

            <!-- PruCO272HrExprStats -->
            <column name="pru_co2_72hr_max_expr_timing" includeProjects="ToxoDB"/>
            <column name="pru_co2_72hr_min_expr_timing" includeProjects="ToxoDB"/>
            <column name="pru_co2_72hr_max_pct" includeProjects="ToxoDB"/>
            <column name="pru_co2_72hr_max_fold_ind" includeProjects="ToxoDB"/>

            <!-- RBCiRnaSeqExprStats -->
            <column name="rbci_rnaseq_max_expr_timing" includeProjects="PlasmoDB"/>
            <column name="rbci_rnaseq_min_expr_timing" includeProjects="PlasmoDB"/>
            <column name="rbci_rnaseq_max_pct" includeProjects="PlasmoDB"/>
            <column name="rbci_rnaseq_max_fold_ind" includeProjects="PlasmoDB"/>

            <column name="is_deprecated"/>

            <sqlParamValue name="organismTexts" excludeProjects="GiardiaDB">
                SUBSTR(bfmv.organism, 1, 1) || '. ' ||
                      SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) as organism_text,
            </sqlParamValue>

            <sqlParamValue name="organismTexts" includeProjects="GiardiaDB">
                bfmv.organism as organism_text,
            </sqlParamValue>


             <sqlParamValue name="toxo_expression" includeProjects="ToxoDB,EuPathDB">
                <![CDATA[
                   gene_id,
                   CASE WHEN bfmv.organism like 'Toxo%' THEN 'TG_' || to_char(bfmv.gene_id)
                        ELSE to_char(bfmv.gene_id) END as formatted_gene_id,
                ]]>
            </sqlParamValue>
            <sqlParamValue name="toxo_expression" excludeProjects="ToxoDB,EuPathDB">
                <![CDATA[
                ]]>
            </sqlParamValue>

            <sqlParamValue name="cyc_db" includeProjects="PlasmoDB,EuPathDB">
                <![CDATA[
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'PLASMO', null)
                ]]>
            </sqlParamValue>
            <sqlParamValue name="cyc_db" includeProjects="ToxoDB">
                <![CDATA[
                   'TOXO'
                ]]>
            </sqlParamValue>
 <!-- TODO : check this -->
            <sqlParamValue name="cyc_db" includeProjects="CryptoDB,GiardiaDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,SchistoDB,InitDB,PiroplasmaDB">
                <![CDATA[
                   DECODE(
                   substr(
                     bfmv.organism, 
                     instr(ltrim(bfmv.organism), ' ', 1, 1)+1, 
                     instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                   ),
                  'parvum', 'cparvum', 'hominis')
                ]]>
            </sqlParamValue>

            <sql>
            <![CDATA[
            SELECT bfmv.source_id, bfmv.gene_type, bfmv.product, bfmv.name, bfmv.project_id,
                   lower(bfmv.project_id) as lc_project_id,
                   bfmv.project_id as project, start_min, end_max,
                   trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text,
                   trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text,
                   decode(strand,'forward','+','reverse','-',null) as strand_plus_minus,
                   bfmv.cds_length, bfmv.protein_length, bfmv.transcript_length,
                   bfmv.context_start,bfmv.context_end,
                   bfmv.coding_start,bfmv.coding_end,
                   bfmv.sequence_id, bfmv.organism as organism_full, bfmv.tm_count, bfmv.so_id,
                   bfmv.so_term_name, bfmv.so_term_definition,
                   bfmv.ontology_name, bfmv.so_version, bfmv.anticodon,
                   bfmv.molecular_weight, bfmv.isoelectric_point,
                   bfmv.min_molecular_weight, bfmv.max_molecular_weight,
                   bfmv.hydropathicity_gravy_score, bfmv.aromaticity_score,
                   bfmv.external_db_name, bfmv.external_db_version,
                   bfmv.exon_count, bfmv.ncbi_tax_id,
                   species AS genus_species,
                   &&organismTexts&&
                   &&cyc_db&& AS cyc_db,
                   &&toxo_expression&&
                   UPPER(bfmv.source_id) AS cyc_gene_id,
                   bfmv.strand, bfmv.orthomcl_name,
                   bfmv.ec_numbers as ec_numbers_string,
                   bfmv.ec_numbers_derived as ec_numbers_inferred_string,
                   CASE WHEN (bfmv.orthomcl_name LIKE 'OG5%' AND bfmv.orthomcl_name NOT LIKE '%|%')
                        THEN '<a href="http://orthomcl.org/cgi-bin/OrthoMclWeb.cgi?rm=sequenceList&groupac=' ||
                        orthomcl_name || '">' || orthomcl_name || '</a>'
                        ELSE orthomcl_name END AS orthomcl_link,
                   bfmv.annotated_go_component as ann_go_component,
                   bfmv.annotated_go_function as ann_go_function,
                   bfmv.annotated_go_process as ann_go_process,
                   bfmv.predicted_go_component as pred_go_component,
                   bfmv.predicted_go_function as pred_go_function,
                   bfmv.predicted_go_process as pred_go_process,
                   bfmv.annotated_go_id_component as ann_go_id_component,
                   bfmv.annotated_go_id_function as ann_go_id_function,
                   bfmv.annotated_go_id_process as ann_go_id_process,
                   bfmv.predicted_go_id_component as pred_go_id_component,
                   bfmv.predicted_go_id_function as pred_go_id_function,
                   bfmv.predicted_go_id_process as pred_go_id_process,
                   DECODE(bfmv.is_deprecated, 0, 'No', 1, 'Yes') AS is_deprecated,
                   bfmv.total_hts_snps,
                   bfmv.hts_nonsynonymous_snps,
                   bfmv.hts_synonymous_snps,
                   bfmv.hts_noncoding_snps,
                   bfmv.hts_stop_codon_snps,
                   bfmv.hts_nonsyn_syn_ratio,
                   bfmv.five_prime_utr_length,
                   bfmv.three_prime_utr_length,
                   bfmv.signalp_scores,bfmv.signalp_peptide,
                   ortholog_number,paralog_number, 
                   CASE WHEN chromosome_order_num is null THEN 'Not Assigned'
                        ELSE to_char(chromosome)
                   END as chromosome,
                   /*CASE WHEN chromosome_order_num is null THEN 'Not Assigned'
                          ELSE to_char(chromosome_order_num)
                     END as */ chromosome_order_num,
                   decode(is_pseudo,0,'gene',1,'pseudogene') as pseudo_string,
                   decode(is_pseudo,0,'No',1,'Yes') as is_pseudo,
                   protein_source_id, uniprot_id, uniprot_id_internal, entrez_id,
                   representative_gene, spz_gam_max_expr_timing, spz_gam_min_expr_timing,
                   spz_gam_max_pct, spz_gam_max_fold_ind, name as gene_name, old_ids,
                   derisi_48hr_max_expr_timing, derisi_48hr_min_expr_timing,
                   derisi_48hr_max_pct, derisi_48hr_max_fold_ind, graph_daily,
                   pru_alk_72hr_max_expr_timing, pru_alk_72hr_min_expr_timing,
                   pru_alk_72hr_max_pct, pru_alk_72hr_max_fold_ind,
                   pru_co2_72hr_max_expr_timing, pru_co2_72hr_min_expr_timing,
                   pru_co2_72hr_max_pct, pru_co2_72hr_max_fold_ind,
                   rbci_rnaseq_max_expr_timing, rbci_rnaseq_min_expr_timing,
                   rbci_rnaseq_max_pct, rbci_rnaseq_max_fold_ind
            from ApidbTuning.GeneAttributes bfmv
            ]]>
            </sql>

<!-- note that moved following up into sqlParamValues .. delete when all works

            <sql includeProjects="CryptoDB,GiardiaDB,TrichDB">
            <![CDATA[
            SELECT bfmv.source_id, bfmv.gene_type, bfmv.product,bfmv.project_id,
                   start_min, end_max,
                   trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text,
                   trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text,
                   decode(strand,'forward','+','reverse','-',null) as strand_plus_minus,
                   bfmv.cds_length, bfmv.protein_length, bfmv.transcript_length,
                   bfmv.context_start, bfmv.context_end, bfmv.strand,
                   bfmv.sequence_id,
                   '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.&nbsp;' || 
                       SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) || '</i>' as organism,
                   bfmv.organism  as organism_full, 
                   bfmv.tm_count, bfmv.so_id,
                   bfmv.so_term_name, bfmv.so_term_definition,
                   bfmv.ontology_name, bfmv.so_version, bfmv.anticodon,
                   bfmv.molecular_weight, bfmv.isoelectric_point,
                   bfmv.min_molecular_weight, bfmv.max_molecular_weight,
                   bfmv.hydropathicity_gravy_score, bfmv.aromaticity_score,
                   bfmv.external_db_name, bfmv.external_db_version, 
                   bfmv.exon_count, bfmv.ncbi_tax_id,
                   SUBSTR(bfmv.organism, 1, INSTR(bfmv.organism || '  ', ' ', 1, 2) - 1) AS genus_species,
                   SUBSTR(bfmv.organism,
                          INSTR(bfmv.organism, ' ') + 1,
                          INSTR(bfmv.organism || '  ', ' ', 1, 2) - INSTR(bfmv.organism, ' ') - 1) AS species,
                   DECODE(
                   substr(
                     bfmv.organism, 
                     instr(ltrim(bfmv.organism), ' ', 1, 1)+1, 
                     instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                   ),
                  'parvum', 'cparvum', 'hominis')
                   AS cyc_db,
                   UPPER(bfmv.source_id) AS cyc_gene_id,
                   bfmv.ec_numbers as ec_numbers_string,
                   bfmv.annotated_go_component as ann_go_component,
                   bfmv.annotated_go_function as ann_go_function,
                   bfmv.annotated_go_process as ann_go_process,
                   bfmv.predicted_go_component as pred_go_component,
                   bfmv.predicted_go_function as pred_go_function,
                   &&is_deprecated&&
                   bfmv.predicted_go_process as pred_go_process
            FROM ApidbTuning.GeneAttributes bfmv
            ]]>
            </sql>
            <sql includeProjects="EuPathDB">
            <![CDATA[
            SELECT bfmv.source_id, bfmv.gene_type, bfmv.product, bfmv.project_id,
                   start_min, end_max,
                   trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text,
                   trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text,
                   decode(strand,'forward','+','reverse','-',null) as strand_plus_minus,
                   bfmv.cds_length, bfmv.protein_length, bfmv.transcript_length,
                   bfmv.context_start, bfmv.context_end, 
                   bfmv.sequence_id, 
                   bfmv.organism  as organism_full, 
                   bfmv.tm_count, bfmv.so_id,
                   bfmv.so_term_name, bfmv.so_term_definition,
                   bfmv.ontology_name, bfmv.so_version, bfmv.anticodon,
                   bfmv.molecular_weight, bfmv.isoelectric_point,
                   bfmv.min_molecular_weight, bfmv.max_molecular_weight,
                   bfmv.hydropathicity_gravy_score, bfmv.aromaticity_score,
                   bfmv.external_db_name, bfmv.external_db_version,
                   bfmv.exon_count, bfmv.ncbi_tax_id,
                   SUBSTR(bfmv.organism, 1, INSTR(bfmv.organism || '  ', ' ', 1, 2) - 1) AS genus_species,
                   '<i>' || SUBSTR(bfmv.organism, 1, 1) || '.&nbsp;' || 
                       SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) || '</i>' as organism,
                   SUBSTR(bfmv.organism,
                          INSTR(bfmv.organism, ' ') + 1,
                          INSTR(bfmv.organism || '  ', ' ', 1, 2) - INSTR(bfmv.organism, ' ') - 1) AS species,
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'PLASMO', null)
                   AS cyc_db,
                   UPPER(bfmv.source_id) AS cyc_gene_id,
                   bfmv.strand,bfmv.ec_numbers as ec_numbers_string,
                   bfmv.annotated_go_component as ann_go_component,
                   bfmv.annotated_go_function as ann_go_function,
                   bfmv.annotated_go_process as ann_go_process,
                   bfmv.predicted_go_component as pred_go_component,
                   bfmv.predicted_go_function as pred_go_function,
                   bfmv.predicted_go_process as pred_go_process,
                   bfmv.derisi_max_level as der_max_level,
                   bfmv.derisi_min_level as der_min_level,
                   bfmv.derisi_min_timing as der_min_timing,
                   bfmv.derisi_max_timing as der_max_timing,
                   bfmv.derisi_max_pct as der_max_pct,
                   bfmv.winzeler_max_level as winz_max_level,
                   bfmv.winzeler_min_level as winz_min_level,
                   bfmv.winzeler_min_timing as winz_min_timing,
                   bfmv.winzeler_max_timing as winz_max_timing,
                   bfmv.winzeler_max_pct as winz_max_pct
            FROM ApidbTuning.GeneAttributes bfmv
            ]]>
            </sql>
-->

        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- protein sequence  -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="ChromosomeMappingText" displayName="Chromosome" includeProjects="CryptoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="chromosomemappingtext"/>
            <sql>
            <![CDATA[SELECT ga.source_id,'@PROJECT_ID@' as project_id,
                            CASE WHEN ga.chromosome IS NOT NULL
                                 THEN '( ' || ga.chromosome || ' )'
                                 ELSE '' END AS chromosomemappingtext
                     FROM ApidbTuning.GeneAttributes ga
            ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- protein sequence new annotation  -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--  the workshop (re) annotations have become the official annotations and this section is obsolete

        <sqlQuery name="NewAnnotationProteinSequence" displayName="New Annotation Protein Sequence" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="workshop_protein_sequence"/>
            <sql>
            <![CDATA[
            SELECT tna.source_id,
                   tas.sequence AS workshop_protein_sequence,'@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.TranslatedAaSequence tas,
                 apidb.TRACKNEWANNOTATION tna
            WHERE tna.new_source_id = gf.source_id
              AND t.parent_id(+) = gf.na_feature_id
              AND t.na_feature_id = taf.na_feature_id(+)
              AND taf.aa_sequence_id = tas.aa_sequence_id(+)
            ]]>
            </sql>>
        </sqlQuery
 -->




        <sqlQuery name="ProteinSequence">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="protein_sequence"/>
            <sql>
            <![CDATA[
            SELECT ga.source_id, ga.project_id, ps.sequence AS protein_sequence
            FROM   ApidbTuning.ProteinSequence ps, ApidbTuning.GeneAttributes ga
            WHERE ga.source_id = ps.source_id (+)
            ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="GeneDBUpdatedProductName" includeProjects="TriTrypDB,PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="new_product_name"/>
            <sql>
            <![CDATA[
          SELECT source_id, 
                 project_id,
                 RTRIM (xmlagg (xmlelement (c, genedb_product_name || ' ; ') order by genedb_product_name).extract ('//text()'), ' ; ' ) AS new_product_name                
       /*           The above line collates the product names into a string with ';' delimiter. This is for scenarios where there are more than one 
                    possible product names provided from GeneDB (due to alternate splicing etc.) In Oracle 11g this can be accomplished
                    simply by using LISTAGG, but this is not provided in lesser versions.
      */  FROM  (SELECT  distinct ga.source_id as source_id, '@PROJECT_ID@' as project_id,
                                  CASE WHEN c.product != ga.product THEN c.product ELSE null END as genedb_product_name
                 FROM    ApidbTuning.GeneAttributes ga,
                        (select distinct gi.gene, cgp.product from apidbtuning.geneid gi, apidbtuning.changedgeneproduct cgp where upper(gi.id) = upper(cgp.gene)) c
                 WHERE   ga.source_id = c.gene(+)
                 )
          GROUP BY project_id,source_id
            ]]>
            </sql>
        </sqlQuery>


        <sqlQuery name="NaSequenceDatabaseName" excludeProjects="EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="sequence_database_name"/>
            <sql>
            <![CDATA[
            select ga.source_id, sa.database_name as sequence_database_name, '@PROJECT_ID@' as project_id
            from ApidbTuning.GeneAttributes ga, ApidbTuning.SequenceAttributes sa
            where ga.sequence_id = sa.source_id
            ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- transcript sequence -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--  the workshop (re) annotations have become the official annotations and this section is obsolete

        <sqlQuery name="NewAnnotationTranscriptSequence"
                       displayName="RNA Sequence" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="workshop_transcript_sequence"/>
            <sql>
            <![CDATA[
              select tna.source_id, s.sequence as workshop_transcript_sequence,'@PROJECT_ID@' as project_id
              from dots.genefeature gf, dots.transcript t, dots.splicednasequence s, apidb.TRACKNEWANNOTATION tna
              where tna.new_source_id = gf.source_id
                and t.parent_id = gf.na_feature_id
                and s.na_sequence_id = t.na_sequence_id
            ]]>
            </sql>
        </sqlQuery>
-->

        <sqlQuery name="TranscriptSequence">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="transcript_sequence"/>
            <sql>
            <![CDATA[
             SELECT source_id, project_id, sequence AS transcript_sequence
             FROM   ApidbTuning.TranscriptSequence
            ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- cds sequence -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--  the workshop (re) annotations have become the official annotations and this section is obsolete

        <sqlQuery name="NewAnnotationCDS"
                       displayName="New Annotation RNA Sequence" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="workshop_cds"/>
            <sql>
            <![CDATA[
              SELECT tna.source_id,
                     SUBSTR(s.sequence,
                            tf.translation_start,
                            tf.translation_stop - tf.translation_start + 1)
                       AS workshop_cds,'@PROJECT_ID@' as project_id
              FROM dots.genefeature gf, dots.transcript t,
                   dots.splicednasequence s, dots.TranslatedAaFeature tf,
                   apidb.TRACKNEWANNOTATION tna
              WHERE tna.new_source_id = gf.source_id
                AND t.parent_id = gf.na_feature_id
                AND s.na_sequence_id = t.na_sequence_id
                AND t.na_feature_id = tf.na_feature_id(+)
            ]]>
            </sql>
        </sqlQuery>
-->

        <sqlQuery name="CDS">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="cds"/>
            <sql>
            <![CDATA[
              SELECT ga.source_id, ga.project_id, cs.sequence AS cds
              FROM   ApidbTuning.CodingSequence cs, ApidbTuning.GeneAttributes ga
              WHERE ga.source_id = cs.source_id (+)
            ]]>
            </sql>
        </sqlQuery>




       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Number of associated metabolic pathways -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <sqlQuery name="PathwaysCount"  includeProjects="PlasmoDB" doNotTest="true">
           <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PF3D7_1247300</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="pathway_count"/>
            <sql>
            <![CDATA[
        SELECT nvl(pathway_count,0) as pathway_count, ga.project_id, ga.source_id from (
        SELECT  count (distinct n.name) as pathway_count, '@PROJECT_ID@' as project_id, ga.source_id
        from sres.enzymeClass ec, dots.aaSequenceEnzymeClass asec, ApidbTuning.GeneAttributes ga,
               apidb.networkrelationship nr, apidb.networkrelationshiptype nrt,
               ApiDB.NetworkRelContext nrc,  apidb.NetworkContext n, ApiDB.NetworkRelContextLink nrl, apidb.networknode nn
        where  ga.aa_sequence_id = asec.aa_sequence_id
        AND    asec.enzyme_class_id = ec.enzyme_class_id
        and    nn.display_label = ec.ec_number
        and    nr.associated_node_id = nn.network_node_id
        and    nrc.network_relationship_id = nr.network_relationship_id
        and    nrt.network_relationship_type_id = nrc.network_relationship_type_id
        and    nrl.network_rel_context_id = nrc.network_rel_context_id
        and    nrc.network_context_id = n.network_context_id
        group by ga.source_id) counter, ApidbTuning.GeneAttributes ga
        where counter.source_id(+) = ga.source_id
        
            ]]>
            </sql>
        </sqlQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Plasmo Expression Profile Stats -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    
    <!-- Microarray -->
    <!-- Derisi Expression Timing
    <sqlQuery name="DerisiExprStats" includeProjects="PlasmoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="derisi_48hr_max_expr_timing"/>
        <column name="derisi_48hr_min_expr_timing"/>
        <column name="derisi_48hr_max_pct"/>
        <column name="derisi_48hr_max_fold_ind"/>
        <sql> 
         <![CDATA[
          SELECT distinct  ga.source_id as source_id,
                 expn.max_timing as derisi_48hr_max_expr_timing,
                 expn.min_timing as derisi_48hr_min_expr_timing, 
                 ROUND(percentile.max_pct,1) as derisi_48hr_max_pct,
                 ROUND(expn.max_fold_induction,1) as derisi_48hr_max_fold_ind, 
                'PlasmoDB' as project_id
          FROM       
              (SELECT * FROM (SELECT p.source_id as source_id,
                            p.time_of_max_expr as max_timing,
                            p.time_of_min_expr AS min_timing,
                            p.ind_ratio as max_fold_induction,
                            row_number() over (partition by p.source_id order by p.ind_ratio desc) row_number
                     FROM apidb.Profile p, apidb.ProfileSet ps
                     WHERE ps.name like 'DeRisi % Smoothed'
                       AND p.profile_set_id = ps.profile_set_id)
                     WHERE row_number = 1) expn,
              (SELECT p.source_id, max(p.max_percentile) as max_pct
                    FROM apidb.Profile p, apidb.ProfileSet ps
                    WHERE ps.name like 'DeRisi % Smoothed'
                    AND p.profile_set_id = ps.profile_set_id
                    GROUP BY p.source_id) percentile,
               apidbtuning.geneAttributes ga
               where ga.source_id = percentile.source_id(+)
               and ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
       -->

    <!-- Waters HP/HPE Timing -->
    <sqlQuery name="WatersExprStats" includeProjects="PlasmoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="hp_hpe_max_expr_timing"/>
        <column name="hp_hpe_min_expr_timing"/>
        <column name="hp_hpe_max_pct"/>
        <column name="hp_hpe_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as hp_hpe_max_expr_timing, expn.min_timing as hp_hpe_min_expr_timing, 
                 max_pct as hp_hpe_max_pct, expn.max_fold_induction as hp_hpe_max_fold_ind, 'PlasmoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'Waters HP'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
               where ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

    <!-- P vivax Patients Expression Timing -->
    <sqlQuery name="ZBPatientsExprStats" includeProjects="PlasmoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="patients_max_expr_timing"/>
        <column name="patients_min_expr_timing"/>
        <column name="patients_max_pct"/>
        <column name="patients_max_fold_ind"/>
        <sql> 
         <![CDATA[
          SELECT distinct ga.source_id as source_id,
                 expn.max_timing as patients_max_expr_timing,
                 expn.min_timing as patients_min_expr_timing, 
                 ROUND(percentile.max_pct,1) as patients_max_pct,
                 ROUND(expn.max_fold_induction,1) as patients_max_fold_ind, 
                'PlasmoDB' as project_id
          FROM       
              (SELECT * FROM (SELECT p.source_id as source_id,
                            p.time_of_max_expr as max_timing,
                            p.time_of_min_expr AS min_timing,
                            p.ind_ratio as max_fold_induction,
                            row_number() over (partition by p.source_id order by p.ind_ratio desc) row_number
                     FROM apidb.Profile p, apidb.ProfileSet ps
                     WHERE ps.name like 'ZB Pvivax time series %'
                       AND p.profile_set_id = ps.profile_set_id)
                     WHERE row_number = 1) expn,
              (SELECT p.source_id, max(p.max_percentile) as max_pct
                    FROM apidb.Profile p, apidb.ProfileSet ps
                    WHERE ps.name like 'ZB Pvivax time series %'
                    AND p.profile_set_id = ps.profile_set_id
                    GROUP BY p.source_id) percentile,
               apidbtuning.geneAttributes ga
               where ga.source_id = percentile.source_id(+)
               and ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

    <!-- Winzeler Gametocytogenesis -->
    <sqlQuery name="GametocytogenesisExprStats" includeProjects="PlasmoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="gcg_max_expr_timing"/>
        <column name="gcg_min_expr_timing"/>
        <column name="gcg_max_pct"/>
        <column name="gcg_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as gcg_max_expr_timing, expn.min_timing as gcg_min_expr_timing, 
                 max_pct as gcg_max_pct, expn.max_fold_induction as gcg_max_fold_ind, 'PlasmoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = ' winzeler_3D7_gametocyte'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
               where ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

    
    <!-- RNASeq -->
    <!-- Newbold/Llinas -->
    <sqlQuery name="iRBCRnaSeqExprStats" includeProjects="PlasmoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="irbc_rnaseq_max_expr_timing"/>
        <column name="irbc_rnaseq_min_expr_timing"/>
        <column name="irbc_rnaseq_max_pct"/>
        <column name="irbc_rnaseq_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as irbc_rnaseq_max_expr_timing, expn.min_timing as irbc_rnaseq_min_expr_timing, 
                 max_pct as irbc_rnaseq_max_pct, expn.max_fold_induction as irbc_rnaseq_max_fold_ind, 'PlasmoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'P. falciparum Newbold mRNA Seq data'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
               where ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
   <!-- Stunnenberg
    <sqlQuery name="RBCiRnaSeqExprStats" includeProjects="PlasmoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="rbci_rnaseq_max_expr_timing"/>
        <column name="rbci_rnaseq_min_expr_timing"/>
        <column name="rbci_rnaseq_max_pct"/>
        <column name="rbci_rnaseq_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as rbci_rnaseq_max_expr_timing, expn.min_timing as rbci_rnaseq_min_expr_timing, 
                 max_pct as rbci_rnaseq_max_pct, expn.max_fold_induction as rbci_rnaseq_max_fold_ind, 'PlasmoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'pfal3D7_Stunnenberg_pi_time_series_scaled'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
               where ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
      -->
 

   <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Toxo Expression Profile Stats -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    
    <!-- Microarray -->
    <!--  Expression Timing -->

    <!-- Brady Induction Expression Timing -->
    <!-- Brady 72Hr
    <sqlQuery name="PruAlk72HrExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="pru_alk_72hr_max_expr_timing"/>
        <column name="pru_alk_72hr_min_expr_timing"/>
        <column name="pru_alk_72hr_max_pct"/>
        <column name="pru_alk_72hr_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as pru_alk_72hr_max_expr_timing, expn.min_timing as pru_alk_72hr_min_expr_timing, 
                 max_pct as pru_alk_72hr_max_pct, expn.max_fold_induction as pru_alk_72hr_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'expression profiles of Pru dHXGPRT strain Alkaline bradyzoite-inducing conditions (media pH 8.2)'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

    <sqlQuery name="PruCO272HrExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="pru_co2_72hr_max_expr_timing"/>
        <column name="pru_co2_72hr_min_expr_timing"/>
        <column name="pru_co2_72hr_max_pct"/>
        <column name="pru_co2_72hr_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as pru_co2_72hr_max_expr_timing, expn.min_timing as pru_co2_72hr_min_expr_timing, 
                 max_pct as pru_co2_72hr_max_pct, expn.max_fold_induction as pru_co2_72hr_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'expression profiles of Pru dHXGPRT strain CO2-starvation bradyzoite-inducing conditions'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
      -->

    <sqlQuery name="PruSNP72HrExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="pru_snp_72hr_max_expr_timing"/>
        <column name="pru_snp_72hr_min_expr_timing"/>
        <column name="pru_snp_72hr_max_pct"/>
        <column name="pru_snp_72hr_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as pru_snp_72hr_max_expr_timing, expn.min_timing as pru_snp_72hr_min_expr_timing, 
                 max_pct as pru_snp_72hr_max_pct, expn.max_fold_induction as pru_snp_72hr_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'expression profiles of Pru dHXGPRT strain sodium nitroprusside bradyzoite-inducing conditions'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

    <sqlQuery name="RhAlk72HrExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="rh_alk_72hr_max_expr_timing"/>
        <column name="rh_alk_72hr_min_expr_timing"/>
        <column name="rh_alk_72hr_max_pct"/>
        <column name="rh_alk_72hr_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as rh_alk_72hr_max_expr_timing, expn.min_timing as rh_alk_72hr_min_expr_timing, 
                 max_pct as rh_alk_72hr_max_pct, expn.max_fold_induction as rh_alk_72hr_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'expression profiles of RH delta-HXGPRT delta-UPRT strain Alkaline bradyzoite-inducing conditions'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
    <!-- Brady 14Day -->
    <sqlQuery name="Pru14DayExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="pru_14day_max_expr_timing"/>
        <column name="pru_14day_min_expr_timing"/>
        <column name="pru_14day_max_pct"/>
        <column name="pru_14day_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as pru_14day_max_expr_timing, expn.min_timing as pru_14day_min_expr_timing, 
                 max_pct as pru_14day_max_pct, expn.max_fold_induction as pru_14day_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'expression profiles of Pru dHXGPRT strain CO2-starvation bradyzoite inducing conditions : 2-14 days (by Florence Dzierszinski)'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

    <sqlQuery name="Veg6DayExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="veg_6day_max_expr_timing"/>
        <column name="veg_6day_min_expr_timing"/>
        <column name="veg_6day_max_pct"/>
        <column name="veg_6day_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as veg_6day_max_expr_timing, expn.min_timing as veg_6day_min_expr_timing, 
                 max_pct as veg_6day_max_pct, expn.max_fold_induction as veg_6day_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'expression profiles of VEG strain CO2-starvation bradyzoite inducing conditions : 2-6 days (by Florence Dzierszinski)'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

 <!-- Matt TzBz -->
    <sqlQuery name="MattTzBzExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="pru_4day_max_expr_timing"/>
        <column name="pru_4day_min_expr_timing"/>
        <column name="pru_4day_max_pct"/>
        <column name="pru_4day_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as pru_4day_max_expr_timing, expn.min_timing as pru_4day_min_expr_timing, 
                 max_pct as pru_4day_max_pct, expn.max_fold_induction as pru_4day_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'expression profiles of Pru dHXGPRT strain CO2-starvation bradyzoite inducing conditions : 2-14 days (by Florence Dzierszinski)'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
      <!-- End Brady Time Series -->
      <!-- White Cell Cycle -->
    <sqlQuery name="WhiteCCExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="white_cc_max_expr_timing"/>
        <column name="white_cc_min_expr_timing"/>
        <column name="white_cc_max_pct"/>
        <column name="white_cc_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as white_cc_max_expr_timing, expn.min_timing as white_cc_min_expr_timing, 
                 max_pct as white_cc_max_pct, expn.max_fold_induction as white_cc_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'M.White Cell Cycle Microarray'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

      <!-- Life Cycle Stages -->
    <sqlQuery name="LifeCycleExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="m4_lifecycle_max_expr_timing"/>
        <column name="m4_lifecycle_min_expr_timing"/>
        <column name="m4_lifecycle_max_pct"/>
        <column name="m4_lifecycle_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as m4_lifecycle_max_expr_timing, expn.min_timing as m4_lifecycle_min_expr_timing, 
                 max_pct as m4_lifecycle_max_pct, expn.max_fold_induction as m4_lifecycle_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'Expression profiles of Tgondii ME49 Boothroyd experiments'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

      <!-- Invasion Stages -->
    <sqlQuery name="InvasionStageExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="invasion_max_expr_timing"/>
        <column name="invasion_min_expr_timing"/>
        <column name="invasion_max_pct"/>
        <column name="invasion_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as invasion_max_expr_timing, expn.min_timing as invasion_min_expr_timing, 
                 max_pct as invasion_max_pct, expn.max_fold_induction as invasion_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'Expression profiles of Tgondii ME49 Carruthers experiments'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>

      <!--Matrajt Time Series -->
    <sqlQuery name="MatrajtTimeSeriesExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="diff_72hr_max_expr_timing"/>
        <column name="diff_72hr_min_expr_timing"/>
        <column name="diff_72hr_max_pct"/>
        <column name="diff_72hr_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as diff_72hr_max_expr_timing, expn.min_timing as diff_72hr_min_expr_timing, 
                 max_pct as diff_72hr_max_pct, expn.max_fold_induction as diff_72hr_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'TgRH_Matrajt_GSE23174_Bz_Time_Series'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
    <!--Toxo RNASeq -->
    <!--Reid-->
    <sqlQuery name="ME49Day3_4TzRnaSeqExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="Me49_tz_rnaseq_max_expr_timing"/>
        <column name="Me49_tz_rnaseq_min_expr_timing"/>
        <column name="Me49_tz_rnaseq_max_pct"/>
        <column name="Me49_tz_rnaseq_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as Me49_tz_rnaseq_max_expr_timing, expn.min_timing as Me49_tz_rnaseq_min_expr_timing, 
                 max_pct as Me49_tz_rnaseq_max_pct, expn.max_fold_induction as Me49_tz_rnaseq_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'T. gondii VEG Day 3-4 Tachyzoite aligned to the TgME49 Genome'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
    <sqlQuery name="NcDay3_4TzRnaSeqExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="Nc_tz_rnaseq_max_expr_timing"/>
        <column name="Nc_tz_rnaseq_min_expr_timing"/>
        <column name="Nc_tz_rnaseq_max_pct"/>
        <column name="Nc_tz_rnaseq_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as Nc_tz_rnaseq_max_expr_timing, expn.min_timing as Nc_tz_rnaseq_min_expr_timing, 
                 max_pct as Nc_tz_rnaseq_max_pct, expn.max_fold_induction as Nc_tz_rnaseq_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'N. caninum Day 3-4 Tachyzoite'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
    <sqlQuery name="Me49Day3_4TzTsRnaSeqExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="Me49_ts_rnaseq_max_expr_timing"/>
        <column name="Me49_ts_rnaseq_min_expr_timing"/>
        <column name="Me49_ts_rnaseq_max_pct"/>
        <column name="Me49_ts_rnaseq_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as Me49_ts_rnaseq_max_expr_timing, expn.min_timing as Me49_ts_rnaseq_min_expr_timing, 
                 max_pct as Me49_ts_rnaseq_max_pct, expn.max_fold_induction as Me49_ts_rnaseq_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'T. gondii ME49 time series mRNA Illumina sequences aligned to the ME49 Genome.'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
    <sqlQuery name="VegDay3_4TzTsRnaSeqExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="Veg_ts_rnaseq_max_expr_timing"/>
        <column name="Veg_ts_rnaseq_min_expr_timing"/>
        <column name="Veg_ts_rnaseq_max_pct"/>
        <column name="Veg_ts_rnaseq_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as Veg_ts_rnaseq_max_expr_timing, expn.min_timing as Veg_ts_rnaseq_min_expr_timing, 
                 max_pct as Veg_ts_rnaseq_max_pct, expn.max_fold_induction as Veg_ts_rnaseq_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'T. gondii VEG time series mRNA Illumina sequences aligned to the ME49 Genome.'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
    <sqlQuery name="M4Day3_4TzTsRnaSeqExprStats" includeProjects="ToxoDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="M4_ts_rnaseq_max_expr_timing"/>
        <column name="M4_ts_rnaseq_min_expr_timing"/>
        <column name="M4_ts_rnaseq_max_pct"/>
        <column name="M4_ts_rnaseq_max_fold_ind"/>
        <sql> 
         <![CDATA[
 SELECT distinct ga.source_id as source_id, expn.max_timing as M4_ts_rnaseq_max_expr_timing, expn.min_timing as M4_ts_rnaseq_min_expr_timing, 
                 max_pct as M4_ts_rnaseq_max_pct, expn.max_fold_induction as M4_ts_rnaseq_max_fold_ind, 'ToxoDB' as project_id
FROM (SELECT p.source_id,
             ROUND(p.max_percentile,1) AS max_pct,
             p.time_of_max_expr AS max_timing,
             p.time_of_min_expr AS min_timing,
             ROUND(p.ind_ratio,1) as max_fold_induction
      FROM apidb.Profile p, apidb.ProfileSet ps
      WHERE ps.name = 'T. gondii M4 oocyte time series mRNA Illumina sequences aligned to the ME49 Genome.'
        AND p.profile_set_id = ps.profile_set_id) expn,
               apidbtuning.geneAttributes ga
WHERE ga.source_id = expn.source_id(+)
          ]]>
        </sql>
      </sqlQuery>
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- GFF sequence -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneGffSequence" excludeProjects="EuPathDB">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="gff_transcript_sequence"/>
        <sql>
          <![CDATA[
            select gf.source_id AS source_id, '@PROJECT_ID@' as project_id,
                   s.sequence as gff_transcript_sequence
            from ApidbTuning.GeneAttributes gf, 
                 DoTS.Transcript rna,
                 dots.splicednasequence s
            where gf.na_feature_id = rna.parent_id
                  and s.na_sequence_id = rna.na_sequence_id
          ]]>
        </sql>
      </sqlQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- GFF attributes (other than sequence) -->  
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneGffAttrs">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_web_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_locus_tag"/>
        <column name="gff_attr_size"/>
        <sql>
          <![CDATA[
            select ga.source_id, project_id  as project_id,
                   ga.sequence_id as gff_seqid,
                   project_id as gff_source,
                   'gene' as gff_type,
                   least(ga.start_min, ga.end_max) as gff_fstart,
                   greatest(ga.start_min, ga.end_max) as gff_fend,
                   '.' as gff_score,
                   decode(ga.is_reversed, 1, '-', '+') as gff_strand,
                   '.' as gff_phase,
                   ga.source_id as gff_attr_id,
                   ga.source_id as gff_attr_web_id,
                   ga.source_id as gff_attr_name,
                   case
                     when ga.is_deprecated = 1 then ga.product || ' (deprecated)'
                     else ga.product
                   end as gff_attr_description,
                   ga.source_id as gff_attr_locus_tag,
                   (greatest(ga.start_min, ga.end_max)
                   - least(ga.start_min, ga.end_max) + 1) as gff_attr_size
            from ApidbTuning.GeneAttributes ga
          ]]>
        </sql>
      </sqlQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Entrez link -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

	<sqlQuery name="EntrezLink" excludeProjects="EuPathDB">
	  <column name="project_id"/>
	  <column name="source_id"/>
	  <column name="entrez_id"/>
	  <sql>
	    SELECT  ga.source_id, '@PROJECT_ID@' AS project_id, 
               apidb.tab_to_string(set(cast(COLLECT(entrez_table.primary_identifier) AS apidb.varchartab))) AS entrez_id
		    FROM apidbtuning.geneattributes ga, 
		        (SELECT  gf.source_id,  db.primary_identifier
                         FROM sres.externalDatabaseRelease edr, sres.dbref db, apidbtuning.geneattributes gf,
                               DOTS.dbrefnafeature dbna, SRES.externaldatabase ed,
                               apidbtuning.DatasetPresenter dsa
                         WHERE edr.external_database_release_id = db.external_database_release_id
			 AND ed.external_database_id = edr.external_database_id
			 AND ed.name like (dsa.dataset_name_pattern)
			 AND dbna.db_ref_id = db.db_ref_id
			 AND gf.na_feature_id= dbna.na_feature_id
			 AND lower(ed.name) like '%entrez%'
			 ) entrez_table
                    WHERE ga.source_id = entrez_table.source_id(+)
                    GROUP by ga.source_id 
	  </sql>
	</sqlQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Protein Id's and Linkouts -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="Protein_Linkout" includeProjects="CryptoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="protein_id"/>
            <column name="linkout"/>
            <sql>
            <![CDATA[           
            SELECT 
                  g.source_id,'@PROJECT_ID@' as project_id,
                  DECODE (
                       protein_id, null, 
                           '', 
                           'Genbank Protein Record ' ||
                           '(<a href="http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?val=' ||
                            protein_id         || 
                            '">' || 
                            protein_id         ||
                            '</a>)'
                       )
                  as linkout, 
                  t.protein_id
            FROM  dots.transcript t, ApidbTuning.GeneAttributes g
            WHERE g.na_feature_id = t.parent_id(+)
            ]]>
            </sql>
        </sqlQuery>

<!--
        <sqlQuery name="SGC_3D_Struct" includeProjects="CryptoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="pdb_id"/>
            <sql>
              <![CDATA[
            SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id, xx.pdb_id
            FROM ApidbTuning.GeneAttributes gf,
             (SELECT drnf.na_feature_id, dr.primary_identifier AS pdb_id
              FROM dots.DbRefNaFeature drnf,
                 sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
              WHERE drnf.db_ref_id = dr.db_ref_id
                AND dr.external_database_release_id = edr.external_database_release_id
                AND edr.external_database_id = ed.external_database_id
                AND ed.name = 'Structural Genomics Consortium 3D Structures') xx                      
            WHERE gf.na_feature_id = xx.na_feature_id(+)             
            ORDER BY pdb_id
              ]]>
            </sql>
        </sqlQuery>

-->

        <sqlQuery name="Translation" includeProjects="CryptoDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="translation" />
            <sql>
            <!-- UPPER(source_id) is a workaround to some unresolved bug where
                 the translation doesn't get returned via webservices
                 (UPPER removed until new sql munger updated to handle it) -->
            <!-- The sql weirdness is to force a single row result set of null
                 values when there is no translation (as is the case for 
                 non-protein coding genes) - the WDK doesn't allow an empty result.    -->
            <![CDATA[  
              SELECT g.source_id, '@PROJECT_ID@' as project_id,
                          tas.sequence as translation
              FROM    ApidbTuning.GeneAttributes g,
                    dots.translatedaasequence tas, 
                    dots.translatedaafeature taf, 
                    dots.transcript t
              WHERE g.na_feature_id = t.parent_id        
              AND taf.na_feature_id(+) = t.na_feature_id
              AND taf.aa_sequence_id = tas.aa_sequence_id(+) 
           
            ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="GeneticCode" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="genetic_code" />
            <column name="mitochondrial_genetic_code" />
            <column name="sequence_so_term" />
            <sql>
            SELECT g.source_id, '@PROJECT_ID@' as project_id,
                   gc.ncbi_genetic_code_id as genetic_code,
                   mgc.ncbi_genetic_code_id as mitochondrial_genetic_code,
                   so.term_name as sequence_so_term
            FROM ApidbTuning.GeneAttributes g,
                 ApidbTuning.SequenceAttributes sa,
                 sres.sequenceontology so,
                 sres.taxon t,
                 sres.geneticcode gc,
                 sres.geneticcode mgc
            WHERE sa.na_sequence_id = g.na_sequence_id
              AND so.so_id = sa.so_id
              AND t.taxon_id = g.taxon_id
              AND gc.genetic_code_id = t.genetic_code_id
              AND mgc.genetic_code_id = t.mitochondrial_genetic_code_id
           </sql>
        </sqlQuery>


         <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
         <!-- used in gene page : will return comma-delimited list of table names for the particular organism --> 
         <!-- example of row returned for PBANKA_021400:	PlasmoDB Alias, CompoundsMetabolicPathways, EcNumber, Epitopes, GeneLinkouts -->
         <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

         <sqlQuery name="TablesForOrganism" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="tablesForOrg" />
            <sql>
           <![CDATA[
             SELECT ga.source_id as source_id, ga.project_id as project_id,
                    nvl(listagg(ta.target_name, ', ') within group (order by ta.target_name), '0') as tablesForOrg
               FROM (
                  select distinct dmr.target_name, tn.name
                    from ApidbTuning.DatasetNameTaxon dt, ApidbTuning.DatasetModelRef dmr,sres.TaxonName tn
                   where dt.dataset_presenter_id = dmr.dataset_presenter_id
  	                 and dmr.target_type = 'table'
  	                 and  dmr.record_type like 'GeneRecordClasses.GeneRecordClass'
  	                 and dt.taxon_id = tn.taxon_id(+)
 	                   and (tn.name_class is null or tn.name_class = 'scientific name')
                    ) ta, 
                      apidbtuning.geneattributes ga
              WHERE ga.organism = ta.name
                 OR ta.name is null
              GROUP by ga.source_id, ga.project_id

             ]]>
           </sql>
        </sqlQuery>



        <!-- need to include the legacy plasmo stuff that is not included in profilegraphdescrip table -->
        <sqlQuery name="HasExpressionSection" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasExpression" />
            <sql>
            <![CDATA[  
           select ga.source_id, ga.project_id, 
                  nvl(hasExpression, 0) as hasExpression
            from ( select other_gene.source_id,  1 as hasExpression
                    from dots.geneinstance this_gi, dots.geneinstance other_gi,
                         apidbtuning.geneattributes this_gene, apidbtuning.geneattributes other_gene,
                         apidb.profile p
                    where this_gi.gene_id = other_gi.gene_id
                      and this_gi.na_feature_id = this_gene.na_feature_id
                      and other_gi.na_feature_id = other_gene.na_feature_id
                      and this_gene.source_id = p.source_id
                      and this_gene.orthomcl_name = other_gene.orthomcl_name
                  union
                    select p.source_id,  1 as hasExpression
                    from apidb.profile p
                  union
                   select ga.source_id, 1 as hasExpression
                  from apidb.datasource ds, apidbtuning.geneattributes ga
                  where (ds.type = 'transcript_expression')
                  and ds.subtype = 'sage_tag'
                  and ds.taxon_id  = ga.taxon_id) d, apidbtuning.geneattributes ga
            where ga.source_id = d.source_id (+)
            ]]>
           </sql>
        </sqlQuery>

        <sqlQuery name="HasProteomics" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasProteomics" />
            <sql>
            <![CDATA[  
           select ga.source_id, ga.project_id,
                  nvl(hasProteomics, 0) as hasProteomics
                    from
                      (select
                                 ga.source_id,
                                 1 as hasProteomics
                         from  apidb.datasource ds, apidbtuning.datasetpresenter dsp, APIDB.massspecsummary mss,
                              SRES.externaldatabase ed, sres.externaldatabaserelease edr, APIDBTUNING.geneattributes ga
                        where (ds.name like dsp.dataset_name_pattern or ds.name = dsp.name)
                          and ds.name like '%_massSpec_%'
                          and ds.type = 'protein_expression'
                          and mss.external_database_release_id = edr.external_database_release_id
                          and edr.external_database_id = ed.external_database_id
                          and ed.name = ds.name
                          and ga.aa_sequence_id =mss.aa_sequence_id
                       )d, apidbtuning.geneattributes ga
            where ga.source_id = d.source_id (+)
            ]]>
           </sql>
        </sqlQuery>



        <sqlQuery name="HasQuantitativeProteomics" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasQuantitativeProteomics" />
            <sql>
            <![CDATA[  
                     select distinct ga.source_id, ga.project_id, case when ds.type is null then 0 else 1 end as hasQuantitativeProteomics
                     from apidbtuning.geneattributes ga left join apidb.datasource ds
                     on ga.taxon_id = ds.taxon_id
                     and  ds.type = 'protein_expression' 
                     and ds.subtype = 'quantitative'
            ]]>
           </sql>


        </sqlQuery>



        <sqlQuery name="HasPostTransMod" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasPostTransMod" />
            <sql>
            <![CDATA[
               select ga.project_id, ga.source_id,
                      nvl(hasPostTransMod,0) as hasPostTransMod 
                 from (
                       select distinct 1 as hasPostTransMod, 
                              source_id
                         from apidbtuning.MSModifiedPeptideSummary
                       )msps, 
                       apidbTuning.geneAttributes ga
                where msps.source_id(+) = ga.source_id
            ]]>
           </sql>
        </sqlQuery>
                    
       <sqlQuery name="HasHostResponse" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasHostResponse"/>
            <sql>
            <![CDATA[  
                     select ga.source_id, ga.project_id, nvl(hasHostResponse, 0) as hasHostResponse from
                     (
                     select distinct ga.source_id, ga.project_id, 1 as hasHostResponse
                     from apidbtuning.geneattributes ga,
                          apidb.datasource ds,
                          sres.externalDatabase ed,
                          sres.externalDatabaseRelease edr,
                          apidb.profileset ps,
                          apidb.profile p 
                    where  ga.taxon_id = ds.taxon_id
                      and  ga.source_id = p.source_id
                      and  ps.profile_set_id = p.profile_set_id
                      and  ed.name = ds.external_database_name
                      and  edr.version = ds.version
                      and  ed.external_database_id = edr.external_database_id
                      and  ds.type = 'putative_function' 
                      and  ds.subtype = 'immune_response'
                      and  ps.external_database_release_id = edr.external_database_release_id
                )has right join apidbtuning.Geneattributes ga on has.source_id = ga.source_id
            ]]>
           </sql>


        </sqlQuery>

        <sqlQuery name="HasHtsSnpsSection" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasHtsSnps" />
            <sql>
            <![CDATA[  
           select ga.source_id, ga.project_id, 
                  nvl(hasHtsSnps, 0) as hasHtsSnps
            from (select distinct tn.name as species, 1 as hasHtsSnps
                  from apidb.datasource ds, sres.taxonname tn
                  where ds.type = 'isolates'
                  and ds.subtype in ('HTS_SNP')
                  and ds.taxon_id = tn.taxon_id) d, apidbtuning.geneattributes ga
            where ga.organism = d.species (+)
            ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="HasPhenotypeSection" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasPhenotype" />
            <sql>
            <![CDATA[  
          select ga.source_id, ga.project_id, 
                  nvl(hasExpression, 0) as hasPhenotype
            from (select distinct tn.name as species, 1 as hasExpression
                  from apidb.datasource ds, APIDBTUNING.taxonspecies ts, sres.taxonname tn
                  where ds.name in ('tbruTREU927_RNAi_Horn_rnaSeq_RSRC'
                  -- TODO:  INJECT TEMPLTE HERE FOR other PHenotype data which has graphs
                  )
                  and ds.taxon_id = ts.taxon_id
                  and ts.species_taxon_id = tn.taxon_id) d, apidbtuning.geneattributes ga
            where ga.species = d.species (+)
            ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="HasPdbSimilarity" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasPdbSimilarity" />
            <sql>
            <![CDATA[  
            select distinct ga.source_id, ga.project_id,  
                   case when nvl(pdb.source_id, 0) = '0' then 0 
                         else 1 end as hasPdbSimilarity
            from apidbtuning.geneattributes ga,
                 (select * 
                  from apidbtuning.pdbsimilarity 
                  where to_binary_double(pvalue_mant || 'e' || pvalue_exp) < to_binary_double(10 || 'e' || -20)) pdb
            where ga.source_id = pdb.source_id (+)
            ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="HasSsgcid" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="hasSsgcid" />
            <sql>
            <![CDATA[  
               with sbri as (select distinct
                                    substr(eupathdb, instr(eupathdb, ':') + 1) as source_id,
                                    decode(substr(eupathdb, 1, instr(eupathdb, ':') - 1),
                                           'TritrypDB', 'TriTrypDB',
                                           substr(eupathdb, 1, instr(eupathdb, ':') - 1))
                                    as project_id
                             from ApidbTuning.Ssgcid),
                    sbri_genes as (select distinct 1 as hasSsgcid, gi.gene as source_id, sbri.project_id
                                   from sbri, ApidbTuning.GeneId gi
                                   where sbri.source_id = gi.id)
               select ga.source_id, ga.project_id, nvl(sg.hasSsgcid, 0) as hasSsgcid
               from sbri_genes sg, ApidbTuning.GeneAttributes ga
               where ga.source_id = sg.source_id(+)
                 and ga.project_id = sg.project_id(+)
            ]]>
           </sql>
        </sqlQuery>

        <sqlQuery name="IsUnassignedTCruzi" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="is_unassigned_tcruzi" />
            <sql>
            <![CDATA[  
               SELECT source_id, project_id, 
                  CASE WHEN organism like 'Trypanosoma cruzi %' AND organism NOT like '%Esmeraldo%' 
                  THEN 1 ELSE 0 END as is_unassigned_tcruzi
               FROM ApidbTuning.GeneAttributes
            ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="IsAnnotated" excludeProjects="EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="is_annotated"/>
            <sql>
            <![CDATA[
               SELECT ga.source_id, ga.project_id,
                      CASE WHEN (p.dataset_presenter_id in
                             (SELECT dataset_presenter_id FROM apidbtuning.datasetpublication WHERE pmid IS NOT NULL ) )
                      THEN 1 ELSE 0 END AS is_annotated
               FROM APIDBTUNING.datasetnametaxon dt,
                    apidbtuning.geneattributes ga,
                    apidb.datasource ds,
                    apidbtuning.datasetpresenter p
               WHERE ga.taxon_id  = dt.taxon_id
                AND dt.name       = ds.name
                AND ds.type       = 'genome'
                AND dt.dataset_presenter_id = p.dataset_presenter_id
             ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="ReleasePolicy" excludeProjects="EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="release_policy"/>
            <sql>
            <![CDATA[
               SELECT ga.source_id, ga.project_id, p.release_policy
               FROM APIDBTUNING.datasetnametaxon dt,
                    apidbtuning.geneattributes ga,
                    apidb.datasource ds,
                    apidbtuning.datasetpresenter p
               WHERE ga.taxon_id  = dt.taxon_id
                AND dt.name       = ds.name
                AND ds.type       = 'genome'
                AND dt.dataset_presenter_id = p.dataset_presenter_id
             ]]>
           </sql>
        </sqlQuery>





        <sqlQuery name="DnaGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="dna_gtracks" />
            <sql excludeProjects="TrichDB">
            <![CDATA[  
            with has_proteomic_data as (     
                    select source_id
                    from
                      (select
                         ga.source_id
                         from APIDB.massspecsummary mss, APIDBTUNING.geneattributes ga
                        where ga.aa_sequence_id =mss.aa_sequence_id
                       ))
            select ga.source_id, ga.project_id, 
                   gto.gtracks||'%1EUnifiedMassSpecPeptides' as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga,has_proteomic_data
            where ga.organism = gto.organism
              and ga.source_id = has_proteomic_data.source_id
            union 
            select ga.source_id, ga.project_id, 
                   gto.gtracks as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and ga.source_id not in (select source_id from has_proteomic_data)
            union 
            select ga.source_id, ga.project_id,
                   '' as dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism(+)
            and ga.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto)
            ]]>
           </sql>
           <sql includeProjects="TrichDB">
            <![CDATA[  
            with has_proteomic_data as (     
                    select source_id
                    from
                      (select
                         ga.source_id
                         from APIDB.massspecsummary mss, APIDBTUNING.geneattributes ga
                        where ga.aa_sequence_id =mss.aa_sequence_id
                       ))
            select ga.source_id, ga.project_id, 
                   gto.gtracks||'%1EMassSpecPeptides_tvagG3_massSpec_Johnson_FullPeptideData_RSRC' as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga,has_proteomic_data
            where ga.organism = gto.organism
              and ga.source_id = has_proteomic_data.source_id
            union 
            select ga.source_id, ga.project_id, 
                   gto.gtracks as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and ga.source_id not in (select source_id from has_proteomic_data)
            union 
            select ga.source_id, ga.project_id,
                   '' as dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism(+)
            and ga.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto)
            ]]>
           </sql>
        </sqlQuery>

        <sqlQuery name="ProteinGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="protein_gtracks" />
            <sql>
            <![CDATA[  
                        select ga.source_id, ga.project_id,
                        (apidb.tab_to_string(set(cast(collect(track_names order by order_num,track_names) as apidb.varchartab)), '%1E')) as protein_gtracks
                    from
                      (select
                               'MassSpecPeptides_'||dsp.name as track_names,
                                ga.source_id,
                                '1' as order_num
                         from  apidb.datasource ds, apidbtuning.datasetpresenter dsp, APIDB.massspecsummary mss,
                              SRES.externaldatabase ed, sres.externaldatabaserelease edr, APIDBTUNING.geneattributes ga
                        where (ds.name like dsp.dataset_name_pattern or ds.name = dsp.name)
                          and ds.name like '%_massSpec_%'
                          and ds.type = 'protein_expression'
                          and mss.external_database_release_id = edr.external_database_release_id
                          and edr.external_database_id = ed.external_database_id
                          and ed.name =ds.name
                          and ga.aa_sequence_id = mss.aa_sequence_id
                       union
                        SELECT DISTINCT 'SecondaryStructure' as track_name,
                                        ga.source_id,
                                        '3' as order_num
                        FROM dots.SecondaryStructure ss, ApidbTuning.GeneAttributes ga
                        WHERE   ga.aa_sequence_id = ss.aa_sequence_id
                        UNION
                        SELECT 'UnifiedPostTraslationalMod%1E' as track_names,
                              source_id, 
                              '2' as order_num from APIDBTUNING.MSModifiedPeptideSummary
                        UNION
                        SELECT 'InterproDomains%1ESignalP%1ETMHMM%1EExportPred%1EHydropathyPlot%1EBLASTP%1ELowComplexity' as track_names,
                              source_id, 
                              '3' as order_num from APIDBTUNING.geneattributes) tracks,          
                      APIDBTUNING.geneattributes ga
                   where tracks.source_id = ga.source_id(+)
                   group by ga.source_id, ga.project_id
                  
           ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="GeneDBNewIdTemp" includeProjects="TriTrypDB,PlasmoDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="genedb_new_id" />
            <sql>
            <![CDATA[  
            select ga.source_id, ga.project_id, genedb.id as genedb_new_id
            from apidbtuning.geneattributes ga,
                 (select gi.id, gi.gene
                  from apidbtuning.geneid gi
                  where gi.database_name in ('GeneDB ids','TcruziEsmeraldoLike_geneDB_NewID_dbxref_RSRC','TcruziNonEsmeraldoLike_geneDB_NewID_dbxref_RSRC')
                  and gi.unique_mapping = 1 
                 ) genedb
            where ga.source_id = genedb.gene (+)
            ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="GeneDBOrganism" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="is_genedb_organism" />
            <sql>
            <![CDATA[  
select ga.source_id, ga.project_id, 
       case when ga.project_id in ('PlasmoDB', 'TriTrypDB')
            then decode(o.genome_source, 'GeneDB', 1, 0)
            else 0
       end as is_genedb_organism
from apidb.organism o
     ,apidbtuning.geneattributes ga
where ga.taxon_id = o.taxon_id
            ]]>
           </sql>
        </sqlQuery>


<!-- PrimarySequence: sequence source ID, start_min, and end_max for primary
     (as opposed to top-level) location of a gene. John B. says this was
     formerly used for SNPs, and now not at all, so I'm commenting it out. If
     we actually still need it, we should include it in GeneAttributes
        <sqlQuery name="PrimarySequence" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="primary_seq_id" />
            <column name="primary_seq_start" />
            <column name="primary_seq_end" />
            <sql>
            <![CDATA[  
            SELECT gf.source_id,
                  '@PROJECT_ID@' as project_id,
                   s.source_id as  primary_seq_id,
                   l.start_min as primary_seq_start,
                   l.end_max as primary_seq_end
            FROM   dots.genefeature gf,
                   dots.nalocation l,
                   dots.externalnasequence s
            WHERE  gf.na_sequence_id = s.na_sequence_id
               AND l.na_feature_id = gf.na_feature_id
            ]]>
           </sql>
        </sqlQuery>
-->

        <sqlQuery name="CellularLocalization" includeProjects="GiardiaDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="dic_img_uri" />
            <column name="gfp_img_uri" />
            <column name="is_visible" />
            <column name="note" />
            <column name="has_image" />
            <sql>
            <![CDATA[  
SELECT substr(uri, 1, instr(uri,',', 1,1)-1) as dic_img_uri, 
       substr(uri, instr(uri,',', 1,1)+1) as gfp_img_uri,  is_visible,
       source_id, note, '@PROJECT_ID@' as project_id,
       decode(organism, 'Giardia Assemblage A isolate WB', 1, 0) has_image
FROM 
(
       SELECT listagg(image_uri, ',') within group (order by image_type) as uri, 
              source_id, replace(note, 'Gene annotation: ', '') as note, is_visible, organism
       FROM
       (
         SELECT ga.source_id, img.image_uri, image_type, note,
                decode(img.image_uri, null, 'none', 'true') as is_visible, ga.organism
         FROM (SELECT na_feature_id, image_uri, image_type, replace(note, 'GO term: ', '') as note FROM apidb.nafeatureimage) img, 
              apidbtuning.geneattributes ga
         WHERE ga.na_feature_id = img.na_feature_id(+) 
       ) 
       GROUP BY source_id, note, is_visible, organism
) 
            ]]>
            </sql>
        </sqlQuery> 

        <sqlQuery name="Plasmogem" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="has_plasmogem_info"/>
            <column name="plasmogem_gene_id"/>
            <column name="plasmogem_resources"/>
            <column name="library_clone_count"/>
            <column name="transfection_design_count_ko"/>
            <column name="transfection_design_count_tag"/>
            <column name="transfection_rsrc_count_ko"/>
            <column name="transfection_rsrc_count_tag"/>
            <sql includeProjects="PlasmoDB">
              <![CDATA[
                select gi.gene as source_id, '@PROJECT_ID@' as project_id, max(plasmogem.gene_id) as plasmogem_gene_id,
                       nvl(max(plasmogem.has_info), 0) as has_plasmogem_info,
                       regexp_replace(case when sum(library_clone_count) > 0 then 'library clone' else '' end
                                      || case when sum(transfection_design_count_ko) > 0 then ', knockout' else '' end
                                      || case when sum(transfection_design_count_tag) > 0 then ', tag' else '' end, '^, ', '') as plasmogem_resources,
                       sum(transfection_rsrc_count_ko) as transfection_rsrc_count_ko,
                       sum(library_clone_count) as library_clone_count,
                       sum(transfection_design_count_tag) as transfection_design_count_tag,
                       sum(transfection_design_count_ko) as transfection_design_count_ko,
                       sum(transfection_rsrc_count_tag) as transfection_rsrc_count_tag
                from ApidbTuning.GeneId gi,
                     ( select gene_id, 1 as has_info, transfection_design_count_ko,
                              transfection_rsrc_count_ko, library_clone_count,
                              transfection_design_count_tag, transfection_rsrc_count_tag
                       from ApidbTuning.Plasmogem p
                     ) plasmogem
                where gi.id = plasmogem.gene_id(+)
                group by gi.gene
              ]]>
            </sql>

<!--            <sql excludeProjects="PlasmoDB">
              <![CDATA[
                select ga.source_id, ga.project_id, '' as plasmogem_gene_id,
                       0 as has_plasmogem_info, '' as plasmogem_resources,
                       0 as transfection_rsrc_count_ko,
                       0 as library_clone_count,
                       0 as transfection_design_count_tag,
                       0 as transfection_design_count_ko,
                       0 as transfection_rsrc_count_tag
                from ApidbTuning.GeneAttributes ga
              ]]>
            </sql>
-->        </sqlQuery> 

    </querySet>

</wdkModel>
