<wdkModel>
    <querySet name="GeneAttributes" queryType="attribute" isCacheable="false">

     <!-- notes
          TODO
       - all projects need a gene alias query (or, we have to break that out of the 
         <recordClass> element

     -->


            <defaultTestParamValues includeProjects="PlasmoDB,EuPathDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">PlasmoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_221330</paramValue>
               <paramValue name="project_id">ToxoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd3_1400</paramValue>
               <paramValue name="project_id">CryptoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">GiardiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="TrichDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">TrichDB</paramValue>
            </defaultTestParamValues>

            <!--TODO revisit the source_id, its correct but is a random source_id-->
            <defaultTestParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">TriTrypDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">AmoebaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU07_1760</paramValue>
               <paramValue name="project_id">MicrosporidiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="PiroplasmaDB">
               <paramValue name="source_id">BBOV_IV003850</paramValue>
               <paramValue name="project_id">PiroplasmaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="HostDB">
               <paramValue name="source_id">%%defaultGene%%</paramValue>
               <paramValue name="project_id">HostDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="FungiDB,SchistoDB,InitDB">
               <paramValue name="source_id"></paramValue>
               <paramValue name="project_id"></paramValue>
            </defaultTestParamValues>

            <testRowCountSql includeProjects="EuPathDB">
               SELECT count(*) FROM ApidbTuning.GeneAttributes
            </testRowCountSql>
            <testRowCountSql excludeProjects="EuPathDB">
               select count(na_feature_id)
               from dots.GeneFeature
               where external_database_release_id in (
                 select distinct(dbr.external_database_release_id)
                 from ApidbTuning.GeneAttributes ga, sres.ExternalDatabase db,
                      sres.ExternalDatabaseRelease dbr
                 where db.name = ga.external_db_name
                   and dbr.version = ga.external_db_version
                   and dbr.external_database_id = db.external_database_id
                 )
            </testRowCountSql>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Gene alias -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--NOTE: gus4 change: This gives transcript source_id; may need to be fixed or moved to a new query-->

        <sqlQuery name="Bfmv">
            <column name="project_id" ignoreCase="true"/>
            <column name="lc_project_id" ignoreCase="false"/>
            <column name="project"  ignoreCase="true"/>
            <column name="source_id" ignoreCase="true"/>

            <!-- GENE specific -->

            <column name="start_min"/>
            <column name="end_max"/>
            <column name="start_min_text" sortingColumn="start_min"/>
            <column name="end_max_text" sortingColumn="end_max"/>
            <column name="product" ignoreCase="true"/>
            <column name="name" ignoreCase="true"/>
            <column name="gene_type" ignoreCase="true"/>
            <column name="exon_count"/>
<!-- TODO            <column name="representative_transcript" includeProjects="ToxoDB,EuPathDB"/> -->
            <column name="is_deprecated"/>
            <column name="context_start"/>
            <column name="context_end"/>
            <column name="orthomcl_name"/>
            <column name="ortholog_number"/>
            <column name="paralog_number"/>
            <column name="transcript_count"/>
            <column name="orthomcl_link"/>
            <column name="cyc_gene_id" sortingColumn="source_id"/>
            <column name="cyc_db" sortingColumn="organism_full"
                    excludeProjects="AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,InitDB,PiroplasmaDB"/>
            <column name="total_hts_snps"/>
            <column name="hts_nonsynonymous_snps"/>
            <column name="hts_synonymous_snps"/>
            <column name="hts_stop_codon_snps"/>
            <column name="hts_noncoding_snps"/>
            <column name="hts_nonsyn_syn_ratio"/> 
            <column name="uniprot_id"/>
            <column name="uniprot_id_internal"/>
            <column name="entrez_id"/>
            <column name="is_pseudo"/>
            <column name="pseudo_string"/>
            <column name="sequence_id" ignoreCase="true"/>
            <column name="organism_full"  sortingColumn="organism_full"/> 
            <column name="organism_text"  sortingColumn="organism_full"/><!-- CHECK-->
            <column name="genus_species"  sortingColumn="organism_full"/>
            <column name="ncbi_tax_id"/>
            <column name="so_id"/>
            <column name="so_term_name"/>
            <column name="so_term_definition"/>
            <column name="so_version"/>
            <column name="anticodon"/>
            <column name="external_db_name"/>
            <column name="external_db_version"/>
            <column name="chromosome" sortingColumn="chromosome_order_num"/>
            <column name="chromosome_order_num"/>
            <column name="gene_id" includeProjects="ToxoDB,EuPathDB"/>
            <column name="previous_ids" excludeProjects="EuPathDB"/> 

             <sqlParamValue name="gene_id_param" includeProjects="ToxoDB,EuPathDB">
                <![CDATA[
                   , gene_id
                ]]>
            </sqlParamValue>
            <sqlParamValue name="gene_id_param" excludeProjects="ToxoDB,EuPathDB">
                <![CDATA[
                ]]>
            </sqlParamValue>

            <sqlParamValue name="cyc_db" includeProjects="PlasmoDB,EuPathDB">
                <![CDATA[
                   DECODE(bfmv.organism,
                          'Plasmodium falciparum 3D7', 'PLASMO', null)
                ]]>
            </sqlParamValue>
            <sqlParamValue name="cyc_db" includeProjects="ToxoDB">
                <![CDATA[
                   'TOXO'
                ]]>
            </sqlParamValue>
 <!-- TODO : check this -->
            <sqlParamValue name="cyc_db" includeProjects="CryptoDB,GiardiaDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,HostDB,SchistoDB,InitDB,PiroplasmaDB">
                <![CDATA[
                   DECODE(
                   substr(
                     bfmv.organism, 
                     instr(ltrim(bfmv.organism), ' ', 1, 1)+1, 
                     instr(ltrim(bfmv.organism)||' ', ' ', 1, 2) - instr(bfmv.organism, ' ', 1, 1) -1
                   ),
                  'parvum', 'cparvum', 'hominis')
                ]]>
            </sqlParamValue>

            <sql>
            <![CDATA[
            SELECT bfmv.project_id
                   , lower(bfmv.project_id) as lc_project_id
                   , bfmv.project_id as project 
                   , bfmv.source_id
                   , start_min
                   , end_max
                   , trim(to_char(bfmv.start_min,'999,999,999')) as start_min_text
                   , trim(to_char(bfmv.end_max,'999,999,999')) as end_max_text
                   , bfmv.product
                   , bfmv.name
                   , gene_type
                   , bfmv.exon_count
                   , bfmv.transcript_count
                   --TODO  , representative_transcript
                   , DECODE(bfmv.is_deprecated, 0, 'No', 1, 'Yes') AS is_deprecated
                   , bfmv.context_start
                   , bfmv.context_end
                   , ortholog_number
                   , paralog_number
                   , bfmv.orthomcl_name as orthomcl_name
                   , CASE WHEN (bfmv.orthomcl_name LIKE 'OG5%' AND bfmv.orthomcl_name NOT LIKE '%|%')
                        THEN '<a href="http://orthomcl.org/cgi-bin/OrthoMclWeb.cgi?rm=sequenceList&groupac=' ||
                        orthomcl_name || '">' || orthomcl_name || '</a>'
                        ELSE orthomcl_name END AS orthomcl_link
                   , UPPER(bfmv.source_id) AS cyc_gene_id
                   , &&cyc_db&& AS cyc_db
                   , bfmv.total_hts_snps
                   , bfmv.hts_nonsynonymous_snps
                   , bfmv.hts_synonymous_snps
                   , bfmv.hts_noncoding_snps
                   , bfmv.hts_stop_codon_snps
                   , bfmv.hts_nonsyn_syn_ratio
                   , uniprot_id
                   , uniprot_id_internal
                   , entrez_id
                   , decode(is_pseudo,0,'No',1,'Yes') as is_pseudo
                   , decode(is_pseudo,0,'gene',1,'pseudogene') as pseudo_string
                   , CASE WHEN bfmv.previous_ids is not null THEN 'Previous IDs: '||bfmv.previous_ids||'<br>' ELSE '' END as previous_ids
                   , bfmv.sequence_id
                   , bfmv.organism as organism_full
                   , genus_species
                   , bfmv.ncbi_tax_id
                   , bfmv.so_id
                   , bfmv.so_term_name
                   , bfmv.so_term_definition
                   , bfmv.so_version
                   , bfmv.anticodon
                   , bfmv.external_db_name
                   , bfmv.external_db_version
                   , SUBSTR(bfmv.organism, 1, 1) || '. ' ||
                        SUBSTR(bfmv.organism, INSTR(bfmv.organism, ' ', 1, 1) +1) as organism_text
                   &&gene_id_param&&
                   , CASE WHEN chromosome_order_num is null THEN 'Not Assigned'
                        ELSE to_char(chromosome)
                   END as chromosome
                   , chromosome_order_num
            from ApidbTuning.GeneAttributes bfmv
            ]]>
            </sql>
        </sqlQuery>

        <sqlQuery name="DnaGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="dna_gtracks" />
            <sql>
            <![CDATA[  
            with has_proteomic_data as (     
                    select source_id
                    from
                      (select
                         ga.gene_source_id as source_id
                         from APIDB.massspecsummary mss, APIDBTUNING.transcriptattributes ga
                        where ga.aa_sequence_id =mss.aa_sequence_id
                       ))
            select ga.source_id as source_id, ga.project_id, 
                   gto.gtracks||'%1EUnifiedMassSpecPeptides' as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga,has_proteomic_data
            where ga.organism = gto.organism
              and ga.source_id = has_proteomic_data.source_id
              and gto.type = 'dna'
            union 
            select ga.source_id as source_id, ga.project_id, 
                   gto.gtracks as  dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and ga.source_id not in (select source_id from has_proteomic_data)
              and gto.type = 'dna'
            union 
            select ga.source_id as source_id, ga.project_id, 
                   '' as dna_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism(+)
            and ga.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto where gto.type = 'dna')
            ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="SyntenyGTracks" excludeProjects="EuPathDB">
            <column name="source_id" />
            <column name="project_id"/>
            <column name="synteny_gtracks" />
            <sql>
            <![CDATA[  
            with has_proteomic_data as (     
                    select source_id
                    from
                      (select
                         ga.gene_source_id as source_id
                         from APIDB.massspecsummary mss, APIDBTUNING.transcriptattributes ga
                        where ga.aa_sequence_id =mss.aa_sequence_id
                       ))
            select ga.source_id as source_id, ga.project_id, 
                   gto.gtracks||'%1EUnifiedMassSpecPeptides' as  synteny_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga,has_proteomic_data
            where ga.organism = gto.organism
              and ga.source_id = has_proteomic_data.source_id
              and gto.type = 'synteny'
            union 
            select ga.source_id as source_id, ga.project_id, 
                   gto.gtracks as  synteny_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism
              and ga.source_id not in (select source_id from has_proteomic_data)
              and gto.type = 'synteny'
            union 
            select ga.source_id as source_id, ga.project_id, 
                   '' as synteny_gtracks
            from apidbtuning.gbrowsetracksorganism gto, apidbtuning.geneattributes ga
            where ga.organism = gto.organism(+)
            and ga.organism not in (select distinct organism from apidbtuning.gbrowsetracksorganism gto where gto.type = 'synteny')
            ]]>
           </sql>
        </sqlQuery>













      </querySet>
    </wdkModel>
