<wdkModel>

  <querySet name="PathwayTables" queryType="table" isCacheable="false"  includeProjects="PlasmoDB">

      <defaultTestParamValues includeProjects="PlasmoDB">
         <paramValue name="source_id">path:ec00626</paramValue>
         <paramValue name="project_id">PlasmoDB</paramValue>
      </defaultTestParamValues>

      <sqlQuery name="CompoundsFromMetabolicPathways" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="substrates"/>
            <column name="enzyme"/>
            <column name="enzyme_link"/>
            <column name="reaction"/>
            <column name="products"/>
            <column name="direction"/>
            <sql>
            <![CDATA[
WITH enzy  AS (SELECT distinct ec.ec_number 
            FROM apidbtuning.geneAttributes gf,
                 dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
            WHERE asec.aa_sequence_id = gf.aa_sequence_id
              AND ec.enzyme_class_id = asec.enzyme_class_id)
SELECT distinct Subtrs.source_id as source_id,
               Prds.products, Subtrs.substrates, Subtrs.Enzyme, 
 CASE when Subtrs.Enzyme  in (select ec_number from enzy)
              THEN '<a href="processQuestion.do?questionFullName=GeneQuestions.InternalGenesByEcNumber&' || 'array%28organism%29=all&' || 'array%28ec_number_pattern%29=' || Subtrs.enzyme || '&' || 'questionSubmit=Get+Answer'  || '">' || Subtrs.enzyme || '</a>'
              ELSE  Subtrs.Enzyme  END AS enzyme_link, 
       '<a href="http://www.genome.jp/dbget-bin/www_bget?' || REPLACE(Subtrs.reaction, ' ', '+') || '">' || Subtrs.reaction || '</a>' as reaction,
        '@PROJECT_ID@' as project_id,
       case when Subtrs.dir = 0 then 'Reversible'
            else 'Irreversible' end as direction 
From (select apidb.tab_to_string(set(cast(COLLECT('<a href="showRecord.do?name=CompoundRecordClasses.CompoundRecordClass&source_id=' || pc.compound_source_id || '&project_id=' || '@PROJECT_ID@' || '">' || pc.compound || '</a>') AS apidb.varchartab))) as products,
             nn1.display_label as enzyme, nrt.display_name as reaction, nrc.source_node as dir, n.name as source_id
      from   ApiDB.NetworkNode nn1, ApiDB.NetworkNode nn2, ApiDB.networkrelationship nr,ApiDBTuning.PathwayCompounds pc, 
             ApiDB.networkrelationshiptype nrt, ApiDB.NetworkRelContext nrc,
             ApiDB.Network n, ApiDB.NetworkRelContextLink nrl
      where nn1.node_type_id = 1
      and nr.node_id = nn1.network_node_id
      and nr.associated_node_id = nn2.network_node_id
      and nrc.network_relationship_id = nr.network_relationship_id
      and nrt.network_relationship_type_id = nrc.network_relationship_type_id
      and nrl.network_rel_context_id = nrc.network_rel_context_id
      and nrl.network_id = n.network_id
      and pc.compound = nn2.display_label
      group by n.name, nrt.display_name, nn1.display_label, nrc.source_node) Prds,
     (select apidb.tab_to_string(set(cast(COLLECT('<a href="showRecord.do?name=CompoundRecordClasses.CompoundRecordClass&source_id=' || pc.compound_source_id || '&project_id=' || '@PROJECT_ID@' || '">' || pc.compound || '</a>') AS apidb.varchartab))) as substrates,
             nn1.display_label as enzyme, nrt.display_name as reaction, nrc.source_node as dir, n.name as source_id
      from ApiDB.NetworkNode nn1, ApiDB.NetworkNode nn2, ApiDB.networkrelationship nr, 
           ApiDB.networkrelationshiptype nrt, ApiDB.NetworkRelContext nrc, ApiDBTuning.PathwayCompounds pc,
           ApiDB.Network n, ApiDB.NetworkRelContextLink nrl 
      where nn1.node_type_id = 1
      and nr.associated_node_id = nn1.network_node_id
      and nr.node_id = nn2.network_node_id
      and nrc.network_relationship_id = nr.network_relationship_id
      and nrt.network_relationship_type_id = nrc.network_relationship_type_id
      and nrl.network_rel_context_id = nrc.network_rel_context_id
      and nrl.network_id = n.network_id
      and pc.compound = nn2.display_label
      group by n.name, nrt.display_name, nn1.display_label, nrc.source_node) Subtrs
Where Subtrs.dir = Prds.dir
And   Prds.reaction = Subtrs.reaction
And   Subtrs.enzyme = Prds.enzyme
And   Subtrs.source_id = Prds.source_id
            ]]>
           </sql>
        </sqlQuery>



      <sqlQuery name="ECNumberOrganismMap" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="display_label"/>
            <column name="x1"/>
            <column name="y1"/>
            <column name="x2"/>
            <column name="y2"/>
            <column name="organisms"/>
            <column name="genes"/>

            <sql>
            <![CDATA[
               SELECT DISTINCT p.source_id as source_id, '@PROJECT_ID@' as project_id, ec.ec_number as display_label,
                       (pn.x - (pn.width/2)) as x1, (pn.y - (pn.height/2)) as y1,
                       (pn.x + (pn.width/2)) as x2, (pn.y + (pn.height/2)) as y2,
                       apidb.tab_to_string(set(cast(COLLECT(ga.organism) AS apidb.varchartab)), ', ') as organisms,
                       apidb.tab_to_string(set(cast(COLLECT(ga.source_id) AS apidb.varchartab)), ', ') as genes
                FROM    ApidbTuning.GenomicSequence gs,
                       dots.Transcript t, dots.translatedAaFeature taf,apidb.pathway p, apidb.pathwaynode pn,
                       dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec,ApidbTuning.GeneAttributes ga
                WHERE  gs.na_sequence_id = ga.na_sequence_id
                AND    ga.na_feature_id = t.parent_id
                AND    t.na_feature_id = taf.na_feature_id
                AND    taf.aa_sequence_id = asec.aa_sequence_id
                AND    asec.enzyme_class_id = ec.enzyme_class_id
                AND    p.pathway_id = pn.parent_id
                AND    ec.ec_number = pn.display_label
                group by p.source_id, ec.ec_number, pn.x, pn.y,pn.width, pn.height
            ]]>
           </sql>
        </sqlQuery>

        <sqlQuery name="CompoundLabel" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="compound_source_id"/>
            <column name="project_id"/>
            <column name="display_label"/>
            <column name="x"/>
            <column name="y"/>
            <column name="radius"/>
            <sql>
              <![CDATA[
              Select p.source_id, pc.compound_source_id, '@PROJECT_ID@' as project_id,
                     pn.display_label, pn.x, pn.y, pn.height as radius 
              From   ApiDB.Pathway p, ApiDB.PathwayNode pn, ApiDBTuning.PathwayCompounds pc
              Where  p.pathway_id = pn.parent_id
              And    pn.pathway_node_type_id = 2
              AND    pn.display_label = pc.compound
              Group By p.source_id, pc.compound_source_id, pn.display_label, pn.x, pn.y, pn.height, pn.width
            ]]>
           </sql>
        </sqlQuery>

 </querySet>
</wdkModel>



