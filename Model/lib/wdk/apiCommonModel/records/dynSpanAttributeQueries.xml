<wdkModel>


    <querySet name="DynSpanAttributes" queryType="attribute">


        <sqlQuery name="Bfmv">
            <column name="source_id" ignoreCase="true"/>
            <column name="project_id" ignoreCase="true"/>
            <column name="seq_source_id"/>
            <column name="start_min"/>
            <column name="end_max"/>
            <column name="strand"/>
            <column name="length"/>
            <column name="organism"/>
            <column name="context_start"/>
            <column name="context_end"/>
            <!-- the source_id is in such form: MAL14:1271-984493:0 for poditive strand or 1 for negative strand -->
           <sql>
            <![CDATA[
                SELECT ids.source_id, ids.project_id, ids.seq_source_id, 
                       ids.start_min, ids.end_max, ids.strand,
                       (ids.end_max - ids.start_min + 1) AS length,
                       sa.organism,
                       ids.start_min - 1000 AS context_start, ids.end_max + 1000 AS context_end
                FROM (SELECT source_id, project_id,
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = '0' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = '1' then '-'
   				       else 'Unknown' end as strand
                      FROM (##WDK_ID_SQL##)) ids, 
                     apidb.SequenceAttributes sa
                WHERE ids.seq_source_id = sa.source_id
             ]]>
           </sql>
        </sqlQuery>


        <sqlQuery name="GeneCount">
            <column name="source_id" ignoreCase="true"/>
            <column name="project_id" ignoreCase="true"/>
            <column name="geneCount"/>

             <sql>
            <![CDATA[

              select ids.source_id, ids.project_id, nvl(count(ga.source_id),0) as geneCount
               from apidb.geneattributes ga right outer join 
                      (SELECT source_id, project_id, 
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = '0' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = '1' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids
              on      ga.sequence_id = ids.seq_source_id AND
                      ga.start_min <= ids.end_max AND
                      ga.end_max >= ids.start_min
              group by ids.project_id,ids.source_id


             ]]>
             </sql>
        </sqlQuery>



        <sqlQuery name="SnpCount">
            <column name="source_id" ignoreCase="true"/>
            <column name="project_id" ignoreCase="true"/>
            <column name="snpCount"/>

             <sql>
            <![CDATA[

              select ids.source_id, ids.project_id, nvl(count(sa.source_id),0) as snpCount
               from apidb.snpattributes sa right outer join 
                      (SELECT source_id, project_id, 
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = '0' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = '1' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids
              on      sa.seq_source_id = ids.seq_source_id AND
                      sa.start_min >= ids.start_min   AND  
                      sa.start_min <= ids.end_max
              group by ids.project_id,ids.source_id


             ]]>
             </sql>
        </sqlQuery>


 <sqlQuery name="OrfCount">
            <column name="source_id" ignoreCase="true"/>
            <column name="project_id" ignoreCase="true"/>
            <column name="orfCount"/>

             <sql>
            <![CDATA[

              select ids.source_id, ids.project_id, nvl(count(oa.source_id),0) as orfCount
               from apidb.orfattributes oa right outer join 
                      (SELECT source_id, project_id, 
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = '0' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = '1' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids
              on       oa.nas_id = ids.seq_source_id AND
                      oa.start_min <= ids.end_max AND
                      oa.end_max >= ids.start_min
              group by ids.project_id,ids.source_id


             ]]>
             </sql>
        </sqlQuery>


<sqlQuery name="SagetagCount">
            <column name="source_id" ignoreCase="true"/>
            <column name="project_id" ignoreCase="true"/>
            <column name="sagetagCount"/>

             <sql>
            <![CDATA[

              select ids.source_id, ids.project_id, nvl(count(sta.source_id),0) as sagetagCount
               from apidb.sagetagattributes sta right outer join 
                      (SELECT source_id, project_id, 
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = '0' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = '1' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids
              on      sta.sequence_source_id = ids.seq_source_id AND
                      sta.start_min <= ids.end_max AND
                      sta.end_max >= ids.start_min
              group by ids.project_id,ids.source_id


             ]]>
             </sql>
        </sqlQuery>


        <sqlQuery name="EstCount">
            <column name="source_id" ignoreCase="true"/>
            <column name="project_id" ignoreCase="true"/>
            <column name="estCount"/>

             <sql>
            <![CDATA[


              select ids.source_id, ids.project_id, nvl(count(ests.accession),0) as estCount
                from 
                    ( SELECT distinct (enas.source_id) as sequence_id,
                                         e.accession,
                                         blat.target_start,
                                         blat.target_end
                         FROM   apidb.BlatAlignmentLocation blat,
                                dots.est e,
                                apidb.sequenceattributes enas,
                                apidb.estalignmentgenesummary eags
                         WHERE  blat.query_na_sequence_id = e.na_sequence_id
                           AND  blat.target_na_sequence_id = enas.na_sequence_id
                           AND eags.blat_alignment_id = blat.blat_alignment_id
                           AND  enas.is_top_level = 1
                     ) ests   right outer join 
                      
                      (SELECT source_id, project_id, 
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = '0' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = '1' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids

                   on      ests.sequence_id = ids.seq_source_id AND
                           ests.target_start <= ids.end_max AND
                           ests.target_end >= ids.start_min
 
                  group by ids.project_id,ids.source_id



             ]]>
             </sql>
        </sqlQuery>


  </querySet>


</wdkModel>


