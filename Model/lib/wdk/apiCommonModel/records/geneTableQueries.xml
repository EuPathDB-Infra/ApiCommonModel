<wdkModel>

<!-- notes

  - so far this is only a unification of p and t.  crypto seemed pretty different

  - the pathways query is diff between t and p, but shouldn't be.  one is wrong.

--> 


  <querySet name="GeneTables" queryType="table">

            <defaultTestParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PF11_0344</paramValue>
               <paramValue name="project_id">PlasmoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_021330</paramValue>
               <paramValue name="project_id">ToxoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd3_1400</paramValue>
               <paramValue name="project_id">CryptoDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_112048</paramValue>
               <paramValue name="project_id">GiardiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="TrichDB">
               <paramValue name="source_id">TVAG_386080</paramValue>
               <paramValue name="project_id">TrichDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Tb927.7.4060</paramValue>
               <paramValue name="project_id">TriTrypDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">EDI_244000</paramValue>
               <paramValue name="project_id">AmoebaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU07_1760</paramValue>
               <paramValue name="project_id">MicrosporidiaDB</paramValue>
            </defaultTestParamValues>

            <defaultTestParamValues includeProjects="InitDB">
               <paramValue name="source_id"></paramValue>
               <paramValue name="project_id"></paramValue>
            </defaultTestParamValues>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Gene Model -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <!-- this query is used by gene dump -->
       <sqlQuery name="GeneModelDump" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="type"/>
            <column name="gm_start"/>
            <column name="gm_end"/>
            <column name="is_reversed"/>
            <sql>
            <![CDATA[
         select gf.source_id, '@PROJECT_ID@' AS project_id,
                gm.start_min as gm_start, gm.end_max as gm_end,
                gm.type, gl.is_reversed
         from dots.GeneFeature gf, apidb.FeatureLocation gl, dots.NaSequence s,
              (select  'exon' as type, el.parent_id as na_feature_id,
                       el.start_min as start_min , el.end_max as end_max
               from apidb.FeatureLocation el
               where el.feature_type = 'ExonFeature'
               and el.is_top_level = 1
              union ALL
               select 'intron' as type, left.parent_id as na_feature_id,
                      leftLoc.end_max + 1  as start_min, rightLoc.start_min - 1 as end_max
               from dots.ExonFeature left, apidb.FeatureLocation leftLoc,
                    dots.ExonFeature right, apidb.FeatureLocation rightLoc
               where left.parent_id = right.parent_id
                 and (left.order_number = right.order_number - 1
                      or left.order_number = right.order_number + 1)
                 and leftLoc.start_min < rightLoc.start_min
                 and left.na_feature_id = leftLoc.na_feature_id
                 and leftLoc.is_top_level = 1
                 and right.na_feature_id = rightLoc.na_feature_id
                 and rightLoc.is_top_level = 1
              ) gm
         where gm.na_feature_id = gf.na_feature_id
         and s.na_sequence_id = gl.na_sequence_id
         and gf.na_feature_id = gl.na_feature_id
         and gl.is_top_level = 1
         order by case when gl.is_reversed = 1 then -1 * gm.start_min else gm.start_min end
            ]]>
            </sql>
        </sqlQuery>

       <!-- query for the genomic sequence on record page -->
       <sqlQuery name="GeneModelSequence" isCacheable="false" excludeProjects="EuPathDB">
            <testParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">EBI_27499</paramValue>
               <paramValue name="project_id">MicrosporidiaDB</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="sequence"/>
            <sql>
                select source_id, '@PROJECT_ID@' AS project_id,
                   gene_genomic_sequence as sequence
                FROM apidb.GENEGENOMICSEQUENCE_SPLIT
                order by start_min
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- ToxoDB Expand Strains Microarray Expression Mini Graphs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

     <sqlQuery name="ToxoExpandStrainsMicroarray" isCacheable="false" includeProjects="ToxoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="me49_source_id"/>
            <sql>
            select oga.source_id as me49_source_id,
                   ga.source_id as source_id,
                   ga.project_id
            from dots.geneinstance gi, apidb.geneattributes ga,
                 dots.geneinstance ogi, apidb.geneattributes oga,
                 apidb.ToxoExpressionGraphs teg
            where gi.na_feature_id = ga.na_feature_id
             and gi.gene_id = ogi.gene_id
             and ogi.na_feature_id = oga.na_feature_id
             and ga.project_id = '@PROJECT_ID@'
             and teg.source_id = oga.source_id
             and (teg.graph_archetypal = 1  or teg.graph_bradyzoite = 1)
            </sql>
        </sqlQuery>




       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Expression Graphs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="ExpressionGraphs" includeProjects="TriTrypDB,GiardiaDB,AmoebaDB,ToxoDB,PlasmoDB">
            <column name="source_id" />
            <column name="project_id" />
            <column name="profile_name" />
            <column name="module" />
            <column name="species" />
            <column name="has_profile" />
            <column name="display_name" />
            <column name="description" />
            <column name="x_axis" />
            <column name="y_axis" />
            <column name="mainOpen" />
            <column name="dataOpen" />
            <column name="visible_parts" />
            <column name="attribution" />
            <sql>
            <![CDATA[
            select distinct eg.source_id,
                   eg.project_id,
                   eg.profile_name, 
                   eg.has_profile,
                   gd.display_name,
                   gd.module,
                   gd.species,
                   gd.description,
                   gd.X_AXIS,
                   gd.Y_AXIS,
                   gd.visible_parts,
                   nvl(gd.attribution, d.name) as attribution,
                   gd.mainOpen,
                   gd.dataOpen,                   
                   gd.order_num
            from apidb.ExpressionGraphs eg, apidb.profileset ps, apidb.ExpressionGraphDescrip gd,
                 sres.externaldatabaserelease r, sres.externaldatabase d
            where ps.name = eg.profile_name
            and ps.name = gd.profile_name
            and ps.external_database_release_id = r.external_database_release_id
            and r.external_database_id = d.external_database_id
            order by gd.order_num
            ]]>
            </sql>
        </sqlQuery>


       <sqlQuery name="ExpressionGraphsData" includeProjects="TriTrypDB,GiardiaDB,AmoebaDB,ToxoDB,PlasmoDB">

           <testParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">EHI_098180</paramValue>
            </testParamValues>

            <column name="source_id" />
            <column name="project_id" />
            <column name="profile_name" />
            <column name="name" />
            <column name="value" />
            <sql>
            <![CDATA[
            select p.source_id,
                   '@PROJECT_ID@' as project_id,
                    ps.name as profile_name, 
                    pen.name, 
                    round(pe.value, 4) as value
            from apidb.expressiongraphdescrip gd, apidb.profileset ps, 
                 apidb.profile p, apidb.profileelementname pen, apidb.profileelement pe
            where gd.profile_name = ps.name
            and ps.profile_set_id = p.profile_set_id
            and ps.profile_set_id = pen.profile_set_id
            and pe.profile_id = p.profile_id
            and pen.element_order = pe.element_order
            order by gd.display_name, pen.element_order
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- ToxoDB Table for Expression Percentiles                      -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ToxoStrainsMicroarrayPercentile" isCacheable="false" includeProjects="ToxoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="strain"/>
            <column name="percentile"/>
            <column name="rma"/>
            <sql>
           select gf.source_id as source_id,
                  '@PROJECT_ID@' as project_id,
                  regexp_replace(a.name, '\(Type.+') as strain, 
                  regexp_replace(a.name, '.+\(') as type,
                  r.percentile,
                  pe.value as rma
           from rad.analysis a, rad.protocol p, Core.tableinfo t,
                rad.expressionprofile r, dots.genefeature gf,
                apidb.profileset ps, apidb.profile pr, apidb.profileelement pe, apidb.profileelementname pen
           where p.protocol_id = a.protocol_id
            and a.analysis_id = r.analysis_id
            and r.row_id = gf.na_feature_id
            and r.table_id = t.table_id
            and t.name = 'GeneFeature'
            and p.name = 'Paul Davis Expression Percentile'
            and ps.name = 'Expression profiling of the 3 archetypal T. gondii lineages'
            and gf.source_id = pr.source_id
            and ps.profile_set_id = pr.profile_set_id
            and pr.profile_id = pe.profile_id
            and pen.profile_set_id = ps.profile_set_id
            and pe.element_order = pen.element_order
            and substr(lower(pen.name),1,2) = substr(lower(regexp_replace(a.name, '\(Type.+')),1,2) 
           order by pe.element_order
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Aliases -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


<!--
       <sqlQuery name="Aliases" isCacheable="false" includeProjects="PlasmoDB,EuPathDB,TriTrypDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="alias"/>
            <sql>
            SELECT distinct gf.source_id, '@PROJECT_ID@' AS project_id,
                   replace(ng.name, ';current=false','') AS alias
            FROM dots.GeneFeature gf, dots.NaFeatureNaGene nfng, dots.NaGene ng
            WHERE gf.na_feature_id = nfng.na_feature_id
              AND nfng.na_gene_id = ng.na_gene_id
            </sql>
        </sqlQuery>

-->

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Phenotype -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="PhenotypeTable" isCacheable="false" includeProjects="TriTrypDB,EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="phenotype"/>
            <column name="evidence"/>
            <column name="pubmed_id"/>
            <sql>
            SELECT distinct ga.source_id, ga.project_id,
            si.pato_term||' '||CASE WHEN si.pato_term = 'lethal' THEN '' ELSE go_term||' ' END||si.rel_time||' '||plo_term as phenotype, evid_desc as evidence, db_xref as pubmed_id
            from apidb.GENEATTRIBUTES ga, apidb.SIRNA si
            where ga.project_id = '@PROJECT_ID@'
            and ga.source_id = si.gene
            order by si.pato_term||' '||CASE WHEN si.pato_term = 'lethal' THEN '' ELSE go_term||' ' END||si.rel_time||' '||plo_term
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- SNPs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="SNPs" includeProjects="PlasmoDB,ToxoDB,CryptoDB,EuPathDB"
               isCacheable="false">

            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd3_510</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="strain_a_query"/>
            <column name="strain_b_query"/>
            <column name="strain_a_disp"/>
            <column name="strain_b_disp"/>
            <column name="gene_source_id"/>
            <column name="num_non_synonymous"/>
            <column name="num_synonymous"/>
            <column name="num_nonsense"/>
            <column name="num_non_coding"/>
            <column name="cds_snp_density"/>
            <column name="num_total"/>

            <sql includeProjects="PlasmoDB,EuPathDB">
            <![CDATA[
              SELECT source_id, '@PROJECT_ID@' AS project_id,
              source_id as gene_source_id,
              'Pf-' || replace(strain_a,' ','') as strain_a_query,
              CASE WHEN strain_b = 'Preich' THEN 'P. reichenowi (vs. 3D7 only)' ELSE 'Pf-'|| replace(strain_b,' ','') END  as strain_b_query,
              CASE WHEN strain_b = 'Preich' THEN 'Sp. Pf-'||strain_a ELSE strain_a END as strain_a_disp,
              CASE WHEN strain_b = 'Preich' THEN 'Sp. P.reichenowi' ELSE strain_b END as strain_b_disp,
              CASE WHEN strain_b = 'Preich' THEN 0 ELSE total END as ord, cds_length,
        round(non_synonymous / CASE synonymous
           WHEN 0 THEN 1
     ELSE synonymous end, 2) as dn_ds_ratio,
              non_synonymous as num_non_synonymous,synonymous as num_synonymous,
              stop as num_nonsense,non_coding as num_non_coding,total as num_total,
              round(((non_synonymous + synonymous) / cds_length * 1000),2) as cds_snp_density
        FROM apidb.snpsummary
        ORDER BY ord desc
            ]]>
            </sql>

            <sql includeProjects="ToxoDB">
            <![CDATA[
              SELECT ss.source_id, '@PROJECT_ID@' AS project_id,
              strain_a as strain_a_disp, strain_b as strain_b_disp,
              CASE WHEN strain_a = 'ME49' THEN 'Tg-ME49 (type II)' 
              WHEN strain_a = 'RH' THEN 'Tg-RH (type I)'
              WHEN strain_a = 'VEG' THEN 'Tg-VEG (type III)'
              WHEN strain_a = 'GT1' THEN 'Tg-GT1 (type I)'  ELSE strain_a END as strain_a_query,
              CASE WHEN strain_b = 'ME49' THEN 'Tg-ME49 (type II)' 
              WHEN strain_b = 'RH' THEN 'Tg-RH (type I)'
              WHEN strain_b = 'VEG' THEN 'Tg-VEG (type III)'
              WHEN strain_b = 'GT1' THEN 'Tg-GT1 (type I)' ELSE strain_b END as strain_b_query,
              cds_length,source_id as gene_source_id,                
              round(non_synonymous / CASE synonymous WHEN 0 THEN 1  ELSE synonymous end, 2) as dn_ds_ratio,              
              non_synonymous as num_non_synonymous,synonymous as num_synonymous,              
              stop as num_nonsense,non_coding as num_non_coding,total as num_total,              
              round(((non_synonymous + synonymous) / cds_length * 1000),2) as cds_snp_density             
              FROM apidb.SnpSummary ss
              ORDER BY num_total desc
            ]]>
            </sql>

            <sql includeProjects="CryptoDB">
            <![CDATA[
              SELECT ss.source_id, '@PROJECT_ID@' AS project_id,
              UPPER(strain_a) as strain_a_disp,
              UPPER(strain_b) as strain_b_disp, 
              CASE 
              WHEN strain_a = 'tu114' THEN 'TU114'
              WHEN strain_a = 'md' THEN 'MD'
              WHEN strain_a = 'iowa_II' THEN 'IOWA II'
              ELSE strain_a END as strain_a_query,
              CASE 
              WHEN strain_b = 'tu114' THEN 'TU114'
              WHEN strain_b = 'md' THEN 'MD'
              WHEN strain_b = 'iowa_II' THEN 'IOWA II'
              ELSE strain_b END as strain_b_query,
              cds_length,source_id as gene_source_id,                
              round(non_synonymous / CASE synonymous WHEN 0 THEN 1  ELSE synonymous end, 2) as dn_ds_ratio,              
              non_synonymous as num_non_synonymous,synonymous as num_synonymous,              
              stop as num_nonsense,non_coding as num_non_coding,total as num_total,              
              round(((non_synonymous + synonymous) / cds_length * 1000),2) as cds_snp_density             
              FROM apidb.SnpSummary ss
              ORDER BY num_total desc
            ]]>
            </sql>

        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Interpro -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="InterPro" isCacheable="false">
            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd3_1400</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="interpro_name"/>
            <column name="interpro_family_id"/>
            <column name="interpro_primary_id"/>
            <column name="interpro_secondary_id"/>
            <column name="interpro_desc"/>
            <column name="interpro_start_min"/>
            <column name="interpro_end_min"/>
            <column name="interpro_e_value"/>
            <sql>
            <![CDATA[
             select gf.source_id, '@PROJECT_ID@' AS project_id, xd1.name AS interpro_name,
             dr.primary_identifier AS interpro_primary_id, dr.secondary_identifier AS interpro_secondary_id, dr.remark as interpro_desc,
             al.start_min AS interpro_start_min, al.end_min AS interpro_end_min,
             case when df.e_value = 0 then '0' else to_char(df.e_value,'9.9EEEE') end AS interpro_e_value ,
             df2.source_id as interpro_family_id
             from
             dots.aalocation al,
             sres.externaldatabaserelease xdr1,
             sres.externaldatabase xd1,
             sres.externaldatabaserelease xdr3,
             sres.externaldatabase xd3,
             sres.dbref dr,
             dots.DbRefAAFeature draf,
             dots.domainfeature df,
             dots.genefeature gf,
             dots.transcript t,
             dots.translatedaafeature taf,
             dots.translatedaasequence tas,
             dots.domainfeature df2
             where xd3.name in ('InterproscanData_RSRC','INTERPRO')
             and gf.na_feature_id = t.parent_id
             and t.na_feature_id = taf.na_feature_id
             and taf.aa_sequence_id = tas.aa_sequence_id
             and tas.aa_sequence_id = df.aa_sequence_id
             and df.aa_feature_id = draf.aa_feature_id
             and df.aa_feature_id = al.aa_feature_id
             and draf.db_ref_id = dr.db_ref_id
             and dr.external_database_release_id = xdr1.external_database_release_id
             and xdr1.external_database_id = xd1.external_database_id
             and df.external_database_release_id = xdr3.external_database_release_id
             and xdr3.external_database_id = xd3.external_database_id
             and df.parent_id = df2.aa_feature_id (+)
             ORDER BY interpro_name, interpro_start_min
            ]]>
            </sql>
        </sqlQuery>



       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Transmembrane Domains -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="TMHMM" isCacheable="false">

            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd7_50</paramValue>
            </testParamValues>
            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGGT1_097190</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TrichDB">
               <paramValue name="source_id">TVAG_120600</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Tc00.1047053508175.80</paramValue>
            </testParamValues>
            <testParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">EIN_088300</paramValue>
            </testParamValues>
            <testParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU07_1760</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="tmf_name"/>
            <column name="tmf_parent_id"/>
            <column name="tmf_topology"/>
            <column name="tmf_start_min"/>
            <column name="tmf_end_max"/>
            <column name="tmf_sequence"/>

            <sql>
           <![CDATA[
             /* hint added November 2010 to work around puzzling Oracle 11g bug */
             select /*+ no_star_transformation */ gf.source_id, '@PROJECT_ID@' AS project_id,
             tmf.aa_feature_id AS tmf_name,
             tmf.parent_id AS tmf_parent_id, tmf.topology AS tmf_topology,
             aal.start_min AS tmf_start_min, aal.end_max AS tmf_end_max,
             dbms_lob.substr(tas.sequence,aal.end_max - aal.start_min + 1,aal.start_min) AS tmf_sequence
             from
             dots.aalocation aal,
             dots.genefeature gf,
             dots.transcript t,
             dots.translatedaafeature taf,
             dots.translatedaasequence tas,
             dots.transmembraneaafeature tmf
             where gf.na_feature_id = t.parent_id
             and t.na_feature_id = taf.na_feature_id
             and taf.aa_sequence_id = tas.aa_sequence_id
             and tas.aa_sequence_id = tmf.aa_sequence_id
             and tmf.aa_feature_id = aal.aa_feature_id
             ORDER BY tmf_start_min
            ]]>           
          </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Alias  -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Alias" isCacheable="false" excludeProjects="EuPathDB">
            <column name="source_id"/>
            <column name="alias"/>
            <column name="database_name"/>
            <column name="project_id"/>
            <sql>
            <![CDATA[
            SELECT distinct upper(replace(gi.alias, ';current=false','')) as alias, database_name, gi.gene as source_id, '@PROJECT_ID@' as project_id
            FROM apidb.geneid gi
            WHERE REGEXP_LIKE(gi.alias, '\D') 
            ORDER BY database_name
             ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Strains -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Strains" isCacheable="false" includeProjects="ToxoDB">
            <column name="source_id"/>
            <column name="strain_source_id"/>
            <column name="project_id"/>
            <column name="strain"/>
            <column name="product"/>
            <column name="exon_count"/>
            <column name="protein_length"/>
            <column name="signalp_scores"/>
            <column name="tm_count"/>
            <column name="proteomics"/>
            <column name="user_comment"/>
            <column name="old_source_id"/>
            <sql>
            <![CDATA[
               select ga.source_id, gb.SOURCE_ID as strain_source_id, 
                 replace(gb.organism,'Toxoplasma gondii ','') as strain, 
                 gb.project_id, gb.PRODUCT, gb.EXON_COUNT,gb.PROTEIN_LENGTH,
                 CASE WHEN gb.SIGNALP_SCORES is null THEN 'No' ELSE 'Yes' END as signalp_scores,
                 gb.TM_COUNT, toa.old_source_id,
                 CASE WHEN min(ms.aa_sequence_id) is null THEN 'No' ELSE 'Yes' END as proteomics,
                 CASE WHEN min(c.stable_id) is null THEN 'No' ELSE 'Yes' END as user_comment
               from apidb.GENEATTRIBUTES ga, apidb.GENEATTRIBUTES gb,dots.TRANSCRIPT t, 
                 dots.TRANSLATEDAAFEATURE taaf, apidb.MASSSPECSUMMARY ms,
                 apidb.trackoldannotation toa,
                 @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c
               where ga.project_id = '@PROJECT_ID@' 
               and gb.GENE_ID = ga.GENE_ID
               and gb.na_feature_id = t.parent_id(+)
               and t.na_feature_id = taaf.na_feature_id(+)
               and taaf.aa_sequence_id = ms.aa_sequence_id(+)
               and toa.source_id(+) = gb.source_id 
               and gb.source_id = c.stable_id(+)
               group by ga.source_id, gb.SOURCE_ID, gb.project_id, gb.organism, toa.old_source_id, gb.PRODUCT, gb.EXON_COUNT,gb.PROTEIN_LENGTH,gb.SIGNALP_SCORES,gb.TM_COUNT
               order by gb.organism
             ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Signal Peptides -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="SignalP" isCacheable="false">

            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd7_110</paramValue>
            </testParamValues>
            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_054560</paramValue>
            </testParamValues>
            <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_20315</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TrichDB">
               <paramValue name="source_id">TVAG_119560</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Tb10.v4.0153</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="spf_name"/>
            <column name="spf_start_min"/>
            <column name="spf_end_max"/>
            <column name="conclusion_score"/>
            <column name="d_score"/>
            <column name="signal_probability"/>

            <sql>
            <![CDATA[
             select gf.source_id, '@PROJECT_ID@' AS project_id, 
             spf.aa_feature_id AS spf_name,
             spf.parent_id AS spf_parent_id,
             (spf.maxy_conclusion +
               spf.maxc_conclusion +
               spf.maxs_conclusion +
               spf.means_conclusion) as conclusion_score,
               ((spf.means_score + spf.maxy_score) / 2) as d_score,
               spf.signal_probability as signal_probability,
                            1 AS spf_start_min, aal.end_max AS spf_end_max
             from
             dots.aalocation aal,
             dots.genefeature gf,
             dots.transcript t,
             dots.translatedaafeature taf,
             dots.translatedaasequence tas,
             dots.signalpeptidefeature spf
             where gf.na_feature_id = t.parent_id
             and t.na_feature_id = taf.na_feature_id
             and taf.aa_sequence_id = tas.aa_sequence_id
             and tas.aa_sequence_id = spf.aa_sequence_id
             and spf.aa_feature_id = aal.aa_feature_id
             and(
             ( spf.maxy_conclusion +
               spf.maxc_conclusion +
               spf.maxs_conclusion +
               spf.means_conclusion
              ) >= 3
             or ((spf.means_score + spf.maxy_score) / 2) >= 0.5
             or spf.signal_probability >= 0.5)

             ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- BlastP Hits -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="BlastP" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="blastp_feature_id"/>
            <column name="blastp_name"/>
            <column name="blastp_parent_id"/>
            <column name="blastp_score"/>
            <column name="blastp_start"/>
            <column name="blastp_end"/>
            <column name="blastp_description"/>
            <column name="blastp_expect_value"/>
            <column name="blastp_percent_identity"/>
            <column name="blastp_percent_positive"/>

            <sql>
            <![CDATA[
             select source_id, '@PROJECT_ID@' AS project_id, 
             similarity_id AS blastp_feature_id,
             source_id AS blastp_name, query_id AS blastp_parent_id,
             score AS blastp_score,
             min_query_start AS blastp_start, max_query_end AS blastp_end,
             'E() = ' || pvalue_mant || 'e' || pvalue_exp || ', ' || round(100 * number_identical / total_match_length) || '% identity, ' || description AS blastp_description,
             case when pvalue_mant = 0 then '0' else pvalue_mant || 'e' || pvalue_exp end AS blastp_expect_value,
             round(100 * number_identical / total_match_length) AS blastp_percent_identity,
             round(100 * number_positive / total_match_length) AS blastp_percent_positive
             from apidb.blastp
             order by pvalue_exp, pvalue_mant
             ]]>
            </sql>
        </sqlQuery>



       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Low Complexity Regions -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


       <sqlQuery name="LowComplexity" isCacheable="false">

            <testParamValues minRows="0" includeProjects="CryptoDB"/>
            <testParamValues includeProjects="TrichDB">
               <paramValue name="source_id">TVAG_563160</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">LmjF.02.0480</paramValue>
            </testParamValues>
            <testParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">EIN_088300</paramValue>
            </testParamValues>
            <testParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU07_1760</paramValue>
            </testParamValues>


            <column name="source_id"/>
            <column name="project_id"/>
            <column name="lc_name"/>
            <column name="lc_parent_id"/>
            <column name="lc_start_min"/>
            <column name="lc_end_max"/>

            <sql>
            <![CDATA[
             select gf.source_id, '@PROJECT_ID@' AS project_id, 
             lc.aa_feature_id AS lc_name,
             lc.aa_sequence_id AS lc_parent_id,
             aal.start_min AS lc_start_min, aal.end_max AS lc_end_max
             --substr(aas.sequence, aal.start_min, (aal.end_max-aal.start_min+1)) AS lc_sequence
             --dbms_lob.substr(aas.sequence, (aal.end_max-aal.start_min+1), aal.start_min) AS lc_sequence
             from
             dots.aalocation aal,
             dots.genefeature gf,
             dots.transcript t,
             dots.translatedaafeature taf,
             dots.lowcomplexityaafeature lc, 
             dots.aaSequence aas
             where gf.na_feature_id = t.parent_id
             and t.na_feature_id = taf.na_feature_id
             and taf.aa_sequence_id = lc.aa_sequence_id
             and lc.aa_feature_id = aal.aa_feature_id
             and lc.aa_sequence_id = aas.aa_sequence_id
             ORDER BY lc_start_min            
             ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Notes -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Notes"
               isCacheable="false" clobRow="true">

            <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">MAL13P1.100</paramValue>
            </testParamValues>
            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd1_200</paramValue>
            </testParamValues>
            <testParamValues minRows="0" includeProjects="TrichDB"/>
            <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_8010</paramValue>
            </testParamValues>
            <testParamValues includeProjects="AmoebaDB">
               <paramValue name="source_id">ECU07_1485</paramValue>
            </testParamValues>
	    <testParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU02_0880</paramValue>
               <paramValue name="project_id">MicrosporidiaDB</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="comment_string"/>
            <sql includeProjects="PlasmoDB,ToxoDB,TrichDB,GiardiaDB,AmoebaDB,MicrosporidiaDB,InitDB,EuPathDB">
            <![CDATA[
            SELECT nfc.comment_string, 
            nf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.naFeatureComment nfc, dots.GeneFeature nf
            WHERE nf.na_feature_id = nfc.na_feature_id
              AND NOT to_char(comment_string) = 'NULL;'
            ]]>
            </sql>
            <sql includeProjects="TriTrypDB">
            <![CDATA[
            SELECT nfc.comment_string, nf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.naFeatureComment nfc, dots.GeneFeature nf
            WHERE nf.na_feature_id = nfc.na_feature_id
              AND NOT to_char(comment_string) = 'NULL;'
              and nfc.na_feature_comment_id not in (
                 select c.na_feature_comment_id 
                 from dots.NAFEATURECOMMENT c, apidb.SIRNA s, dots.GENEFEATURE f
                 where c.na_feature_id = f.na_feature_id
                 and to_char(c.comment_string) like '%'||s.db_xref||'%')
            ]]>
            </sql>
            <sql includeProjects="CryptoDB"> 
            <![CDATA[
            SELECT comment_string, 
            feat.source_id, '@PROJECT_ID@' as project_id
            FROM   dots.NAFeatureComment nafc,
            (
            select source_id, na_feature_id from dots.transcript
            union
            select source_id, na_feature_id from dots.rnatype
            union
            select source_id, na_feature_id from dots.RNAStructure
            union
            select source_id, na_feature_id from dots.genefeature g
            ) feat
            WHERE nafc.na_feature_id = feat.na_feature_id
            AND TO_CHAR(comment_string) not like 'introns and exons likely.' 
            AND TO_CHAR(comment_string) not like 'introns and exons likely'
            ]]>
            </sql>
        </sqlQuery>

        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Old Toxo Comments -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--
       <sqlQuery name="OldToxoComments" includeProjects="ToxoDB"
                 isCacheable="false">

            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">25.m00188</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="comment_id"/>
            <column name="stable_id"/>
            <column name="release4_id"/>
            <column name="headline"/>
            <column name="user_name"/>
            <column name="organization"/>
            <column name="comment_date"/>
            <column name="project_version"/>
            <sql>
            <![CDATA[
              SELECT DISTINCT toa.source_id, '@PROJECT_ID@' as project_id, 
                     c.comment_id, c.stable_id,
                     NVL(c.headline, '<i>none</i>') AS headline,
                     (u.first_name || ' ' || u.last_name) AS user_name,
                     u.organization,toa.old_source_id as release4_id,
                     c.comment_date, c.project_version
              FROM @USER_SCHEMA@users@USER_DBLINK@ u,
                   @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c,
                   apidb.trackoldannotation toa
              WHERE u.user_id = c.user_id
                    AND c.comment_target_id = 'gene'
                    AND c.stable_id = toa.old_source_id
                    AND c.review_status_id != 'rejected'
                    AND c.review_status_id != 'task'
              ORDER BY c.comment_date DESC
            ]]>
            </sql>
        </sqlQuery>
-->
 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- EC number -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="EcNumber" excludeProjects="AmoebaDB,MicrosporidiaDB"
               isCacheable="false">

            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd2_980</paramValue>
            </testParamValues>
            <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">MAL13P1.166 </paramValue>
            </testParamValues>
            <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_10055</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TrichDB">
               <paramValue name="source_id">TVAG_072070</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Tb927.7.1690</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="ec_number" />
            <column name="source"/>
            <column name="ec_description"/>
            <column name="expasy_url" excludeProjects="CryptoDB"/>
            <sql includeProjects="CryptoDB,EuPathDB">
            <![CDATA[
            SELECT distinct 
                   CASE 
                   WHEN asec.evidence_code = 'CryptoCyc' THEN
                      DECODE(LOWER(SUBSTR(gf.source_id, 1, 3)), 'cgd', 
                      '<a href=''http://cryptocyc.cryptodb.org/CRYPTO/NEW-IMAGE?type=GENE&object=' || gf.source_id || '''>CryptoCyc</a>', 
                      '<a href=''http://cryptocyc.cryptodb.org/HOMINIS/NEW-IMAGE?type=GENE&object=' || gf.source_id || '''>CryptoCyc</a>'
                      )
                   WHEN asec.evidence_code = 'KEGG' THEN
                      DECODE(LOWER(SUBSTR(gf.source_id, 1, 3)), 'cgd', 
                      '<a href=''http://www.genome.jp/dbget-bin/www_bget?cpv:' || gf.source_id || '''>KEGG</a>', 
                      '<a href=''http://www.genome.jp/dbget-bin/www_bget?cho:' || gf.source_id || '''>KEGG</a>' 
                      )
                   ELSE
                       asec.evidence_code 
            END  AS source,
                   ec.ec_number,
                   ec.description as ec_description,
                   gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.translatedAaFeature taf,
                 dots.genefeature gf,
                 dots.transcript t,
                 dots.aaSequenceEnzymeClass asec, 
                 sres.enzymeClass ec
            WHERE  gf.na_feature_id = t.parent_id
              AND  t.na_feature_id = taf.na_feature_id
              AND  taf.aa_sequence_id = asec.aa_sequence_id
              AND  asec.enzyme_class_id = ec.enzyme_class_id
            ]]>
            </sql>
            <sql includeProjects="PlasmoDB,ToxoDB,TrichDB,GiardiaDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,InitDB">
            <![CDATA[
            SELECT distinct asec.evidence_code AS source, ec.ec_number,
                   ec.description as ec_description,
                   'http://us.expasy.org/cgi-bin/enzyme-search-ec?field1='
                   ||ec_number_1
                   || decode(ec_number_2, null, null,
                             chr(38) || 'field2='||ec_number_2)
                   || decode(ec_number_3, null, null,
                             chr(38) || 'field3='||ec_number_3)
                   || decode(ec_number_4, null, null,
                             chr(38) || 'field4='||ec_number_4)
                   as expasy_url, 
                   gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf,
                 dots.translatedAaFeature taf, dots.Transcript t,
                 dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
            WHERE t.parent_id = gf.na_feature_id
              AND taf.na_feature_id = t.na_feature_id
              AND asec.aa_sequence_id = taf.aa_sequence_id
              AND ec.enzyme_class_id = asec.enzyme_class_id
            ]]>
            </sql>
        </sqlQuery>

<!--
  <sqlQuery name="EcNumber" includeProjects="EuPathDB" 
               isCacheable="false">
            <column name="ec_number" />
            <column name="source"/>
            <column name="ec_description"/>
            <column name="expasy_url" excludeProjects="CryptoDB"/> 

            <sql>
            <![CDATA[
            SELECT 1  AS source, 
                   2 as ec_number,
                   3  as ec_description,
                   'http://us.expasy.org/cgi-bin/enzyme-search-ec?field1='  as expasy_url, 
                   '@PROJECT_ID@' as project_id
            FROM apidb.genetable
           
            ]]>

            </sql>
        </sqlQuery>
-->

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- GO terms -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="GoTerms"
                  isCacheable="false">
           <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_10019</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="is_not"/>
            <column name="go_id"/>
            <column name="ontology"/>
            <column name="go_term_name"/>
            <column name="source"/>
            <column name="evidence_code"/>
            <column name="lowercase_evidence_code"/>
            <sql>
            <![CDATA[
            SELECT gts.is_not, gts.go_id, gts.ontology, gts.go_term_name,
                    gts.source, gts.evidence_code,
                    lower(gts.evidence_code) AS lowercase_evidence_code, 
                    gts.source_id, '@PROJECT_ID@' as project_id
            FROM apidb.GoTermSummary gts
            ORDER BY gts.ontology, gts.go_id
            ]]>
            </sql>
        </sqlQuery>

 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Pathways -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="MetabolicPathways" includeProjects="ToxoDB,PlasmoDB,EuPathDB"
                   isCacheable="false">
             <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_078740</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="pathway_id"/>
            <column name="pathway_name"/>
            <column name="activity"/>

            <sql includeProjects="PlasmoDB,EuPathDB">
            <![CDATA[
            SELECT DISTINCT dr.primary_identifier AS pathway_id,
                            TRIM(REPLACE(decode(dr.lowercase_secondary_identifier, null, dr.primary_identifier, dr.lowercase_secondary_identifier), CHR(191),'')) AS pathway_name,
                            dr.remark as activity, 
                            gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf,
                 dots.DbRefNaFeature drnf,
                 sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE gf.na_feature_id = drnf.na_feature_id
            AND drnf.db_ref_id = dr.db_ref_id
            AND dr.external_database_release_id = edr.external_database_release_id
            AND edr.external_database_id = ed.external_database_id
            AND ed.name = 'Pf_PathwayMappings_Hagai_RSRC'
            ORDER BY dr.primary_identifier
            ]]>
            </sql>

            <sql includeProjects="ToxoDB">
            <![CDATA[
      SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id,
                   dr.primary_identifier AS pathway_id,
                   decode(dr.lowercase_secondary_identifier, null, dr.primary_identifier, dr.lowercase_secondary_identifier) AS pathway_name,
                   dr.remark as activity
      FROM dots.GeneFeature gf,dots.Transcript t, dots.DbRefaaFeature draf, 
           sres.DbRef dr, dots.TranslatedAaFeature taf,
           sres.ExternalDatabaseRelease edr,
           sres.ExternalDatabase ed
    WHERE gf.na_feature_id = t.parent_id
      AND t.na_feature_id = taf.na_feature_id
            AND taf.aa_feature_id = draf.aa_feature_id
            AND draf.db_ref_id = dr.db_ref_id
      AND dr.external_database_release_id = edr.external_database_release_id
      AND edr.external_database_id = ed.external_database_id
      AND ed.name = 'Links to Pathway Maps'
      ORDER BY dr.primary_identifier
            ]]>
            </sql>
        </sqlQuery>

 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Orthologs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Orthologs"
                  isCacheable="false">

            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_053730</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="ortho_source_id"/>
            <column name="species"/>
            <column name="product"/>
            <column name="is_syntenic" excludeProjects="EuPathDB"/>
            <column name="comment_count" excludeProjects="EuPathDB"/>
            <sql includeProjects="EuPathDB">
            <![CDATA[
            SELECT DISTINCT gf2.source_id AS ortho_source_id, tn.name as species, gf2.product, 
                   gf1.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf1, dots.SequenceSequenceGroup ssg1,
                 dots.SequenceSequenceGroup ssg2, dots.GeneFeature gf2,
                 dots.NaSequence ens, core.TableInfo ti,
                 sres.TaxonName tn
            WHERE gf1.na_feature_id = ssg1.sequence_id
              AND ssg1.source_table_id = ti.table_id
              AND ssg1.sequence_group_id = ssg2.sequence_group_id
              AND ssg2.source_table_id = ti.table_id
              AND ssg2.sequence_id = gf2.na_feature_id
              AND gf2.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id = tn.taxon_id
              AND tn.name_class = 'scientific name'
              AND ti.name = 'GeneFeature'
              AND gf2.source_id != gf1.source_id
            ORDER BY tn.name, gf2.source_id
            ]]>
            </sql>

            <sql excludeProjects="EuPathDB">
            <![CDATA[
            select ogt.source_id, ogt.project_id, ogt.ortho_source_id, ogt.product, ogt.organism,
                   ogt.is_syntenic, nvl(comments.comment_count, 'no') as comment_count
            from apidb.OrthologGeneTable ogt,
                 (with comment_q as (select cmnts.comment_id, cmnts.stable_id as source_id, cmnts.project_name as project_id
                                     from @COMMENT_SCHEMA@comments@COMMENT_DBLINK@ cmnts
                                     where cmnts.comment_target_id = 'gene'
                                       and cmnts.review_status_id != 'rejected'
                                       and cmnts.is_visible = 1
                                       and cmnts.project_name = '@PROJECT_ID@')
                  select 'yes' as comment_count, source_id, project_id
                  from (  select source_id, project_id
                          from comment_q
                        union
                          select csi.stable_id as source_id, cq.project_id
                          from comment_q cq, @COMMENT_SCHEMA@CommentStableId@COMMENT_DBLINK@ csi
                          where cq.comment_id = csi.comment_id)) comments
            where ogt.ortho_source_id = comments.source_id(+)
              and ogt.project_id = comments.project_id(+)
            order by organism, ortho_source_id
            ]]>
            </sql>
       </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Epitopes -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Epitopes"
                  isCacheable="false"  excludeProjects="TrichDB,AmoebaDB,MicrosporidiaDB">

            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd6_1800</paramValue>
            </testParamValues>
            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGVEG_017550</paramValue>
            </testParamValues>
            <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_6081</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">LmjF.10.0460</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="iedb_id"/>
            <column name="location"/>
            <column name="sequence"/>
            <column name="name"/>
            <column name="confidence"/>
            <sql>
            <![CDATA[
                SELECT es.iedb_id, es.location, 
                       TO_CHAR(es.sequence) AS sequence, 
                       es.name,
                       es.confidence, 
                       es.source_id, '@PROJECT_ID@' as project_id
                FROM apidb.EpitopeSummary es
                ORDER BY DECODE(es.confidence, 'Low', 1,
                              'Medium', 2,
                              'High', 3,
                              4) desc,es.location
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Isolate Overlap  -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="IsolateOverlap" includeProjects="CryptoDB,EuPathDB"
                  isCacheable="false">

            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd6_2090</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="total"/>
            <sql>
            <![CDATA[
            SELECT source_id, '@PROJECT_ID@' as project_id, count(*) as total
            FROM (SELECT DISTINCT gio.gene_source_id as source_id, gio.isolate_source_id as isolate
                  FROM apidb.GeneIsolateOverlap gio) isolates
            GROUP BY source_id
            ]]>
           </sql>
       </sqlQuery>
 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Mass spec -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="MassSpec" includeProjects="CryptoDB,GiardiaDB,PlasmoDB,ToxoDB,TriTrypDB,TrichDB,EuPathDB"
                  isCacheable="false">


            <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_17249</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Tb11.0550</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TrichDB">
               <paramValue name="source_id">TVAG_230580</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="study_name"/>
            <column name="developmental_stage"/>
            <column name="seq_coverage"/>
            <column name="number_of_spans"/>
            <column name="sequence_count"/>
            <column name="spectrum_count"/>
            <sql>
            <![CDATA[
               SELECT mss.developmental_stage,
                      mst.display_term as study_name,
                      mss.aa_seq_percent_covered as seq_coverage,
                      mss.number_of_spans, mss.sequence_count, mss.spectrum_count, 
                      gf.source_id, '@PROJECT_ID@' as project_id
               FROM dots.TranslatedAaFeature taf, dots.genefeature gf, 
                    dots.transcript t, apidb.MassSpecSummary mss, 
                    sres.externalDatabase ed, sres.externalDatabaseRelease edr, apidb.massSpecTerms mst
               WHERE t.parent_id = gf.na_feature_id
                 AND taf.na_feature_id = t.na_feature_id
                 AND mss.aa_sequence_id = taf.aa_sequence_id
                 AND mss.external_database_release_id = edr.external_database_release_id
                 AND edr.external_database_id = ed.external_database_id
                 AND ed.name = mst.extdb_name
               ORDER by mss.developmental_stage, ed.name
            ]]>
            </sql>
        </sqlQuery>
        <sqlQuery name="MassSpecDownload" includeProjects="CryptoDB,GiardiaDB,PlasmoDB,ToxoDB,TriTrypDB,TrichDB"
                  isCacheable="false" clobRow="true">

            <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_17249</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Tb11.0550</paramValue>
            </testParamValues>
            <testParamValues includeProjects="TrichDB">
               <paramValue name="source_id">TVAG_230580</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="experiment"/>
            <column name="sequence"/>
            <column name="sequence_count"/>
            <column name="protein_start"/>
            <column name="protein_end"/>
            <sql>
            <![CDATA[
            select source_id, experiment, sequence, count(*) as spectrum_count, '@PROJECT_ID@' as project_id, protein_start, protein_end
            from (
            SELECT gf.source_id,
                   mst.display_term as experiment,
                   to_Char(substr(taas.sequence, aal.start_min, aal.end_max - aal.start_min + 1)) as sequence,
                   aal.start_min as protein_start,
                   aal.end_max as protein_end
            FROM  dots.massspecfeature msf,
                  dots.aalocation aal,
                  dots.translatedaafeature taaf,
                  dots.translatedaasequence taas,
                  sres.externaldatabaserelease edr,
                  sres.externaldatabase ed,
                  dots.transcript t, 
                  dots.genefeature gf,
                  apidb.massspecterms mst
            WHERE msf.parent_id = taaf.aa_feature_id
                  AND taaf.aa_sequence_id = taas.aa_sequence_id
                  AND msf.aa_feature_id = aal.aa_feature_id
                  AND msf.external_database_release_id = edr.external_database_release_id
                  AND edr.external_database_id = ed.external_database_id
                  and taaf.na_feature_id = t.na_feature_id
                  and t.parent_id = gf.na_feature_id
                  and mst.extdb_name = ed.name
                  )
             GROUP BY source_id, experiment, sequence, '@PROJECT_ID@', protein_start, protein_end
            ORDER BY experiment;
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- toxoversion4 genes -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

     <sqlQuery name="ToxoVer4Genes" isCacheable="false" includeProjects="ToxoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="old_source_id"/>
            <column name="start_min"/>
            <column name="end_max"/>
            <column name="strand"/>
            <column name="context_start"/>
            <column name="context_end"/>
            <column name="product"/>
            <column name="same_protein"/>
            <column name="cyc_gene_id"/>
            <sql>
            <![CDATA[
              select toa.source_id, '@PROJECT_ID@' AS project_id,
                     old_source_id,tv.sequence_id,tv.start_min,tv.end_max,
                     decode(tv.strand,'reverse','-','+') as strand,
                     tv.context_start,tv.context_end,tv.product,
                     decode(toa.new_protein,0,'Yes',1,'No') as same_protein,
                     upper(old_source_id) as cyc_gene_id
              from apidb.TRACKOLDANNOTATION toa, apidb.TOXOVERSION4GENES tv
              where toa.old_source_id = tv.source_id
            ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!--Gene Location -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

     <sqlQuery name="Genbank" isCacheable="false" includeProjects="TriTrypDB,ToxoDB,GiardiaDB,CryptoDB,EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="sequence_source_id"/>
            <column name="is_top_level"/>
            <column name="start_min"/>
            <column name="end_max"/>
            <column name="is_reversed"/>
            <column name="start_context"/>
            <column name="end_context"/>
            <column name="feature_source_id"/>
            <sqlParamValue name="top_level" includeProjects="TriTrypDB">
              Decode(fl.is_top_level,0, 'Contig', 1, 'Chromosome')
            </sqlParamValue>
            <sqlParamValue name="top_level" includeProjects="GiardiaDB,EuPathDB">
              Decode(fl.is_top_level,0, 'Contig', 1, 'Scaffold')
            </sqlParamValue>
            <sqlParamValue name="top_level" includeProjects="ToxoDB">
              CASE WHEN fl.sequence_source_id like 'TG%' THEN 'Chromosome' ELSE 'Scaffold' END
            </sqlParamValue>
            <sqlParamValue name="top_level" includeProjects="CryptoDB">
              Decode(fl.is_top_level,0, 'Contig', 1, 'Chromosome')
            </sqlParamValue>
            <sql>
            <![CDATA[
              SELECT fl.feature_source_id AS source_id, ga.project_id,
                     fl.feature_source_id,
                     fl.sequence_source_id,
                     &&top_level&& as is_top_level,
                     fl.start_min,
                     fl.end_max,
                     Decode(fl.is_reversed, 0, '+', 1, '-') is_reversed,
                    (fl.start_min-5000)as start_context,
                    (fl.end_max+5000)as end_context
              FROM apidb.featurelocation fl,apidb.geneattributes ga
              WHERE ga.project_id = '@PROJECT_ID@'
              AND ga.na_feature_id = fl.na_feature_id
              AND fl.feature_type = 'GeneFeature'
              ORDER BY fl.is_top_level desc
            ]]>
            </sql>
        </sqlQuery>

    
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Sage Tags -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="SageTags" isCacheable="false" includeProjects="PlasmoDB,GiardiaDB,TriTrypDB,EuPathDB">
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">Tb927.3.1320</paramValue>
            </testParamValues>

            <column name="sta_source_id"/>
            <column name="rad_source_id"/>
            <column name="library"/>
            <column name="sequence"/>
            <column name="frequency"/>
            <column name="percent"/>
            <column name="genomeOccurrences"/>
            <column name="sense"/>
            <column name="source_id"/>
            <column name="project_id"/>
            <sql>
            <![CDATA[
               SELECT distinct tg.tag_source_id,
                       sta.rad_source_id as rad_source_id,
                       t.library_name as library,
                      'CATG' || t.sequence as sequence, 
                      round(t.tag_count,1) as frequency,
                      round((t.tag_count / t.library_total_tag_count * 100),3 ) || '%'as percent,
                      t.occurrence as genomeOccurrences,
                      decode(tg.antisense,0,'sense',1,'antisense') as sense,
                      sta.source_id AS sta_source_id, 
                      tg.gene_source_id AS source_id,
                      '@PROJECT_ID@' as project_id, a.assay_id
               FROM apidb.SageTagAnalysisAttributes t, apidb.SageTagGene tg, apidb.SageTagAttributes sta, rad.assay a
               WHERE t.composite_element_id = tg.tag_source_id
                 AND tg.tag_feature_id = sta.na_feature_id
                 AND a.name = t.library_name
                 AND tg.distance = 0
                 AND tg.direction = '3'
              ORDER BY sense desc, a.assay_id asc, frequency desc
            ]]>
            </sql>
        </sqlQuery>

    
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- single-row attribute "tables" to put values in GeneDetail    -->
       <!-- where text search can find them                              -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Product" isCacheable="false">
            <column name="product"/>
            <column name="source_id"/>
            <column name="project_id"/>
            <sql>
            <![CDATA[
               SELECT source_id, product,
                      '@PROJECT_ID@' as project_id
               FROM apidb.geneattributes
            ]]>
            </sql>
        </sqlQuery>

       <sqlQuery name="GeneId" isCacheable="false">
            <column name="gene_id"/>
            <column name="source_id"/>
            <column name="project_id"/>
            <sql>
            <![CDATA[
               SELECT source_id, source_id as gene_id,
                      '@PROJECT_ID@' as project_id
               FROM dots.GeneFeature
            ]]>
            </sql>
        </sqlQuery>

  <!--===========================================================================-->
  <!--===========================================================================-->
  <!-- GFF data dump tables  -->
  <!--===========================================================================-->
  <!--===========================================================================-->

       <sqlQuery name="GeneGffAliases" isCacheable="false">

            <testParamValues minRows="0" includeProjects="CryptoDB"/>
            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">NCLIV_000310</paramValue>
            </testParamValues>
            <testParamValues minRows="0" includeProjects="GiardiaDB"/>
            <testParamValues includeProjects="TriTrypDB">
               <paramValue name="source_id">LinJ23_V3.0280</paramValue>
            </testParamValues>
            <testParamValues includeProjects="MicrosporidiaDB">
               <paramValue name="source_id">ECU10_1660</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="gff_alias"/>
                <sql>
                <![CDATA[
                SELECT DISTINCT gene AS source_id, '@PROJECT_ID@' AS project_id, alias AS gff_alias
                FROM apidb.GeneId
                ]]>
                </sql>
       </sqlQuery>
        
       <sqlQuery name="GeneGffGoTerms" displayName="GO Terms" isCacheable="false">

          <testParamValues includeProjects="GiardiaDB">
               <paramValue name="source_id">GL50803_14842</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
                <column name="gff_go_id"/>
                <sql>
                <![CDATA[
                SELECT gts.source_id, '@PROJECT_ID@' as project_id,
                       gts.go_id AS gff_go_id
                FROM apidb.GoTermSummary gts
                ORDER BY gts.ontology, gts.go_id
                ]]>
                </sql>
       </sqlQuery>

       <sqlQuery name="GeneGffDbxrefs" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
        <column name="gff_dbxref"/>
        <sqlParamValue name="brcName" includeProjects="PlasmoDB">ApiDB_PlasmoDB</sqlParamValue>
        <sqlParamValue name="brcName" includeProjects="CryptoDB">ApiDB_CryptoDB</sqlParamValue>
        <sqlParamValue name="brcName" includeProjects="ToxoDB">ApiDB_ToxoDB</sqlParamValue>
        <sqlParamValue name="brcName" includeProjects="GiardiaDB,TrichDB,EuPathDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,InitDB">ApiDB</sqlParamValue>
        <sql>
          <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id,
                   'taxon:' || t.ncbi_tax_id AS gff_dbxref
            FROM dots.GeneFeature gf, dots.NaSequence ns, sres.Taxon t
            WHERE gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id = t.taxon_id
           UNION
            SELECT gf.source_id, '@PROJECT_ID@' as project_id,
                   'EC:' || ec.ec_number AS gff_dbxref
            FROM dots.GeneFeature gf,
                 dots.translatedAaFeature taf, dots.Transcript t,
                 dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec
            WHERE t.parent_id = gf.na_feature_id
              AND taf.na_feature_id = t.na_feature_id
              AND asec.aa_sequence_id = taf.aa_sequence_id
              AND ec.enzyme_class_id = asec.enzyme_class_id
           UNION
/*            SELECT gf.source_id, '@PROJECT_ID@' as project_id, so.so_id AS gff_dbxref
            FROM dots.GeneFeature gf, sres.SequenceOntology so
            WHERE gf.sequence_ontology_id = so.sequence_ontology_id
           UNION
*/            SELECT gf.source_id, '@PROJECT_ID@' as project_id,
                   'NCBI_gi:' || dr.secondary_identifier AS gff_dbxref
            FROM dots.GeneFeature gf, dots.DbRefNaFeature drnf,
                 sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE gf.na_feature_id = drnf.na_feature_id
              AND drnf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id
                    = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name in ('NRDB_gb_dbXRefBySeqIdentity',
                              'NRDB_ref_dbXRefBySeqIdentity',
                              'NRDB_sp_dbXRefBySeqIdentity')
           UNION
            SELECT gf.source_id, '@PROJECT_ID@' as project_id,
                   'PDB:' || dr.primary_identifier AS gff_dbxref
            FROM dots.aafeature aaf, dots.GeneFeature gf, dots.transcript t,
                 dots.DbRefaaFeature drnf,  sres.DbRef dr,
                 sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
            WHERE gf.na_feature_id = t.parent_id
              AND t.na_feature_id = aaf.na_feature_id
              AND aaf.aa_feature_id = drnf.aa_feature_id
              AND drnf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name in ('Predicted protein structures', 'Pf_predictedProteinStructures_RSRC')
           UNION
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id,
                   'Sanger:' || gf.source_id AS gff_dbxref
            FROM dots.GeneFeature gf, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE gf.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name like 'Sanger%'
           UNION
            SELECT gf.source_id, '@PROJECT_ID@' as project_id,
                   '&&brcName&&:' || gf.source_id AS gff_dbxref
            FROM dots.GeneFeature gf
          ]]>
        </sql>
    </sqlQuery>

    <sqlQuery name="GeneGffRnas" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_size"/>
        <column name="gff_attr_parent"/>
        <column name="gff_protein_sequence"/>
        <sql>
            select gf.source_id, '@PROJECT_ID@' as project_id, 
                   'apidb|' || ns.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   decode(so.term_name,
                          'protein_coding', 'mRNA',
                          'repeat_region', 'mRNA',
                          'rRNA_encoding', 'rRNA',
                          'snRNA_encoding', 'snRNA',
                          'snoRNA_encoding', 'snRNA',
                          'tRNA_encoding', 'tRNA',
                          'non_protein_coding', 'transcript',
                          so.term_name) as gff_type,
                   least(nl.start_min, nl.end_max) as gff_fstart,
                   greatest(nl.start_min, nl.end_max) as gff_fend,
                   '.' as gff_score,
                   decode(nl.is_reversed, 1, '-', '+') as gff_strand,
                   '.' as gff_phase,
                   'apidb|' || gf.source_id as gff_attr_parent,
                   'apidb|rna_' || rna.source_id as gff_attr_id,
                   rna.source_id as gff_attr_name,
                   rna.product as gff_attr_description,
                   (nl.end_max - nl.start_min + 1) as gff_attr_size,
                   protein.sequence as gff_protein_sequence
            from DoTS.GeneFeature gf,
                 DoTS.Transcript rna,
                 apidb.FeatureLocation nl,
                 DoTS.NaSequence ns,
                 sres.externaldatabase ed,
                 sres.externaldatabaserelease edr,
                 sres.SequenceOntology so,
                 (select gf2.source_id, tas.sequence
                  from dots.GeneFeature gf2, dots.Transcript t,
                       dots.TranslatedAaFeature taf, dots.TranslatedAaSequence tas
                  where gf2.na_feature_id = t.parent_id
                    and t.na_feature_id = taf.na_feature_id
                    and taf.aa_sequence_id = tas.aa_sequence_id) protein
            where gf.na_feature_id = rna.parent_id
                and gf.na_feature_id = nl.na_feature_id
                and nl.is_top_level = 1
                and ns.na_sequence_id = nl.na_sequence_id
                and rna.external_database_release_id = edr.external_database_release_id
                AND edr.external_database_id = ed.external_database_id
                and gf.sequence_ontology_id = so.sequence_ontology_id
                and gf.source_id = protein.source_id(+)
            order by nl.start_min asc, nl.end_max asc
        </sql>
    </sqlQuery>

    <sqlQuery name="GenBankExons" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
        <column name="start"/>
        <column name="end"/>
        <sql>
            select 
                   least(nl.coding_start, nl.coding_end) as exon_start,
                   greatest(nl.coding_start, nl.coding_end) as exon_end,
                   gf.source_id, '@PROJECT_ID@' as project_id
            from DoTS.GeneFeature gf,
                 DoTS.Transcript rna,
                 DoTS.ExonFeature ef,
                 apidb.FeatureLocation nl,
                 DoTS.NaSequence ns,
                 dots.RnaFeatureExon rfe
            where gf.na_feature_id = rna.parent_id
            and rna.na_feature_id = rfe.rna_feature_id
            and ef.na_feature_id = rfe.exon_feature_id
            and ef.na_feature_id = nl.na_feature_id
            and nl.is_top_level = 1
            and nl.na_sequence_id = ns.na_sequence_id
            and ef.coding_start is not null
            and ef.coding_start != -1
            and ef.coding_end is not null
            and ef.coding_end != -1
            order by ef.order_number
        </sql>
    </sqlQuery>

    <sqlQuery name="GeneGffCdss" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_size"/>
        <column name="gff_attr_parent"/>
        <sql>
            <![CDATA[
            select 'apidb|' || ns.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   'CDS' as gff_type,
                   least(nl.coding_start, nl.coding_end) as gff_fstart,
                   greatest(nl.coding_start, nl.coding_end) as gff_fend,
                   '.' as gff_score,
                   decode(nl.is_reversed, 1, '-', '+') as gff_strand,
                   mod(3 - mod((select nvl(sum(greatest(ef2.coding_start, ef2.coding_end)
                                               - least(ef2.coding_start, ef2.coding_end) +1
                                               ), 0)
                        from dots.ExonFeature ef2
                        where parent_id = ef.parent_id
                          and order_number < ef.order_number), 3), 3) as gff_phase,
                   'apidb|rna_' || rna.source_id as gff_attr_parent,
                   'apidb|cds_' || rna.source_id as gff_attr_id,
                   'cds' as gff_attr_name,
                   '.' as gff_attr_description,
                   (nl.end_max - nl.start_min + 1) as gff_attr_size, 
                   gf.source_id, '@PROJECT_ID@' as project_id
            from DoTS.GeneFeature gf,
                 DoTS.Transcript rna,
                 DoTS.ExonFeature ef,
                 apidb.FeatureLocation nl,
                 DoTS.NaSequence ns,
                 sres.SequenceOntology so,
                 dots.RnaFeatureExon rfe
            where gf.na_feature_id = rna.parent_id
            and rna.na_feature_id = rfe.rna_feature_id
            and ef.na_feature_id = rfe.exon_feature_id
            and ef.na_feature_id = nl.na_feature_id
            and nl.is_top_level = 1
            and nl.na_sequence_id = ns.na_sequence_id
            and ef.coding_start is not null
            and ef.coding_start != -1
            and ef.coding_end is not null
            and ef.coding_end != -1
            and gf.sequence_ontology_id = so.sequence_ontology_id
            and so.term_name in ('protein_coding', 'repeat_region')
            order by ef.order_number
            ]]>
        </sql>
    </sqlQuery>


    <sqlQuery name="GeneGffExons" isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
        <column name="gff_seqid"/>
        <column name="gff_source"/>
        <column name="gff_type"/>
        <column name="gff_fstart"/>
        <column name="gff_fend"/>
        <column name="gff_score"/>
        <column name="gff_strand"/>
        <column name="gff_phase"/>
        <column name="gff_attr_id"/>
        <column name="gff_attr_name"/>
        <column name="gff_attr_description"/>
        <column name="gff_attr_size"/>
        <column name="gff_attr_parent"/>
        <sql>
            <![CDATA[
            select 'apidb|' || ns.source_id as gff_seqid,
                   'ApiDB' as gff_source,
                   'exon' as gff_type,
                   least(nl.start_min, nl.end_max) as gff_fstart,
                   greatest(nl.start_min, nl.end_max) as gff_fend,
                   '.' as gff_score,
                   decode(nl.is_reversed, 1, '-', '+') as gff_strand,
                   '.'  as gff_phase,
                   'apidb|rna_' || rna.source_id as gff_attr_parent,
                   'apidb|exon_' || ef.source_id as gff_attr_id,
                   ef.name as gff_attr_name,
                   ef.name as gff_attr_description,
                   (nl.end_max - nl.start_min + 1) as gff_attr_size, 
                   gf.source_id, '@PROJECT_ID@' as project_id
            from DoTS.GeneFeature gf, 
                 DoTS.Transcript rna, 
                 DoTS.ExonFeature ef,
                 apidb.FeatureLocation nl, 
                 DoTS.NaSequence ns,
                 dots.RnaFeatureExon rfe
            where gf.na_feature_id = rna.parent_id
            and rna.na_feature_id = rfe.rna_feature_id
            and ef.na_feature_id = rfe.exon_feature_id
            and ef.na_feature_id = nl.na_feature_id
            and nl.is_top_level = 1
            and nl.na_sequence_id = ns.na_sequence_id
            order by ef.order_number
            ]]>
        </sql>
    </sqlQuery>


  <!--===========================================================================-->
  <!--===========================================================================-->
  <!-- PlasmoDB exclusives  -->
  <!--===========================================================================-->
  <!--===========================================================================-->
 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Interactions as prey -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="InteractionsAsPrey" isCacheable="false" includeProjects="PlasmoDB">

            <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PFL0275w</paramValue>
            </testParamValues>


            <column name="source_id"/>
            <column name="project_id"/>
            <column name="bait_start"/>
            <column name="bait_end"/>
            <column name="prey_start"/>
            <column name="prey_end"/>
            <column name="times_observed"/>
            <column name="number_of_searches"/>
            <column name="prey_number_of_baits"/>
            <sql>
            <![CDATA[
            SELECT pf.source_id, gi.bait_start, gi.bait_end, gi.prey_start,
                   gi.prey_end, gi.times_observed, gi.number_of_searches,
                   gi.prey_number_of_baits, '@PROJECT_ID@' as project_id
           FROM dots.GeneFeature bf, dots.GeneFeature pf,
                apidb.GeneInteraction gi
           WHERE pf.na_feature_id = gi.prey_gene_feature_id
             AND bf.na_feature_id = gi.bait_gene_feature_id
            ]]>
            </sql>
        </sqlQuery>

 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Interactions as bait -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="InteractionsAsBait" isCacheable="false" includeProjects="PlasmoDB">

          <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PFL0275w</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="bait_start"/>
            <column name="bait_end"/>
            <column name="prey_start"/>
            <column name="prey_end"/>
            <column name="times_observed"/>
            <column name="number_of_searches"/>
            <column name="bait_number_of_preys"/>
            <sql>
            <![CDATA[
            SELECT bf.source_id, gi.bait_start, gi.bait_end, gi.prey_start,
                   gi.prey_end, gi.times_observed, gi.number_of_searches,
                   gi.bait_number_of_preys, '@PROJECT_ID@' as project_id
           FROM dots.GeneFeature bf, dots.GeneFeature pf,
                apidb.GeneInteraction gi
           WHERE pf.na_feature_id = gi.prey_gene_feature_id
             AND bf.na_feature_id = gi.bait_gene_feature_id
            ]]>
            </sql>
        </sqlQuery>

 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Y2H interactions -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Y2hInteractions" isCacheable="false" includeProjects="PlasmoDB,EuPathDB">

         <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PFL0275w</paramValue>
            </testParamValues>

        <column name="source_id"/>
        <column name="other_source_id"/>
        <column name="project_id"/>
        <column name="bait_start"/>
        <column name="bait_end"/>
        <column name="prey_start"/>
        <column name="prey_end"/>
        <column name="times_observed" />
        <column name="number_of_searches"/>
        <column name="prey_number_of_baits"/>
        <column name="bait_number_of_preys"/>
        <column name="bait_or_prey"/>
        <sql>
            <![CDATA[
               SELECT bf.source_id, bait_start, bait_end, prey_start, prey_end,
                       times_observed, number_of_searches, NULL AS prey_number_of_baits,
                       bait_number_of_preys, 'bait' as bait_or_prey, '@PROJECT_ID@' as project_id, pf.source_id as other_source_id
                FROM dots.GeneFeature bf, dots.GeneFeature pf,
                     dots.NaSequence ens, apidb.GeneInteraction gi
                WHERE bf.na_feature_id = gi.bait_gene_feature_id
                  AND gi.prey_gene_feature_id = pf.na_feature_id
                  AND pf.na_sequence_id = ens.na_sequence_id
                UNION
                SELECT pf.source_id, bait_start, bait_end, prey_start, prey_end,
                       times_observed, number_of_searches, prey_number_of_baits,
                       NULL AS bait_number_of_preys, 'prey' as bait_or_prey, '@PROJECT_ID@' as project_id, bf.source_id as other_source_id
                FROM dots.GeneFeature bf, dots.GeneFeature pf,
                     dots.NaSequence ens,  apidb.GeneInteraction gi
                WHERE bf.na_feature_id = gi.bait_gene_feature_id
                  AND gi.prey_gene_feature_id = pf.na_feature_id
                  AND bf.na_sequence_id = ens.na_sequence_id
           ]]>
        </sql>
      </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Array elements -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="ArrayElements" isCacheable="false" includeProjects="PlasmoDB,EuPathDB">
            
          <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PBANKA_112620</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="array_source_id"/>
            <column name="array_provider"/>
            <sql>
            <![CDATA[
               SELECT ens.source_id as array_source_id,
                      ed.name as array_provider, 
                      gf.source_id, '@PROJECT_ID@' as project_id
               FROM dots.Similarity s, dots.Transcript t, dots.GeneFeature gf,
                    sres.ExternalDatabase ed,
                    sres.ExternalDatabaseRelease edr,
                    dots.ExternalNaSequence ens,
                    core.TableInfo ti1, core.TableInfo ti2
               WHERE t.parent_id = gf.na_feature_id
                 AND ed.external_database_id = edr.external_database_id
                 AND edr.external_database_release_id = ens.external_database_release_id
                 AND ens.na_sequence_id = s.query_id
                 AND 'ExternalNASequence' = ti1.name
                 AND ti1.table_id = s.query_table_id
                 AND 'ExternalAASequence' = ti2.name
                 AND ti2.table_id = s.subject_table_id
                 AND t.na_feature_id = s.subject_id
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Protein expression -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="ProteinExpression" isCacheable="false" includeProjects="PlasmoDB,EuPathDB">

        <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PBANKA_140060</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="profile_element"/>
            <column name="element_value"/>
            <sql>
            <![CDATA[
            SELECT REPLACE(pen.name, '_', ' ') as profile_element,
                   DECODE(pe.value, 1, 'yes', 'no') as element_value, 
                   p.source_id, '@PROJECT_ID@' as project_id
            FROM apidb.profileElementName pen,
                 apidb.profileElement pe,
                 apidb.profile p,
                 apidb.profileSet ps
            WHERE ps.name = 'berghei_proteomic_Sinden'
            AND ps.profile_set_id = p.profile_set_id
      AND ps.profile_set_id = pen.profile_set_id
            AND p.profile_id = pe.profile_id
      AND pen.element_order = pe.element_order
            ORDER BY pen.element_order
            ]]>
            </sql>
        </sqlQuery>

 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- MR4 reagents -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Mr4Reagents" isCacheable="false" includeProjects="PlasmoDB,EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="atcc_number"/>
            <column name="reagent_type"/>
            <column name="remark"/>
            <sql>
            <![CDATA[
                SELECT dbr.primary_identifier AS atcc_number,
                       dbr.secondary_identifier AS reagent_type,
                       dbr.remark, 
                       gf.source_id, '@PROJECT_ID@' as project_id
                FROM dots.GeneFeature gf,
                     dots.DbRefAAFeature df,
                     dots.Transcript t,
                     dots.TranslatedAAFeature taf,
                     sres.DbRef dbr, sres.ExternalDatabaseRelease edr,
                     sres.ExternalDatabase ed
                WHERE t.parent_id = gf.na_feature_id
                  AND taf.na_feature_id = t.na_feature_id
                  AND df.aa_feature_id = taf.aa_feature_id
                  AND dbr.db_ref_id = df.db_ref_id
                  AND ed.name = 'Pf_MR4Reagents_RSRC'
                  AND edr.external_database_id = ed.external_database_id
                  AND dbr.external_database_release_id
                      = edr.external_database_release_id
                ORDER BY dbr.secondary_identifier, dbr.primary_identifier
            ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- plasmo version 5.5  genes -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

     <sqlQuery name="PlasmoVer5Genes" isCacheable="false" includeProjects="PlasmoDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="old_source_id"/>
            <column name="start_min"/>
            <column name="end_max"/>
            <column name="strand"/>
            <column name="product"/>
            <column name="same_protein"/>
            <column name="cyc_gene_id"/>
            <sql>
            <![CDATA[
            SELECT toa.source_id,'@PROJECT_ID@' AS project_id,
                   toa.old_source_id, ens.source_id as sequence_id, fl.start_min, fl.end_max,
                   decode (fl.is_reversed, 0, '+1', 1, '-1', '.') strand,gf.product,
                   decode(toa.new_protein,0,'Yes',1,'No') as same_protein,
                   upper(toa.source_id) as cyc_gene_id
            FROM   ApiDB.TrackOldAnnotation toa, DOTS.GeneFeature gf,
                   ApiDB.FeatureLocation fl, DOTS.ExternalNaSequence ens
            WHERE  toa.old_source_id = gf.source_id
            AND    gf.na_feature_id = fl.na_feature_id
            AND    gf.na_sequence_id = ens.na_sequence_id
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Antibody -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="Antibody" isCacheable="false" includeProjects="ToxoDB,CryptoDB">
            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGGT1_043200</paramValue>
            </testParamValues>
            <testParamValues includeProjects="CryptoDB">
               <paramValue name="source_id">cgd6_5430</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="bei_number"/>
            <column name="reagent_type"/>
            <column name="remark"/>
            <sql>
            <![CDATA[
                SELECT dbr.primary_identifier AS bei_number,
                       'Antibody' AS reagent_type,
                       dbr.remark, 
                       gf.source_id, '@PROJECT_ID@' as project_id
                FROM dots.GeneFeature gf,
                     dots.DbRefAAFeature df,
                     dots.Transcript t,
                     dots.TranslatedAAFeature taf,
                     sres.DbRef dbr, sres.ExternalDatabaseRelease edr,
                     sres.ExternalDatabase ed
                WHERE t.parent_id = gf.na_feature_id
                  AND taf.na_feature_id = t.na_feature_id
                  AND df.aa_feature_id = taf.aa_feature_id
                  AND dbr.db_ref_id = df.db_ref_id
                  AND ed.name = 'AntibodyDBxRefs'
                  AND edr.external_database_id = ed.external_database_id
                  AND dbr.external_database_release_id
                      = edr.external_database_release_id
                ORDER BY dbr.primary_identifier
            ]]>
            </sql>
        </sqlQuery>

       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- external database links -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="gene_dbrefs" 
                  isCacheable="false">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="dataset"/>
            <column name="link_url"/>
            <sql>
            <![CDATA[
               select gf.source_id, '@PROJECT_ID@' AS project_id,
               CASE WHEN ed.name like '%_Winzeler_Westenberger_Dbrefs_RSRC%' then 'Ontology Based pattern Identification' 
                    WHEN ed.name like '%_Winzeler_Literature_References_RSRC%' then 'Malaria Literature Database' END  as dataset,
               r.remark || gf.source_id as link_url
               from sres.dbref r, sres.externaldatabaserelease rel, dots.dbrefnafeature rf,
               dots.genefeature gf, sres.externaldatabase ed
               where gf.na_feature_id = rf.na_feature_id
               and rf.db_ref_id = r.db_ref_id
               and r.external_database_release_id = rel.external_database_release_id
               and rel.external_database_id = ed.external_database_id
               and ed.name in ('Pf_Winzeler_Westenberger_Dbrefs_RSRC','Pb_Winzeler_Westenberger_Dbrefs_RSRC','Pc_Winzeler_Westenberger_Dbrefs_RSRC','Py_Winzeler_Westenberger_Dbrefs_RSRC','Pf_Winzeler_Literature_References_RSRC','Pb_Winzeler_Literature_References_RSRC','Pc_Winzeler_Literature_References_RSRC','Py_Winzeler_Literature_References_RSRC')
               UNION
               select ga.source_id, ga.project_id,
               'UCSC <i>P. falciparum</i> genome browser' as dataset,
               'http://areslab.ucsc.edu/cgi-bin/hgTracks?position=' || source_id as link_url
               from apidb.geneattributes ga
               where ga.project_id = '@PROJECT_ID@'
               and organism = 'Plasmodium falciparum 3D7'
               UNION
               select ga.source_id, ga.project_id, 
               'GeneDB the Sanger Institute Pathogen Genomics database' as dataset,
               'http://www.genedb.org/QuickSearchQuery?pseudogenes=true&product=true&allNames=true&searchText='||source_id AS link_url
                FROM apidb.geneattributes  ga
                where (ga.project_id in ('TriTrypDB','PlasmoDB')
                    and ga.species != 'Plasmodium berghei')
                or ga.organism = 'Neospora caninum'
               UNION
               select ga.source_id, ga.project_id, 
               'TDR Targets Database of drug target prioritization' as dataset,
               'http://tdrtargets.org/targets/view?gene_name=' || source_id as link_url
               from apidb.geneattributes ga
               where ga.project_id in ('PlasmoDB','ToxoDB','TriTrypDB')
               and organism in ('Plasmodium falciparum 3D7','Plasmodium vivax SaI-1','Toxoplasma gondii ME49',
                                'Leishmania major','Trypanosoma brucei TREU927','Trypanosoma cruzi')
               UNION
                select gf.source_id, '@PROJECT_ID@' AS project_id,
                'PlasmoMAP a network of functional interactions between <i>P. falciparum</i> proteins' as dataset,
                r.remark as link_url
                from sres.dbref r, sres.externaldatabaserelease rel, dots.dbrefnafeature rf,
                dots.genefeature gf, sres.externaldatabase ed
                where gf.na_feature_id = rf.na_feature_id
                and rf.db_ref_id = r.db_ref_id
                and r.external_database_release_id = rel.external_database_release_id
                and rel.external_database_id = ed.external_database_id
                and ed.name = 'Pf_PlasmoMAP_DBRefs_RSRC'
                UNION
                SELECT gf.source_id, '@PROJECT_ID@' AS project_id,
                       DECODE(ed.name,'Pf_Plasmodraft_DBRefs_RSRC','PlasmoDraft a database of Gene Ontology annotation predictions for <i>P. falciparum</i> genes') as dataset,
                       'http://www.atgc-montpellier.fr/PlasmoDraft/index.php?geneid=' || gf.source_id as link_url
                FROM   sres.dbref r, sres.externaldatabaserelease rel, 
                       dots.dbrefnafeature rf,
                       dots.genefeature gf, sres.externaldatabase ed
                WHERE  gf.na_feature_id = rf.na_feature_id 
                   AND rf.db_ref_id = r.db_ref_id 
                   AND r.external_database_release_id = rel.external_database_release_id 
                   AND rel.external_database_id = ed.external_database_id 
                   AND ed.name = 'Pf_Plasmodraft_DBRefs_RSRC'
                UNION
                select gf.source_id,  '@PROJECT_ID@' AS project_id, 'LeishCyc' as dataset, 'http://leishcyc.bio21.unimelb.edu.au/LEISH/NEW-IMAGE?type=GENE' || '&' || 'object=' || db.primary_identifier as link_url
                from sres.dbref db, SRES.externaldatabase d, SRES.externaldatabaserelease r, DOTS.dbrefnafeature dn, dots.genefeature gf
                where r.external_database_release_id = db.external_database_release_id
                 and d.external_database_id = r.external_database_id
                 and dn.db_ref_id = db.db_ref_id
                 and dn.na_feature_id = gf.na_feature_id
                 and d.name = 'Lmajor_LeishCYC_dbxref_RSRC'
                UNION
                select gf.source_id, '@PROJECT_ID@' AS project_id,
                'PASA ESTs' as dataset,
                r.remark as link_url
                from sres.dbref r, sres.externaldatabaserelease rel, dots.dbrefnafeature rf,
                dots.genefeature gf, sres.externaldatabase ed
                where gf.na_feature_id = rf.na_feature_id
                and rf.db_ref_id = r.db_ref_id
                and r.external_database_release_id = rel.external_database_release_id
                and rel.external_database_id = ed.external_database_id
                and ed.name like 'Pf_PASA_DBRefs_RSRC%'
                UNION
                SELECT gf.source_id, '@PROJECT_ID@' AS project_id,
                       'Phenotypes from Genetically Modified Rodent Malaria Parasite database' as dataset,
                       r.primary_identifier as link_url
                FROM   sres.dbref r, sres.externaldatabaserelease rel, 
                       dots.dbrefnafeature rf,
                       dots.genefeature gf, sres.externaldatabase ed
                WHERE  gf.na_feature_id = rf.na_feature_id 
                   AND rf.db_ref_id = r.db_ref_id 
                   AND r.external_database_release_id = rel.external_database_release_id 
                   AND rel.external_database_id = ed.external_database_id 
                   AND ed.name in ('Pf_Phenotype_DBRefs_RSRC','Pb_RMgm_Phenotype_DBRefs_RSRC','Pc_Phenotype_DBRefs_RSRC','Pv_Phenotype_DBRefs_RSRC')
                UNION
                SELECT gf.source_id, '@PROJECT_ID@' AS project_id,
                       'UniProt protein sequence and functional annotation' as dataset,
                       'http://www.uniprot.org/uniprot/'||r.primary_identifier as link_url
                FROM   sres.dbref r, sres.externaldatabaserelease rel, 
                       dots.dbrefnafeature rf,
                       dots.genefeature gf, sres.externaldatabase ed
                WHERE  gf.na_feature_id = rf.na_feature_id 
                   AND rf.db_ref_id = r.db_ref_id 
                   AND r.external_database_release_id = rel.external_database_release_id 
                   AND rel.external_database_id = ed.external_database_id 
                   AND ed.name in ('Pf_Uniprot_Gene_dbxref_RSRC','Pb_Uniprot_Gene_dbxref_RSRC','Pc_Uniprot_Gene_dbxref_RSRC','Pk_Uniprot_Gene_dbxref_RSRC','Pv_Uniprot_Gene_dbxref_RSRC','Py_Uniprot_Gene_dbxref_RSRC','Lbraziliensis_Uniprot_Gene_dbxref_RSRC','Linfantum_Uniprot_Gene_dbxref_RSRC','Lmajor_Uniprot_Gene_dbxref_RSRC','Lmexicana_Uniprot_Gene_dbxref_RSRC','Tbrucei_Uniprot_Gene_dbxref_RSRC','Tcongolense_Uniprot_Gene_dbxref_RSRC','TcruziEsmeraldoLike_Uniprot_Gene_dbxref_RSRC','TcruziNonEsmeraldoLike_Uniprot_Gene_dbxref_RSRC','Tvivax_Uniprot_Gene_dbxref_RSRC','Links to Uniprot Genes')
                UNION
                SELECT gf.source_id, '@PROJECT_ID@' AS project_id,
                       'Entrez database of genes from RefSeq genomes' as dataset,
                       'http://www.ncbi.nlm.nih.gov/sites/entrez?Db=gene&Cmd=retrieve&dopt=full_report&list_uids='||r.primary_identifier as link_url
                FROM   sres.dbref r, sres.externaldatabaserelease rel, 
                       dots.dbrefnafeature rf,
                       dots.genefeature gf, sres.externaldatabase ed
                WHERE  gf.na_feature_id = rf.na_feature_id 
                   AND rf.db_ref_id = r.db_ref_id 
                   AND r.external_database_release_id = rel.external_database_release_id 
                   AND rel.external_database_id = ed.external_database_id 
                   AND ed.name in ('Pf_Entrez_Gene_dbxref_RSRC','Pb_Entrez_Gene_dbxref_RSRC','Pc_Entrez_Gene_dbxref_RSRC','Pk_Entrez_Gene_dbxref_RSRC','Pv_Entrez_Gene_dbxref_RSRC','Py_Entrez_Gene_dbxref_RSRC','Lbraziliensis_Entrez_Gene_dbxref_RSRC','Linfantum_Entrez_Gene_dbxref_RSRC','Lmajor_Entrez_Gene_dbxref_RSRC','Lmexicana_Entrez_Gene_dbxref_RSRC','Tbrucei_Entrez_Gene_dbxref_RSRC','Tcongolense_Entrez_Gene_dbxref_RSRC','TcruziEsmeraldoLike_Entrez_Gene_dbxref_RSRC','TcruziNonEsmeraldoLike_Entrez_Gene_dbxref_RSRC','Tvivax_Entrez_Gene_dbxref_RSRC','Links to Entrez Genes')
                UNION
                SELECT gf.source_id, '@PROJECT_ID@' AS project_id,
                       'ApiLoc, a database of protein sub-cellular localisation in Apicomplexa' as dataset,
                       remark as link_url
                FROM   sres.dbref r, sres.externaldatabaserelease rel, 
                       dots.dbrefnafeature rf,
                       dots.genefeature gf, sres.externaldatabase ed
                WHERE  gf.na_feature_id = rf.na_feature_id 
                   AND rf.db_ref_id = r.db_ref_id 
                   AND r.external_database_release_id = rel.external_database_release_id 
                   AND rel.external_database_id = ed.external_database_id 
                   AND ed.name in ('Pf_ApiLoc_EupathDB_Dbrefs_RSRC','Pb_ApiLoc_EupathDB_Dbrefs_RSRC','Pc_ApiLoc_EupathDB_Dbrefs_RSRC','Pk_ApiLoc_EupathDB_Dbrefs_RSRC','Pv_ApiLoc_EupathDB_Dbrefs_RSRC','Py_ApiLoc_EupathDB_Dbrefs_RSRC','ApiLoc_EupathDB_Dbrefs')
                UNION
                SELECT gf.source_id, '@PROJECT_ID@' AS project_id,
                       'TcSNP a database of genetic variation in <i>T. cruzi</i>' as dataset,
                       rel.id_url || r.primary_identifier link_url 
                FROM   sres.dbref r, sres.externaldatabaserelease rel, 
                       dots.dbrefnafeature rf,
                       apidb.geneattributes gf, sres.externaldatabase ed
                WHERE  gf.na_feature_id = rf.na_feature_id 
                   AND rf.db_ref_id = r.db_ref_id 
                   AND r.external_database_release_id = rel.external_database_release_id 
                   AND rel.external_database_id = ed.external_database_id 
                   AND ed.name like 'TcruziEsmeraldoLike_Aguero_SNP_DBRefs_RSRC;TcruziNonEsmeraldoLike_Aguero_SNP_DBRefs_RSRC'
                ]]>
            </sql>
        </sqlQuery>


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- protein database links -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="ProteinDatabase" 
                  isCacheable="false" includeProjects="PlasmoDB,EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="accession"/>
            <column name="gi"/>
            <column name="dataset"/>
            <column name="accession_url"/>
            <column name="gi_url"/>
            <sql>
            <![CDATA[
                SELECT dr.primary_identifier AS accession,
                       dr.secondary_identifier AS gi,
                       DECODE(ed.name, 'NRDB_gb_dbXRefBySeqIdentity', 'GenBank',
                                       'NRDB_pdb_dbXRefBySeqIdentity',
                                           'Protein Data Bank',
                                       'NRDB_ref_dbXRefBySeqIdentity', 'RefSeq',
                                       'NRDB_sp_dbXRefBySeqIdentity',
                                           'Swiss-Prot',
                                       ed.name) AS dataset,
                       DECODE(ed.name, 'NRDB_gb_dbXRefBySeqIdentity',
                                         'http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=Protein&cmd=search&term='
                                         || dr.primary_identifier,
                                       'NRDB_pdb_dbXRefBySeqIdentity',
                                         'http://www.rcsb.org/pdb/navbarsearch.do?newSearch=yes&isAuthorSearch=no&radioset=All&inputQuickSearch='
                                         || dr.primary_identifier
                                         || '&image.x=0&image.y=0&image=Search',
                                       'NRDB_ref_dbXRefBySeqIdentity',
                                         'http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=Protein&cmd=search&term='
                                         || dr.primary_identifier,
                                       'NRDB_sp_dbXRefBySeqIdentity',
                                       'http://srs.ebi.ac.uk/srsbin/cgi-bin/wgetz?-newId+[swissprot-AllText:'
                                         || dr.primary_identifier || '*]+-view+UniprotView+-page+qResult',
                                       ed.name) AS accession_url,
                       DECODE(ed.name, 'NRDB_gb_dbXRefBySeqIdentity',
                                         'http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val='
                                         || dr.secondary_identifier,
                                       'NRDB_pdb_dbXRefBySeqIdentity',
                                         'http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val='
                                         || dr.secondary_identifier,
                                       'NRDB_ref_dbXRefBySeqIdentity',
                                         'http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val='
                                         || dr.secondary_identifier,
                                       'NRDB_sp_dbXRefBySeqIdentity',
                                         'http://www.ncbi.nlm.nih.gov/entrez/viewer.fcgi?db=protein&val='
                                         || dr.secondary_identifier,
                                       ed.name) AS gi_url, 
                       gf.source_id, '@PROJECT_ID@' as project_id
                FROM dots.GeneFeature gf, dots.DbRefNaFeature drnf,
                     sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                     sres.ExternalDatabase ed
                WHERE gf.na_feature_id = drnf.na_feature_id
                  AND drnf.db_ref_id = dr.db_ref_id
                  AND dr.external_database_release_id
                        = edr.external_database_release_id
                  AND edr.external_database_id = ed.external_database_id
                  AND ed.name in ('NRDB_gb_dbXRefBySeqIdentity',
      /* gets its own section     'NRDB_pdb_dbXRefBySeqIdentity', */
                                  'NRDB_ref_dbXRefBySeqIdentity',
                                  'NRDB_sp_dbXRefBySeqIdentity')
            ]]>
            </sql>
        </sqlQuery>

 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- SGC 3-D structure predictions                                --> 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--
        <sqlQuery name="SGC_3D_Struct" isCacheable="false" includeProjects="CryptoDB">

            <testParamValues>
               <paramValue name="source_id">cgd3_300</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="pdb_id"/>
            <sql>
              <![CDATA[
            SELECT dr.primary_identifier AS pdb_id,
                   gf.source_id, '@PROJECT_ID@' AS project_id
            FROM dots.GeneFeature gf,
                 dots.DbRefNaFeature drnf,
                 sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                 sres.ExternalDatabase ed
            WHERE gf.na_feature_id = drnf.na_feature_id
            AND drnf.db_ref_id = dr.db_ref_id
            AND dr.external_database_release_id = edr.external_database_release_id
            AND edr.external_database_id = ed.external_database_id
            AND ed.name = 'Structural Genomics Consortium 3D Structures'
            ORDER BY dr.primary_identifier
              ]]>
            </sql>
        </sqlQuery>
-->
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- 3-D structure predictions -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="3dPreds"
                  isCacheable="false" includeProjects="PlasmoDB,EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="search_term"/>
            <column name="pdb_template"/>
            <sql>
            <![CDATA[
            SELECT gf.source_id as search_term, dr.primary_identifier as pdb_template, 
                   gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.aafeature aaf, dots.GeneFeature gf, dots.transcript t,
                 dots.DbRefaaFeature drnf,  sres.DbRef dr,
                 sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
            WHERE gf.na_feature_id = t.parent_id
              AND t.na_feature_id = aaf.na_feature_id
              AND aaf.aa_feature_id = drnf.aa_feature_id
              AND drnf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name = 'Pf_predictedProteinStructures_RSRC'
            ]]>
            </sql>
        </sqlQuery>
 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- PDB similarities -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="PdbSimilarities"
                  isCacheable="false" includeProjects="CryptoDB,TriTrypDB,PlasmoDB,EuPathDB">
            <column name="source_id"/>
            <column name="project_id"/>
            <column name="pdb_chain"/>
            <column name="pdb_id"/>
            <column name="pvalue_mant"/>
            <column name="pvalue_exp"/>
            <column name="taxon"/>
            <column name="pdb_title"/>
            <column name="percent_identity"/>
            <column name="percent_plasmo_coverage"/>
            <sql>
            <![CDATA[
                SELECT ps.pdb_chain, ps.pdb_title, ps.pdb_id, ps.pvalue_mant,
                       ps.pvalue_exp, ps.taxon, ps.percent_identity,
                       ps.percent_plasmo_coverage, 
                       ps.source_id, '@PROJECT_ID@' as project_id
                FROM apidb.PdbSimilarity ps
                ORDER BY ps.score DESC
            ]]>
            </sql>
        </sqlQuery>

 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- two channel diff expr -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

      <sqlQuery name="TwoChannelDifferentialExpression" isCacheable='false' includeProjects="PlasmoDB,EuPathDB">

       <testParamValues includeProjects="PlasmoDB">
               <paramValue name="source_id">PBANKA_123650</paramValue>
            </testParamValues>

        <column name="source_id"/>
        <column name="project_id"/>
       <column name="fold_change" />
       <column name="confidence" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
          SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                 round(de.fold_change, 2) as fold_change,
                 round(de.confidence, 2) as confidence
          from apidb.geneattributes ga, rad.differentialexpression de, 
               core.tableinfo ti, rad.analysis a
          where ti.name = 'GeneFeature'
          and ti.table_id = de.table_id
          and ga.na_feature_id = de.row_id
          and a.analysis_id = de.analysis_id
          and a.name = 'DOZI KO vs. Wild Type Expression Analysis'
        ]]>
       </sql>
    </sqlQuery>

  <!--===========================================================================-->
  <!--===========================================================================-->
  <!-- ToxoDB exclusives  -->
  <!--===========================================================================-->
  <!--===========================================================================-->

 
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Task comments -->  
       <!-- NOTE: NEED TO CHANGE THE TOXOCOMM BACK .. COMMENTED OUT NOW .. -->  
       <!-- WHEN TASK COMMENTS ARE FIXED .. SHOULD CONSIDER USING SOMETHING BESIDES TOXOCOMM -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

       <sqlQuery name="TaskComments" 
                  isCacheable="false" includeProjects="ToxoDB,EuPathDB">

            <testParamValues includeProjects="ToxoDB">
               <paramValue name="source_id">TGME49_033070</paramValue>
            </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="comment_string"/>
            <sql>
      <![CDATA[
      SELECT NVL(c.content, '<i>none</i>') AS comment_string, 
             c.stable_id as source_id, 
             '@PROJECT_ID@' as project_id
/*      FROM toxocomm.comments@COMMENT_DBLINK@ c  */
      FROM @TOXO_COMMENT_SCHEMA@comments@COMMENT_DBLINK@ c
      WHERE c.review_status_id = 'task'
      ]]>
            </sql>
        </sqlQuery>

  <!--===========================================================================-->
  <!--===========================================================================-->
  <!-- CryptoDB exclusives  -->
  <!--===========================================================================-->
  <!--===========================================================================-->


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- Protein IDs -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <!-- GeneTables.ProteinIds -->
<!-- 
       <sqlQuery name="ProteinIds" includeProjects="CryptoDB">
            <column name="protein_id"/>
            <sql>
            SELECT protein_id, '@PROJECT_ID@' as project_id
            FROM dots.transcript
            </sql>
        </sqlQuery>
-->

  <!--===========================================================================-->
  <!--===========================================================================-->
  <!-- GiardiaDB exclusives  -->
  <!--===========================================================================-->
  <!--===========================================================================-->


       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
       <!-- GeneDepreciation - to keep track of gene (un)deprecation -->  
       <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <!-- GeneTables.GeneDeprecation -->

       <sqlQuery name="GeneDeprecation" includeProjects="GiardiaDB">
	    <testParamValues includeProjects="GiardiaDB">
	      <paramValue name="source_id">GL50803_10871</paramValue>
	      <paramValue name="project_id">GiardiaDB</paramValue>
	    </testParamValues>

            <column name="source_id"/>
            <column name="project_id"/>
            <column name="action"/>
            <column name="action_date"/>
            <column name="reason"/>
            <sql>
            SELECT gd.*, '@PROJECT_ID@' as project_id
            FROM apidb.geneDeprecation gd, apidb.geneAttributes ga 
            WHERE ga.source_id = gd.source_id
            </sql>
        </sqlQuery>

   </querySet>
</wdkModel>
