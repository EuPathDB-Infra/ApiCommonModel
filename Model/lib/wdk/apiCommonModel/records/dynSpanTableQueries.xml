<wdkModel>
    <querySet name="DynSpanTables" queryType="table" isCacheable="false">


        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <!-- genes -->  
        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="Genes" doNotTest="true"
               isCacheable="false">

            <column name="source_id" />
            <column name="project_id" />
            <column name="gene_source_id" />
            <column name="transcript_source_id" />
            <column name="start_min" />
            <column name="end_max" />
            <column name="strand"  />
            <column name="product"  />

            <sql>
            <![CDATA[
                     select ids.source_id,ids.project_id,ga.gene_source_id as gene_source_id,min(ga.source_id) as transcript_source_id,
                     ga.gene_start_min as start_min,ga.gene_end_max as end_max,ga.strand,ga.gene_product as product
               from 
                      (SELECT source_id, project_id,
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids,          
                       ApidbTuning.TranscriptAttributes ga
              where   ga.sequence_id = ids.seq_source_id AND
                      ga.gene_start_min <= ids.end_max AND
                      ga.gene_end_max >= ids.start_min
             group by ids.source_id,ids.project_id,ga.gene_source_id,
                     ga.gene_start_min,ga.gene_end_max,ga.strand,ga.gene_product
             order by start_min
             ]]>
           </sql>
        </sqlQuery>



         <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <!-- ORFs -->  
        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="ORFs" doNotTest="true"
               isCacheable="false">

            <column name="source_id" />
            <column name="project_id" />
            <column name="orf_source_id" />
            <column name="start_min" />
            <column name="end_max" />
            <column name="length" />
            <column name="is_reversed"  />

            <sql>
            <![CDATA[
             select ids.source_id,ids.project_id,oa.source_id as orf_source_id,oa.start_min,oa.end_max,oa.end_max - oa.start_min + 1 as length, oa.is_reversed
               from 
                      (SELECT source_id, project_id,
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids,          
                       ApidbTuning.OrfAttributes oa
              where   oa.nas_id = ids.seq_source_id AND
                      oa.start_min <= ids.end_max AND
                      oa.end_max >= ids.start_min
             order by start_min
             ]]>
           </sql>
        </sqlQuery>


        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <!-- SNPs -->  
        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="SNPs" doNotTest="true"
               isCacheable="false">
            <column name="source_id" />
            <column name="project_id" />
            <column name="snp_source_id" />
            <column name="start_min" />
            <column name="reference_strain" />
            <column name="reference_na"  />
            <column name="gene_source_id"  />
            <column name="gene_strand"  />
            <column name="is_coding"  />

            <sql>
            <![CDATA[
              select ids.source_id,ids.project_id,sa.source_id as snp_source_id,sa.location as start_min,sa.reference_strain,sa.reference_na,sa.gene_source_id,sa.gene_strand,sa.is_coding
               from 
                      (SELECT source_id, project_id,
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids,          
                       ApidbTuning.SnpAttributes sa
              where   sa.seq_source_id = ids.seq_source_id AND
                      sa.location >= ids.start_min   AND  
                      sa.location <= ids.end_max AND
                      sa.dataset != 'WinzelerGeneticVariationArray_RSRC' 
             order by sa.location
             ]]>
           </sql>
        </sqlQuery>


        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <!-- ESTs  -->  
        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <sqlQuery name="ESTs" doNotTest="true"
               isCacheable="false">

            <column name="source_id" />
            <column name="project_id" />
            <column name="est_source_id"/>
            <column name="target_start"/>
            <column name="target_end"/>  
            <column name="length"/>
            <column name="is_reversed"/>
            <column name="is_best_alignment"/>
            <column name="is_consistent"/>
            <column name="percent_identity"/>
            <column name="gene"/>

            <sql>
            <![CDATA[
                select ids.source_id,ids.project_id,ea.source_id as est_source_id,ests.target_start,ests.target_end,ea.length,ests.is_reversed,ests.is_best_alignment,ests.is_consistent,ests.percent_identity,ests.gene
               from 
                      (SELECT source_id, project_id,
                             regexp_substr(source_id, '[^:]+', 1, 1) as seq_source_id,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,1) as start_min,
                             regexp_substr(regexp_substr(source_id, '[^:]+', 1, 2), '[^\-]+', 1,2) as end_max,
                             case when regexp_substr(source_id, '[^:]+', 1, 3) = 'f' then '+'
   				       when regexp_substr(source_id, '[^:]+', 1, 3) = 'r' then '-'
   				       else 'Unknown' end as strand
                         FROM (##WDK_ID_SQL##)
                       ) ids, 
                      ( SELECT distinct (enas.source_id) as sequence_id,
                                         e.accession,
                                         enas.project_id,
                                         blat.target_start,
                                         blat.target_end,
                                         decode(blat.is_best_alignment,0,'No',1,'Yes',blat.is_best_alignment) as is_best_alignment,
                                         decode(blat.is_consistent,0,'No',1,'Yes',blat.is_consistent) as is_consistent,
                                         decode(blat.is_reversed,0,'+',1,'-',blat.is_reversed) as is_reversed,
                                         blat.percent_identity,
                                         eags.gene
                         FROM   ApidbTuning.BlatAlignmentLocation blat,
                                dots.est e,
                                ApidbTuning.GenomicSequenceAttributes enas,
                                ApidbTuning.EstAlignmentGenesummary eags
                         WHERE  blat.query_na_sequence_id = e.na_sequence_id
                           AND  blat.target_na_sequence_id = enas.na_sequence_id
                           AND eags.blat_alignment_id = blat.blat_alignment_id
                           AND  enas.is_top_level = 1
                         ) ests,
                       ApidbTuning.EstAttributes ea
              where   ests.accession = ea.source_id AND
                      ests.sequence_id = ids.seq_source_id AND
                      ests.target_start <= ids.end_max AND
                      ests.target_end >= ids.start_min
             order by target_start
            ]]>
           </sql>
        </sqlQuery>

  </querySet>

</wdkModel>

