<wdkModel>
  <querySet name="SampleTables" queryType="table" isCacheable="false" >


    <sqlQuery name="Characteristics">
            <column name="name"/>
            <column name="material_type"/>
            <column name="property"/>
            <column name="value"/>
            <column name="type"/>
            <column name="filter"/>
           <sql>
            <![CDATA[
SELECT distinct
  scm.pan_name AS name
, scm.category AS material_type
, scm.term AS property
, scm.value
, mt.type
, mt.filter
FROM 
  ApidbTuning.SampleCharMetadata scm, ApidbTuning.MetadataType mt
WHERE
  scm.term = mt.property
            ]]>
            </sql>
    </sqlQuery>

    <sqlQuery name="Protocols">
            <column name="name"/>
            <column name="protocol_name"  />
            <column name="protocol_param_name"  />
            <column name="value"  />
           <sql>
            <![CDATA[
SELECT
  pan_name as name
, category as protocol_name
, term AS protocol_param_name
, value
FROM
  APIDBTUNING.sampleprotocolmetadata
            ]]>
            </sql>
    </sqlQuery>

    <sqlQuery name="ProcessedSample">
            <column name="name"/>
            <column name="input"  />
            <column name="input_type"  />
            <column name="protocol"  />
            <column name="output"  />
            <column name="output_type"  />
           <sql>
            <![CDATA[
SELECT
  name
, input
, nvl(input_material_type,  input_isa_type) as input_type
, protocol
, output
, nvl(nvl(output_material_type, output_isa_type), 'Data') as output_type
from
 apidbtuning.sampledownstream
            ]]>
            </sql>
    </sqlQuery>

    <sqlQuery name="TaxaRelativeAbundance">
            <column name="name"/>
            <column name="taxon_id"/>
            <column name="ncbi_tax_id"/>
             <column name="kingdom"/>
             <column name="phylum"/>
             <column name="class"/>
             <column name="rank_order"/>
             <column name="family"/>
             <column name="genus"/>
             <column name="species"/>
            <column name="relative_abundance"/>
            <column name="absolute_abundance"/>
            <!-- column name="taxon_source"/ -->
           <sql>
            <![CDATA[
                     select ta.*, t.ncbi_tax_id,
                            replace(decode(superkingdom, 'N/A', kingdom, superkingdom), 'N/A', '') as kingdom,
                            replace(phylum, 'N/A', '') as phylum,
                            replace(class, 'N/A', '') as class,
                            replace(rank_order, 'N/A', '') as rank_order,
                            replace(family, 'N/A', '') as family,
                            replace(genus, 'N/A', '') as genus,
                            replace(species, 'N/A', '') as species
                     from (select ds.name, oa.protocol_app_node_id, taxonAssignment.taxon_id,
                                  sum(nvl(oa.relative_abundance, 0)) as relative_abundance,
                                  sum(nvl(oa.raw_count, 0)) as absolute_abundance -- ,
--                                regexp_replace( -- remove repeated source names
--                                  listagg(taxonAssignment.source, ',')
--                                            within group (order by taxonAssignment.source),
--                                          '([^,]+)(,\1)*(,|$)', '\1\3')
--                                  as taxon_source
                           from results.OtuAbundance oa, apidbTuning.SampleDownstream ds,
                                (select ens.na_sequence_id,
                                        case
                                          when st.taxon_id is not null
                                            then st.taxon_id
                                          else ens.taxon_id
                                        end as taxon_id,
                                        case
                                          when st.taxon_id is not null
                                            then 'Greengenes'
                                          else 'Genbank'
                                        end as source
                                 from dots.ExternalNaSequence ens, apidb.SequenceTaxon st
                                 where ens.na_sequence_id = st.na_sequence_id(+)
                                 ) taxonAssignment
                           where oa.protocol_app_node_id = ds.output_protocol_app_node_id
                             and ds.output_isa_type = 'Data'
                             and oa.na_sequence_id = taxonAssignment.na_sequence_id
                           group by ds.name, oa.protocol_app_node_id, taxonAssignment.taxon_id
                          ) ta,
                          apidbTuning.ExternalSequenceTaxonRank estr, sres.Taxon t
                     where ta.taxon_id = estr.organism
                       and ta.relative_abundance > 0
                       and ta.taxon_id = t.taxon_id
                     order by relative_abundance desc, name, superkingdom, kingdom,
                              phylum, class, rank_order, genus, species
            ]]>
            </sql>
    </sqlQuery>

    <sqlQuery name="Datasets">
            <column name="name"/>
            <column name="dataset_presenter_id"/>
            <column name="display_name"/>
            <column name="category"/>
            <column name="summary"/>
           <sql>
            <![CDATA[
select distinct  sd.name
 , edp.dataset_presenter_id
 , dsp.display_name
 , dsp.category
 , dbms_lob.substr( dsp.summary, 4000, 1 ) as summary
from apidbtuning.sampledownstream sd
   , apidbtuning.protocolappnoderesults panr
   , study.study s
   , study.studylink sl
   , apidbtuning.externaldbdatasetpresenter edp
   , apidbtuning.datasetpresenter dsp
where sd.output_protocol_app_node_id = panr.protocol_app_node_id
and panr.protocol_app_node_id = sl.protocol_app_node_id
and sl.study_id = s.study_id
and s.external_database_release_id = edp.external_database_release_id
and edp.dataset_presenter_id = dsp.dataset_presenter_id
            ]]>
            </sql>
    </sqlQuery>
    </querySet>
</wdkModel>
