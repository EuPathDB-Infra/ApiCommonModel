<wdkModel>

<querySet name="GeneId" queryType="id">

  <!-- notes: 
 
   * tmhmm ws needs to use new tm_max/min params 

   * retiring apidb.ToxodbGenes by joining to GeneAttributes from genefeature.source_id
     (which filters away gene predictions)

   * motif search new param names:
     - motif_organism
     - motif_expression

   * text search needs a clean up.  all four sites have differences.

   * assuming all sites have pathway info, which we should be getting from pathtools.

   * ortholog pattern query: lose api-specific "internal" params.  (why do we need these?)

   * does the GeneFeature table have an attribute we can use to mark annotated genes?  this
     will allow us to skip the join to GeneAttributes (so toxo can dodge gene predictions)

   * toxo has to use the GeneId table 

   * why does toxo have a different interpro query?
  -->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- temporary question for modified annotation -->  
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- the workshop (re) annotations have become the official annotations and this section is obsolete

    <sqlQuery name="GenesWithModifiedAnnotation" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.plasmo_annot_status"/>
        <paramRef ref="geneParams.plasmo_new_product"/>
        <paramRef ref="geneParams.plasmo_new_model"/>
        <paramRef ref="geneParams.plasmo_new_go"/>
        <paramRef ref="geneParams.plasmo_new_ec"/>
        <paramRef ref="geneParams.plasmo_snapshot_changed"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="annot_status"/>
        <column name="new_product_desc"/>
       <sql>
             <![CDATA[
            SELECT DISTINCT na.source_id, '@PROJECT_ID@' as project_id, 
              na.status as annot_status, na.product as new_product_desc
            FROM apidb.trackNewAnnotation na
            where na.new_product in ($$plasmo_new_product$$)
            and na.new_go in ($$plasmo_new_go$$)
            and na.new_ec in ($$plasmo_new_ec$$)
            and na.new_protein in ($$plasmo_new_model$$)
            and na.status in ($$plasmo_annot_status$$)
            and na.snapshot_changed in ($$plasmo_snapshot_changed$$)
           ]]>
       </sql>
    </sqlQuery>
-->


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- question for old Plasmo annotations(v 5.5) after the workshop annotation became the official annotation (v 6.0) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <sqlQuery name="GenesByOldAnnotation" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.plasmo_annot_status"/>
        <paramRef ref="geneParams.plasmo_new_product"/>
        <paramRef ref="geneParams.plasmo_new_model"/>
        <paramRef ref="geneParams.plasmo_new_go"/>
        <paramRef ref="geneParams.plasmo_new_ec"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="annot_status"/>
        <column name="new_product_desc"/>
       <sql>
             <![CDATA[
            SELECT DISTINCT na.source_id, '@PROJECT_ID@' as project_id, 
              na.status as annot_status, na.product as new_product_desc
            FROM apidb.TrackOldAnnotation na
            where na.new_product in ($$plasmo_new_product$$)
            and na.new_go in ($$plasmo_new_go$$)
            and na.new_ec in ($$plasmo_new_ec$$)
            and na.new_protein in ($$plasmo_new_model$$)
            and na.status in ($$plasmo_annot_status$$)
            ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByOldAnnotation" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <paramRef ref="geneParams.plasmo_annot_status" quote="false"/>
      <paramRef ref="geneParams.plasmo_new_product" quote="false"/>
      <paramRef ref="geneParams.plasmo_new_model" quote="false"/>
      <paramRef ref="geneParams.plasmo_new_go" quote="false"/>
      <paramRef ref="geneParams.plasmo_new_ec" quote="false"/>
      <wsColumn name="source_id" width="50" wsName="source_id"/>   
      <wsColumn name="project_id" width="20" wsName="project_id"/>
      <wsColumn name="annot_status" width="32" />
      <wsColumn name="new_product_desc" width="100" />
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPhenotype" includeProjects="TriTrypDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPhenotype"/>
        <paramRef ref="geneParams.phenotype"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="phenotype_loi"/>
       <sql>
             <![CDATA[
               select si.gene as source_id,'@PROJECT_ID@' as project_id,
                 count(distinct db_xref) as phenotype_loi
               from apidb.sirna si, ApidbTuning.GeneAttributes ga
               where si.go_term || si.pato_term in ($$phenotype$$)
               and ga.source_id = si.gene
               group by si.gene,'@PROJECT_ID@'
           ]]>
       </sql>
    </sqlQuery>

<processQuery name="GenesByPhenotype" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
         <paramRef ref="organismParams.organism" queryRef="organismVQ.withPhenotype"/>
        <paramRef ref="geneParams.phenotype" quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>   
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="phenotype_loi" width="32"/>
 </processQuery>


    <sqlQuery name="GenesWithUpdatedAnnotation" includeProjects="TriTrypDB,PlasmoDB"
              isCacheable="true">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="genedb_link"/>
       <sql>
             <![CDATA[
                  SELECT ga.source_id, '@PROJECT_ID@' as project_id,
		    '<a href="http://www.genedb.org/Query/quickSearch?pseudogenes=true&' || 'product=true&' || 'allNames=true&' || 'searchText=' || ga.source_id || '" target="genedb">GeneDB record</a>' as genedb_link
                  FROM ApidbTuning.GeneAttributes ga
                  WHERE ga.source_id IN (SELECT gene from apidbtuning.AnnotationChange)
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesWithUpdatedAnnotation" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="source_id" width="50" wsName="source_id"/>   
      <wsColumn name="project_id" width="20" wsName="project_id"/>
      <wsColumn name="genedb_link" width="100" />
    </processQuery>




  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Transcription Factor Binding Sites -->  
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByBindingSites" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.tfBindingSite" multiPick="true" quote="true"/>
        <paramRef ref="geneParams.tfbs_name"/>
        <paramRef ref="geneParams.tfbs_distance"/>
        <paramRef ref="geneParams.tfbs_num_sites"/>
        <paramRef ref="geneParams.tfbs_pvalue"/>
        
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="tfbs_distance"/>
        <column name="tfbs_count"/>
       <sql>
             <![CDATA[
       select  bg.gene_source_id as source_id, 
               '@PROJECT_ID@' as project_id,
               min(bg.distance) as tfbs_distance,
               count(*) as tfbs_count
       from   ApidbTuning.TFBSGene bg, dots.bindingsitefeature bf
       where bg.distance <= $$tfbs_distance$$ 
         and bg.organism in ($$organism$$)
         and bg.direction = '-'
         and bg.tfbs_na_feature_id = bf.na_feature_id
         and exp(bf.primary_score) <= $$tfbs_pvalue$$
         and bf.name = $$tfbs_name$$
       group by bg.gene_source_id
       having count(*) >= $$tfbs_num_sites$$
          ]]>
       </sql>
    </sqlQuery>

       
  <processQuery name="GenesByBindingSites" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.tfBindingSite"/>
        <paramRef ref="geneParams.tfbs_name"  quote="false"/>
        <paramRef ref="geneParams.tfbs_distance"/>
        <paramRef ref="geneParams.tfbs_num_sites"/>
        <paramRef ref="geneParams.tfbs_pvalue"  quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>   
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="tfbs_distance" width="32" wsName="tfbs_distance"/>
        <wsColumn name="tfbs_count" width="32" wsName="tfbs_count"/>
    </processQuery>




  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ChIP chip chromatin marks -->  
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByChIPchipToxo" includeProjects="ToxoDB"
              isCacheable="true">
        <testParamValues includeProjects="ToxoDB">
          <paramValue name="chip_antibody_toxo">H3K4me3|none</paramValue>
          <paramValue name="chip_replicates">No</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.chip_strains"/>
        <paramRef ref="geneParams.chip_antibody_toxo"/>
        <paramRef ref="geneParams.chip_replicates" quote="false"/>
        <paramRef ref="geneParams.chip_distance"/>
        <paramRef ref="geneParams.chip_direction"/>
        
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="chip_distance"/>
        <column name="chip_total_reps"/>
        <column name="chip_antibodies"/>
        <column name="chip_treatment"/>

       <sql>
             <![CDATA[
select * from  (select outer.gene_source_id as source_id,
                       '@PROJECT_ID@' as project_id, 
                        outer.antibody as chip_antibodies, outer.treatment as chip_treatment,
                        max(outer.distance) as chip_distance,
                        count(*) as chip_total_reps
                from (select inner.gene_source_id,inner.antibody, inner.treatment, max(inner.distance) as distance
                      from (select ccg.gene_source_id,cpp.antibody,cpp.treatment,ccg.distance,cpp.replicate 
                            from   ApidbTuning.ChIPchipGene ccg,
                                   rad.datatransformationresult dtf,
                                   ApidbTuning.ChIPProtocolParams cpp
                            where ccg.chip_na_feature_id = dtf.row_id
                            and   dtf.analysis_id = cpp.analysis_id
                            and   rtrim(cpp.antibody || '|' || cpp.treatment) in ($$chip_antibody_toxo$$)   
                            and   ccg.distance <= $$chip_distance$$ 
                            and   ('Either' = $$chip_direction$$ OR ccg.direction = $$chip_direction$$)
                            and   cpp.strain = $$chip_strains$$) inner
                       group by inner.gene_source_id,inner.antibody, inner.treatment,inner.replicate) outer
                 group by outer.gene_source_id,outer.antibody, outer.treatment)
where chip_total_reps > $$chip_replicates$$
          ]]>
       </sql>
    </sqlQuery>

       
  <processQuery name="GenesByChIPchipToxo" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues>
          <paramValue name="chip_antibody_toxo">H3K4me3|none</paramValue>
          <paramValue name="chip_replicates">No</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.chip_strains"  quote="false"/>
        <paramRef ref="geneParams.chip_antibody_toxo" quote="false"/> 
        <paramRef ref="geneParams.chip_replicates"  quote="false"/>
        <paramRef ref="geneParams.chip_distance"/>
        <paramRef ref="geneParams.chip_direction"  quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>   
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="chip_distance" width="32"/>
        <wsColumn name="chip_total_reps" width="32"/>
        <wsColumn name="chip_antibodies" width="32"/>
        <wsColumn name="chip_treatment" width="32"/>       
      
    </processQuery>



    <sqlQuery name="GenesByChIPchipPlasmo" includeProjects="PlasmoDB"
              isCacheable="true"> 
        <testParamValues>
          <paramValue name="chip_antibody_plasmo">H3K9me3</paramValue>
          <paramValue name="chip_genotypes">sir2KO</paramValue>
          <paramValue name="chip_replicates_plasmo">1</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.chip_experiment"/>
        <paramRef ref="geneParams.chip_antibody_plasmo"/>
        <paramRef ref="geneParams.chip_genotypes"/> 
        <paramRef ref="geneParams.chip_replicates_plasmo" quote="false"/> 
        <paramRef ref="geneParams.chip_distance"/>
        <paramRef ref="geneParams.chip_direction"/> 

        <column name="source_id"/>
        <column name="project_id"/>
        <column name="chip_distance"/>
        <column name="chip_antibodies"/>
        <column name="chip_genotype"/>
        <column name="chip_score"/>
 

    
      <sql>
             <![CDATA[
select * from  (select outer.gene_source_id as source_id,
                       '@PROJECT_ID@' as project_id, 
                        outer.antibody as chip_antibodies, outer.genotype as chip_genotype,
                        max(outer.distance) as chip_distance,
                        max(outer.score) as chip_score,
                        count(*) as chip_total_reps
                from (select inner.gene_source_id,inner.antibody, inner.genotype, max(inner.distance) as distance,max(inner.score) as score
                      from (select ccg.gene_source_id,cpp.antibody,cpp.genotype,ccg.distance,cpp.replicate,dtf.float_value as score 
                            from   ApidbTuning.ChIPchipGene ccg,
                                   rad.datatransformationresult dtf,
                                   ApidbTuning.ChIPProtocolParams cpp,
                                   rad.protocol p
                            where ccg.chip_na_feature_id = dtf.row_id
                            and   dtf.analysis_id = cpp.analysis_id
                            and   cpp.protocol_id = p.protocol_id
                            and   cpp.protocol_type = 'called_peaks'
                            and   ('not applicable' in lower($$chip_genotypes$$) OR lower(cpp.genotype) in  ($$chip_genotypes$$))
                            and   ('not applicable' in lower($$chip_antibody_plasmo$$) OR lower(cpp.antibody) in  ($$chip_antibody_plasmo$$))
                            and   ccg.distance <= $$chip_distance$$ 
                            and   ('Either' = $$chip_direction$$ OR ccg.direction = $$chip_direction$$)
                            and   lower(p.name) like lower('%$$chip_experiment$$%')) inner
                group by inner.gene_source_id,inner.antibody, inner.genotype,inner.replicate) outer
             group by outer.gene_source_id,outer.antibody, outer.genotype)
where chip_total_reps > $$chip_replicates_plasmo$$
           ]]>
       </sql>
    </sqlQuery>

  <processQuery name="GenesByChIPchipPlasmo" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <testParamValues>
          <paramValue name="chip_antibody_plasmo">H3K9me3</paramValue>
          <paramValue name="chip_genotypes">sir2KO</paramValue>
          <paramValue name="chip_replicates_plasmo">1</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.chip_experiment" quote="false"/>
        <paramRef ref="geneParams.chip_antibody_plasmo"   quote="false"/>
        <paramRef ref="geneParams.chip_genotypes"  quote="false"/> 
        <paramRef ref="geneParams.chip_replicates_plasmo" quote="false"/>
        <paramRef ref="geneParams.chip_distance"/>
        <paramRef ref="geneParams.chip_direction"  quote="false"/> 
    <!--    <paramRef ref="geneParams.chip_score"/>  -->

        <wsColumn name="source_id" width="50" wsName="source_id"/>   
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="chip_distance" width="32"/>   
        <wsColumn name="chip_genotype" width="32"/>
        <wsColumn name="chip_antibodies" width="32"/>
        <wsColumn name="chip_score" width="32"/> 
      
    </processQuery>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Locus Tag  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneByLocusTag"  doNotTest="true" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids"/>
        <column name="source_id"/>
        <column name="project_id"/>
	<column name="input_id"/>
       <sql excludeProjects="TrichDB">
             <![CDATA[
       SELECT DISTINCT t.gene AS source_id,
          apidb.tab_to_string(CAST(COLLECT(t.source_id) AS apidb.varchartab), ', ') AS input_id,
          '@PROJECT_ID@' as project_id
         FROM ApidbTuning.GeneAttributes ga,
            (SELECT DISTINCT ds.source_id, gi.gene
             FROM ApidbTuning.GeneId gi, ($$ds_gene_ids$$) ds
             WHERE lower(gi.id) = LOWER(ds.source_id )) t
        WHERE t.gene = ga.source_id
          AND ga.project_id = '@PROJECT_ID@'
       GROUP BY t.gene
           ]]>
       </sql>

 <sql includeProjects="TrichDB">
             <![CDATA[
       SELECT DISTINCT t.gene AS source_id,
          apidb.tab_to_string(CAST(COLLECT(t.source_id) AS apidb.varchartab), ', ') AS input_id,
          '@PROJECT_ID@' as project_id
         FROM (SELECT DISTINCT (ds.source_id), gf.source_id AS gene
               FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext,
                        ($$ds_gene_ids$$) ds
                   WHERE gf.external_database_release_id=extr.external_database_release_id
                     AND extr.external_database_id=ext.external_database_id
                      AND ext.name = 'T. vaginalis scaffolds' 
                     AND gf.source_id = ds.source_id) t
       GROUP BY t.gene
           ]]>
       </sql>

<!--
 <sql includeProjects="GiardiaDB">
             <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext,
                 ($$ds_gene_ids$$) ds
            WHERE gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'G. lamblia contigs' 
              AND gf.source_id LIKE REGEXP_REPLACE(REPLACE(ds.source_id, '*', '%'), '[[:space:]]', '')
           ]]>
       </sql>
-->

    </sqlQuery>

    <processQuery name="GeneByLocusTag" includeProjects="EuPathDB" doNotTest="true"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids" noTranslation="true"/>
        <paramRef ref="sharedParams.signature" noTranslation="true"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="input_id" width="32"/>
     </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Single locus tag  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneBySingleLocusTag" excludeProjects="EuPathDB" doNotTest="true" 
              isCacheable="true">
        <paramRef ref="geneParams.single_gene_id"/>
        
        <column name="source_id"/>
        <column name="project_id"/>
	<!-- column name="input_id"/ -->
        
        <sql>
            <![CDATA[
            SELECT DISTINCT gi.gene AS source_id, 
            -- rpad($$single_gene_id$$, 30) AS input_id, RPAD is a WDK bug workaround; let's just skip it.
            '@PROJECT_ID@' as project_id
            FROM ApidbTuning.GeneId gi, ApidbTuning.GeneAttributes ga
            WHERE lower(gi.id) LIKE REGEXP_REPLACE(REPLACE(REPLACE(LOWER($$single_gene_id$$),
                                                               '*', '%'),
                                                       '_', '\_'),
                                               '[[:space:]]', '') ESCAPE '\'
            AND gi.gene = ga.source_id
            AND ga.project_id = '@PROJECT_ID@'
            ]]>
        </sql>


    </sqlQuery>

    <processQuery name="GeneBySingleLocusTag" includeProjects="EuPathDB"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.single_gene_id" noTranslation="true"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <!-- wsColumn name="input_id" width="32"/ -->
     </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- EC number -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByEcNumber" excludeProjects="MicrosporidiaDB,EuPathDB"
               isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEC"/>
        <paramRef ref="geneParams.ec_number_pattern"/>
        <column name="project_id"/>
        <column name="source_id"  />
        <sql >
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, ApidbTuning.GenomicSequence gs,
                 dots.Transcript t, dots.translatedAaFeature taf,
                 dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec,ApidbTuning.GeneAttributes ga
            WHERE gs.taxon_id in ($$organism$$)
              AND gs.na_sequence_id = gf.na_sequence_id
              AND ga.source_id = gf.source_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asec.aa_sequence_id
              AND asec.enzyme_class_id = ec.enzyme_class_id
              AND ec.ec_number LIKE REPLACE(REPLACE(REPLACE(REPLACE(lower($$ec_number_pattern$$),' ',''),'-', '%'),'*','%'),'any','%')
            ORDER BY gf.source_id
       </sql>
    </sqlQuery>

    <processQuery name="GenesByEcNumber" 
             isCacheable='true' includeProjects="EuPathDB"
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEC"/>
        <paramRef ref="geneParams.ec_number_pattern" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
    </processQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Transmembrane domains -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTransmembraneDomains" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.min_tm"/>
        <paramRef ref="geneParams.max_tm"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT ga.source_id, '@PROJECT_ID@' as project_id
            from dots.nasequence nas, ApidbTuning.GeneAttributes ga
            where ga.tm_count >= $$min_tm$$ 
            AND ga.tm_count <= $$max_tm$$
            AND nas.na_sequence_id = ga.na_sequence_id
            AND nas.taxon_id IN ($$organism$$)
           ]]>
        </sql>
    </sqlQuery>

    <processQuery name="GenesByTransmembraneDomains" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.min_tm"/>
        <paramRef ref="geneParams.max_tm"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Has Phylogenetic Tree -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPhylogeneticTree" includeProjects="GiardiaDB" 
              isCacheable="true">
        <column name="project_id"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
              select distinct tree.source_id, '@PROJECT_ID@' as project_id 
              from apidb.phylogenetictree tree
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByPhylogeneticTree" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Gene type -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGeneType" excludeProjects="EuPathDB" 
              isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.geneType"/>
        <paramRef ref="geneParams.includePseudogenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT ga.source_id, '@PROJECT_ID@' as project_id
            FROM dots.NaSequence ens, ApidbTuning.GeneAttributes ga
            WHERE ga.gene_type IN ($$geneType$$)
              AND ga.na_sequence_id = ens.na_sequence_id
              and ga.is_pseudo in ($$includePseudogenes$$)
              AND ens.taxon_id IN ($$organism$$)
              AND ga.project_id = '@PROJECT_ID@'
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByGeneType" includeProjects="EuPathDB"
         isCacheable='true' processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="organismParams.organism"/>
       <paramRef ref="geneParams.includePseudogenes"/>
       <paramRef ref="geneParams.geneType" quote="false"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="is_pseudo" width="32" wsName="is_pseudo"/>
    </processQuery>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Deprecation status, only for GiardiaDB -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGeneDeprecationStatus" includeProjects="GiardiaDB"
              isCacheable="true">
        <column name="project_id"/>
        <column name="source_id" />
        <column name="action" />
        <column name="action_date" />
        <column name="reason" />
        <sql>
            <![CDATA[
            SELECT source_id, action, action_date, reason, '@PROJECT_ID@' as project_id
            FROM apidb.genedeprecation gd 
            WHERE action='undeprecated'
           ]]>
       </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- BLAST   when apidb using apifed (instead of wublast), remember to set useTermOnly in the organism param, in similarityParams.xml   -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <processQuery name="GenesBySimilarity" 
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">

        <testParamValues includeProjects="CryptoDB">
            <paramValue name="BlastQuerySequence">AACCCTAATCATTCCAACTTTGTTTCCAATTCCA</paramValue>
        </testParamValues>
        <testParamValues includeProjects="ToxoDB">
            <paramValue name="BlastQuerySequence">CTGCAAATCGTCAATGTCTTGTCTGCACAAGCAAACAGCCTCGGAGGCGGCGAAACACTCCGGGGCGAGCGCCTTGTTGACGCTAGCACCTTTCTGGTGATGGCGATCGGCATTCGCGGC</paramValue>
	   <paramValue name="BlastDatabaseOrganism">Toxoplasma gondii ME49</paramValue>
        </testParamValues>
        <testParamValues includeProjects="PlasmoDB">
           <paramValue name="BlastQuerySequence">GCAGGAAATATGATTCCAGATAATGATAAAAATTCAAATTATAAATATCCAGCTGTTTATGATGACAAAGATAAAAAGTGTCATATATTATATATTGCAGCTCAAGAAAATAATGGTCCT</paramValue>
            <paramValue name="BlastDatabaseOrganism">Plasmodium falciparum</paramValue>
        </testParamValues>
        <testParamValues includeProjects="GiardiaDB">
           <paramValue name="BlastQuerySequence">CTTAGAGACAAGTATGGCAGTATAGAAGGTCTAGCAAAAGAATTGGGGTCTGACCCTGCCACAGGCCTTTTGAAACCTACCGTTTTGCTCCATCGAAAAACCTATGGTAGCAATACAATG</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TrichDB">
           <paramValue name="BlastQuerySequence">AAGACACTCGCTGAATTAAGAAAGCGCAAATTAGAGGGTGTTGTTCTCATCTACGGCTTCCCAGAGCCAACACGCGCCCACTGCGACTTCGAACCAGTCTTCCGCCAGGAATCCTGCTTC</paramValue>
            <paramValue name="BlastDatabaseOrganism">Trichomonas vaginalis G3</paramValue>
        </testParamValues>
        <!--TODO revisit the BLAST sequence..it was picked from Sanger-->
        <testParamValues includeProjects="TriTrypDB,EuPathDB">
           <paramValue name="BlastQuerySequence">ATGCAACTCCAAAGGTTGGGTGCTCCACTACTTAAAAGGCTTGTGGGGGGATGCATACGC</paramValue>
            <paramValue name="BlastDatabaseOrganism">Trypanosoma brucei TREU927</paramValue>
        </testParamValues>
        <testParamValues includeProjects="AmoebaDB">
           <paramValue name="BlastQuerySequence">ACCGATAGTATTTATTCCAGGGATTCTTGCGTCTATGTTAGAAGGGGATATTAATATAAAAGATATCAGTAAAACACCACTTCCAGAGAAATGTGATACACAAGTAGAATATGAAAGACTTTGGG</paramValue>
	   <paramValue name="BlastDatabaseOrganism">Entamoeba dispar SAW760</paramValue>
        </testParamValues>
        <testParamValues includeProjects="MicrosporidiaDB">
           <paramValue name="BlastQuerySequence">GTTTTGGCAGACGGTATGTTTAACAGGAAAATCTCCCATGAATCTGACGGGAATATTCATAGTATTGATTTCCATGGCCTAACCATGTGTGATATTCCGGTGATAAAAAGAGACAGATATAC</paramValue>
	   <paramValue name="BlastDatabaseOrganism">Encephalitozoon cuniculi GB-M1</paramValue>
        </testParamValues>
        <testParamValues includeProjects="PiroplasmaDB">
           <paramValue name="BlastQuerySequence">TATGCAATCAGGTATCTATCTCATCAATCCTTACGCTCAGCGCTGCCCAATTGGGAAGAGCAAATGTGGACCTGAGCATGATTCCACCCTAGGAAAGTGTGCCATGTACTCTGGTTG</paramValue>
	   <paramValue name="BlastDatabaseOrganism">Babesia bovis T2Bo</paramValue>
        </testParamValues>
        <testParamValues includeProjects="FungiDB,InitDB">
           <paramValue name="BlastQuerySequence"></paramValue>
	   <paramValue name="BlastDatabaseOrganism"></paramValue>
        </testParamValues>

       <paramRef ref="sharedParams.BlastDatabaseType" quote="false" noTranslation="false" default="Transcripts"/>
       <paramRef ref="sharedParams.BlastAlgorithm" quote="false" noTranslation="false" />
       <paramRef ref="sharedParams.BlastDatabaseOrganism" quote="false" noTranslation="false" default="Cryptosporidium parvum Iowa II" includeProjects="CryptoDB"/>
       <paramRef ref="sharedParams.BlastDatabaseOrganism" quote="false" noTranslation="false" default="Plasmodium falciparum 3D7" includeProjects="PlasmoDB"/>
 <paramRef ref="sharedParams.BlastDatabaseOrganism" quote="false" noTranslation="false" excludeProjects="CryptoDB,PlasmoDB"/>
       <paramRef ref="sharedParams.BlastQuerySequence"/>
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter" quote="false" />
       <wsColumn name="source_id" width="50" wsName="Identifier"/>
       <wsColumn name="project_id" width="20" wsName="ProjectId"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" columnType="clob"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer"  columnType="clob"/>
 <wsColumn name="Counter" width="30" columnType="number"/>
    </processQuery>

<!--
                     
    <processQuery name="GenesBySimilarity" includeProjects="EuPathDB" 
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.BlastDatabaseType"/>
       <paramRef ref="geneSimilarityParams.BlastDatabaseOrganism"/>
       <paramRef ref="sharedParams.BlastAlgorithm"/>      
       <paramRef ref="sharedParams.BlastQuerySequence"/> 
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
      <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </processQuery>
-->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Motif search -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <processQuery name="GenesByMotifSearch" excludeProjects="EuPathDB"  
             processName="org.apidb.apicomplexa.wsfplugin.motifsearch.ProteinMotifPlugin">
      <testParamValues includeProjects="PiroplasmaDB">
	<paramValue name="motif_organism">Theileria parva strain Muguga</paramValue>
      </testParamValues>

       <paramRef ref="sharedParams.motif_expression" noTranslation="true" />
       <paramRef ref="geneSimilarityParams.motif_organism" quote="false" />
       <wsColumn name="source_id" width="50" wsName="SourceID"/>
       <wsColumn name="project_id" width="20" wsName="ProjectId"/>
       <wsColumn name="Locations" width="3999"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="3999"/>
    </processQuery>

    <processQuery name="GenesByMotifSearch" includeProjects="EuPathDB"  
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneSimilarityParams.motif_organism" quote="false" />
       <paramRef ref="sharedParams.motif_expression"  noTranslation="true"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="Locations" width="4000"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="4000"/>
    </processQuery>
                                                    
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- old Text Search    NOT IN USE ANYMORE     -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--
    <processQuery name="GenesByTextSearch" excludeProjects="EuPathDB,CryptoDB,TriTrypDB,PlasmoDB,GiardiaDB,ToxoDB,TrichDB"
          processName="org.apidb.apicomplexa.wsfplugin.textsearch.TextSearchPlugin">
       <paramRef ref="sharedParams.text_expression"/>
       <paramRef ref="geneParams.whole_words" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.text_fields"/>
       <paramRef ref="organismParams.text_search_organism"/>
       <wsColumn name="source_id" width="50" wsName="GeneID"/>
       <wsColumn name="project_id" width="20" wsName="ProjectId"/>
       <wsColumn name="text_fields" width="64" wsName="Datasets"/>
    </processQuery>

    <processQuery name="GenesByTextSearch" includeProjects="EuPathDB"
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <paramRef ref="organismParams.text_search_organism"/>
            <paramRef ref="geneParams.text_fields" quote="false"/>
            <paramRef ref="sharedParams.text_expression" quote="false"/>
            <paramRef ref="geneParams.max_pvalue"  quote="false" groupRef="paramGroups.advancedParams"/>
            <paramRef ref="geneParams.whole_words" quote="false" groupRef="paramGroups.advancedParams"/>
            <wsColumn name="project_id" width="20" wsName="project_id"/>
            <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="text_fields" width="64"/>
    </processQuery>
-->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- text search (based on Oracle Text) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <processQuery name="GenesByTextSearch" includeProjects="CryptoDB,TriTrypDB,PlasmoDB,GiardiaDB,ToxoDB,TrichDB,AmoebaDB,MicrosporidiaDB,FungiDB,InitDB,PiroplasmaDB"
          processName="org.apidb.apicomplexa.wsfplugin.textsearch.KeywordSearchPlugin"
          isCacheable="false">
       <paramRef ref="organismParams.text_search_organism"/>
       <paramRef ref="sharedParams.text_expression"/>
       <paramRef ref="geneParams.text_fields"/>
       <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.timestamp"/>
       <wsColumn name="source_id" width="50" wsName="RecordID"/>
       <wsColumn name="project_id" width="20" wsName="ProjectId"/>
       <wsColumn name="max_score" width="10" wsName="MaxScore" columnType="float"/>
       <wsColumn name="fields_matched" width="64" wsName="Datasets"/>
    </processQuery>

 <processQuery name="GenesByTextSearch" includeProjects="EuPathDB"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"
          isCacheable="false">
       <paramRef ref="organismParams.text_search_organism"  quote="false"/>
       <paramRef ref="sharedParams.text_expression" noTranslation="true"/>
       <paramRef ref="geneParams.text_fields"  quote="false"/>
       <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.timestamp" />
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="max_score" width="10" columnType="float"/>
       <wsColumn name="fields_matched" width="64"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Orthologs -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByOrthologs" doNotTest="true" includeProjects="EuPathDB,CryptoDB,GiardiaDB,PlasmoDB,TriTrypDB,ToxoDB,AmoebaDB,MicrosporidiaDB,FungiDB,InitDB,PiroplasmaDB"
              isCacheable="true">
        <paramRef ref="geneParams.gene_result"/>
        <paramRef ref="organismParams.organism" excludeProjects="EuPathDB"/>
        <paramRef ref="organismParams.localorganism" includeProjects="EuPathDB"/>
        <paramRef ref="geneParams.isSyntenic" excludeProjects="EuPathDB"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="wdk_weight" />
        <column name="orthologs"/>

        <sql includeProjects="CryptoDB,GiardiaDB,PlasmoDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,ToxoDB,FungiDB,InitDB,PiroplasmaDB">
            <![CDATA[
            SELECT t.source_id, '@PROJECT_ID@' as project_id, NVL(c.wdk_weight, derived_weight) AS wdk_weight, t.orthologs
            FROM (SELECT source_id, max(wdk_weight) AS derived_weight, 
                         apidb.tab_to_string(CAST(COLLECT(distinct(input)) AS apidb.varchartab),', ') AS orthologs 
            FROM ((
            SELECT gf2.source_id, gf1.source_id as input, qr.wdk_weight
            FROM $$gene_result$$ qr, ApidbTuning.GeneAttributes gf1,
                 ApidbTuning.GeneAttributes gf2, apidb.synteny s
            WHERE $$isSyntenic$$ = 'yes'
               and qr.source_id = gf1.source_id
              AND gf1.orthomcl_name = gf2.orthomcl_name
              AND gf2.gene_type = 'protein coding' -- because non-protein-coding genes use orthmcl_name for counting distinct "ortholog" results
              AND gf2.taxon_id in ($$organism$$)
              AND s.a_na_sequence_id = gf1.na_sequence_id
              AND s.b_na_sequence_id = gf2.na_sequence_id
              AND s.b_start < gf2.end_max
              AND s.b_end > gf2.start_min
            UNION
            SELECT qr.source_id, qr.source_id as input, qr.wdk_weight
            FROM $$gene_result$$ qr, ApidbTuning.GeneAttributes ga
            WHERE qr.source_id = ga.source_id
              AND ga.taxon_id in ($$organism$$) )
            UNION
            SELECT gf2.source_id, gf1.source_id AS input, qr.wdk_weight
            FROM $$gene_result$$ qr, ApidbTuning.GeneAttributes gf1,
                 ApidbTuning.GeneAttributes gf2
            WHERE $$isSyntenic$$ = 'no'
               and qr.source_id = gf1.source_id
              AND gf1.orthomcl_name = gf2.orthomcl_name
              AND gf2.gene_type = 'protein coding' -- because non-protein-coding genes use orthmcl_name for counting distinct "ortholog" results
              AND gf2.taxon_id in ($$organism$$))
            GROUP BY source_id) t
            LEFT JOIN $$gene_result$$ c on t.source_id = c.source_id
           ]]>
       </sql>


       <sql includeProjects="EuPathDB">
            <![CDATA[
            SELECT gb.source_id, gb.project_id as project_id, 0 AS wdk_weight,
                   apidb.tab_to_string(CAST(COLLECT(distinct(ga.source_id)) AS apidb.varchartab),', ') as orthologs 
              FROM ApidbTuning.GeneAttributes ga, ApidbTuning.GeneAttributes gb,
                   $$gene_result$$ gr
             WHERE ga.source_id = gr.source_id 
               AND gb.orthomcl_name = ga.orthomcl_name
               AND gb.organism IN ($$localorganism$$)
             GROUP BY gb.project_id,gb.source_id
           ]]>
       </sql>
       
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Go Term -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGoTerm" excludeProjects="EuPathDB" isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.go_term"/>
        <column name="project_id"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.NaSequence ens, ApidbTuning.GeneAttributes gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 dots.GoAssociation ga, sres.GoTerm gp,
                 sres.GoRelationship gr, core.TableInfo ti,
                 sres.GoRelationshipType grt
            WHERE ens.taxon_id IN ($$organism$$)
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = ga.row_id
              AND ga.table_id = ti.table_id
              AND ti.name = 'TranslatedAASequence'
              AND ga.go_term_id = gr.child_term_id
              AND gr.parent_term_id = gp.go_term_id
              AND (gp.go_id = substr($$go_term$$, 1, instr($$go_term$$||' :', ' :')-1)
                   OR gp.name LIKE REPLACE($$go_term$$, '*', '%'))
              AND gr.go_relationship_type_id = grt.go_relationship_type_id
              AND grt.name = 'closure'
            ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>


	<processQuery name="GenesByGoTerm" includeProjects="EuPathDB" 
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism"/>
	              <paramRef ref="geneParams.go_term" quote="false"/>
	              <wsColumn name="project_id" width="20" wsName="project_id"/>
	              <wsColumn name="source_id" width="50" wsName="source_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Signal Peptide -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithSignalPeptide" excludeProjects="EuPathDB" isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.min_sigp_sum_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_d_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_signal_probability" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.any_or_all_sigp" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="sigp_sum_score"/>
        <column name="nn_d_score" />
        <column name="hmm_signal_probability" />
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id,
             (spf.maxy_conclusion + spf.maxc_conclusion + 
              spf.maxs_conclusion + spf.means_conclusion ) as sigp_sum_score,
              to_char((spf.means_score + maxy_score) / 2 , '0.99') as nn_d_score,
              to_char(spf.signal_probability, '0.99') as hmm_signal_probability
            FROM dots.NaSequence ens, ApidbTuning.GeneAttributes gf, 
                 dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.SignalPeptideFeature spf
            WHERE ens.taxon_id in ($$organism$$) 
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = spf.aa_sequence_id
              AND ((spf.maxy_conclusion +
                   spf.maxc_conclusion +
                   spf.maxs_conclusion +
                   spf.means_conclusion ) >= $$min_sigp_sum_score$$ 
              $$any_or_all_sigp$$ ((spf.means_score + spf.maxy_score) / 2) >= $$min_sigp_d_score$$
              $$any_or_all_sigp$$ spf.signal_probability >= $$min_sigp_signal_probability$$)
           ]]>
       </sql>
    </sqlQuery>

	<processQuery name="GenesWithSignalPeptide" includeProjects="EuPathDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <paramRef ref="organismParams.organism"/>
	    <paramRef ref="geneParams.min_sigp_sum_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_d_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_signal_probability" groupRef="paramGroups.advancedParams" />
        <paramRef ref="geneParams.any_or_all_sigp" groupRef="paramGroups.advancedParams" quote="false"/>
	    <wsColumn name="source_id" width="50" wsName="source_id"/>
	    <wsColumn name="project_id" width="20" wsName="project_id"/>
	    <wsColumn name="sigp_sum_score" width="32" wsName="sigp_sum_score"/>
            <wsColumn name="nn_d_score" width="32" wsName="nn_d_score"/>
            <wsColumn name="hmm_signal_probability" width="32" wsName="hmm_signal_probability"/>
	</processQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- IsoElectric Point -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByIsoelectricPoint" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.min_isoelectric_point"/>
        <paramRef ref="geneParams.max_isoelectric_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="isoelectric_point"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT asa.isoelectric_point, '@PROJECT_ID@' as project_id, gf.source_id
            FROM ApidbTuning.GeneAttributes gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns
            WHERE asa.isoelectric_point BETWEEN $$min_isoelectric_point$$
                                            AND $$max_isoelectric_point$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
           ]]>
       </sql>
    </sqlQuery>

	<processQuery name="GenesByIsoelectricPoint"
                   includeProjects="EuPathDB"
                   isCacheable="true" 
                   processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism"/>	  
                <paramRef ref="geneParams.min_isoelectric_point"/>
	        <paramRef ref="geneParams.max_isoelectric_point"/>
                <wsColumn name="source_id" width="50" wsName="source_id"/>
	        <wsColumn name="project_id" width="20" wsName="project_id"/>
	 </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Molecular Weight -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMolecularWeight" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.min_molecular_weight"/>
        <paramRef ref="geneParams.max_molecular_weight"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM ApidbTuning.GeneAttributes gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns
            WHERE asa.min_molecular_weight <= $$max_molecular_weight$$
              AND asa.max_molecular_weight >= $$min_molecular_weight$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
           ]]>
       </sql>
    </sqlQuery>


	<processQuery name="GenesByMolecularWeight" includeProjects="EuPathDB"
		isCacheable='true'
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism"/>
	              <paramRef ref="geneParams.min_molecular_weight"/>
	              <paramRef ref="geneParams.max_molecular_weight"/>
	              <wsColumn name="source_id" width="50" wsName="source_id"/>
	              <wsColumn name="project_id" width="20" wsName="project_id"/>
	</processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ExonCount -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExonCount" excludeProjects="EuPathDB" isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.num_exons_gte"/>
        <paramRef ref="geneParams.num_exons_lte"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
             SELECT distinct ga.source_id, '@PROJECT_ID@' as project_id
             FROM ApidbTuning.GeneAttributes ga, dots.nasequence ns
             WHERE ns.taxon_id IN ($$organism$$)
             AND ga.sequence_id = ns.source_id
             AND exon_count  >= $$num_exons_gte$$ 
             And exon_count <= $$num_exons_lte$$
            ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByExonCount" 
	   includeProjects="EuPathDB"
       isCacheable='true' 
       processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="organismParams.organism"/>
       <paramRef ref="geneParams.num_exons_gte"/>
       <paramRef ref="geneParams.num_exons_lte"/>

       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Ortholog pattern -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByOrthologPattern" excludeProjects="EuPathDB"
          isCacheable="true">

        <testParamValues includeProjects="FungiDB,InitDB">
          <paramValue name="included_species">FILL</paramValue>
          <paramValue name="excluded_species">FILL</paramValue>
          <paramValue name="organism">FILL</paramValue>
        </testParamValues>

        <testParamValues includeProjects="PiroplasmaDB">
          <paramValue name="included_species">Eukaryota</paramValue>
          <paramValue name="excluded_species">Bacteria</paramValue>
          <paramValue name="organism">Babesia bovis</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="AmoebaDB">
          <paramValue name="included_species">Eukaryota</paramValue>
          <paramValue name="excluded_species">Bacteria</paramValue>
          <paramValue name="organism">Entamoeba dispar</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="MicrosporidiaDB">
          <paramValue name="included_species">Fungi</paramValue>
          <paramValue name="excluded_species">Bacteria</paramValue>
          <paramValue name="organism">Encephalitozoon cuniculi</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="CryptoDB">
          <paramValue name="included_species">Alveolates</paramValue>
          <paramValue name="excluded_species">Bacteria</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="PlasmoDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Plasmodium falciparum</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="GiardiaDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Giardia Assemblage A isolate WB</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="TriTrypDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Leishmania major</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="ToxoDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Toxoplasma gondii</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="TrichDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Trichomonas vaginalis</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.profile_pattern"/>
        <paramRef ref="geneParams.included_species"/>
        <paramRef ref="geneParams.excluded_species"/>
        <paramRef ref="geneParams.phyletic_indent_map"/>
        <paramRef ref="geneParams.phyletic_term_map"/>
        <paramRef ref="organismParams.organism"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql excludeProjects="ToxoDB">
            <![CDATA[
            SELECT * FROM (
              SELECT DISTINCT ga.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id 
                FROM ApidbTuning.GeneAttributes ga, dots.NaSequence ns 
               WHERE ga.na_sequence_id = ns.na_sequence_id
                 AND ga.ortholog_number = 0 
                 AND ga.paralog_number = 0 
                 AND ga.gene_type = 'protein coding'
                 AND ns.taxon_id in ($$organism$$)
                 AND $$profile_pattern$$ not like '%:Y%'
               UNION
              SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
                FROM apidb.PhylogeneticProfile pp, ApidbTuning.GeneAttributes gf, dots.NaSequence ns
               WHERE pp.profile_string LIKE $$profile_pattern$$
                 AND pp.source_id = gf.source_id
                 AND gf.na_sequence_id = ns.na_sequence_id
                 AND ns.taxon_id in ($$organism$$)
               UNION
              SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
                FROM apidb.PhylogeneticProfile pp, ApidbTuning.GeneAttributes gf, dots.NaSequence ns, 
                     ApidbTuning.GeneId gi, sres.taxonname tn
               WHERE pp.profile_string LIKE $$profile_pattern$$
                 AND tn.name='Babesia bovis T2Bo'
                 AND tn.taxon_id = ns.taxon_id
                 AND ns.taxon_id in ($$organism$$)
                 AND pp.source_id = gi.id
                 AND gi.gene = gf.source_id
                 AND gf.na_sequence_id = ns.na_sequence_id
            ) ORDER BY taxon_id,source_id 
           ]]>
       </sql>
        <sql includeProjects="ToxoDB">
            <![CDATA[
           SELECT source_id, project_id, taxon_id FROM (SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
             FROM apidb.PhylogeneticProfile pp, ApidbTuning.GeneAttributes gf, dots.NaSequence ns
            WHERE pp.profile_string LIKE $$profile_pattern$$
              AND pp.source_id = gf.source_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)            
            UNION
           SELECT DISTINCT ga2.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
             FROM apidb.PhylogeneticProfile pp, dots.NaSequence ns, ApidbTuning.GeneAttributes ga1, ApidbTuning.GeneAttributes ga2
            WHERE pp.profile_string LIKE $$profile_pattern$$
              AND pp.source_id = ga1.source_id
              AND ga1.gene_id = ga2.gene_id
              AND ga1.gene_id IS NOT NULL
              AND ga1.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
            UNION
           SELECT DISTINCT ga.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id 
             FROM ApidbTuning.GeneAttributes ga, dots.NaSequence ns 
            WHERE ga.na_sequence_id = ns.na_sequence_id
              AND ga.ortholog_number = 0 
              AND ga.paralog_number = 0 
              AND ga.gene_type = 'protein coding'
              AND $$profile_pattern$$ not like '%:Y%'
              AND ns.taxon_id in ($$organism$$)            
            )
            ORDER BY taxon_id, source_id
           ]]>
       </sql>
    </sqlQuery>

<!-- 
Iphlyetic_indent_map and phylectic_term_map are not used by the query.  They are for display purposes only.  Thus, the process query has trouble with these parameters and forces us to hard code default values into the WdkQueryPlugin.java file. 
Currently :
  phyletic_indent_map = ARCH
  phyletic_term_map = rnor

if these values change, then they must be updated in the WdkQueryPlugin.java file (search for "workaround" to find the lines) 
-->
    <processQuery name="GenesByOrthologPattern" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues>
          <paramValue name="included_species">Alveolates</paramValue>
          <paramValue name="excluded_species">Bacteria</paramValue>
          <paramValue name="phyletic_indent_map">ARCH</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

	<paramRef ref="geneParams.profile_pattern" noTranslation="true"/>
	<paramRef ref="geneParams.included_species" noTranslation="true"/>
	<paramRef ref="geneParams.excluded_species" noTranslation="true"/>
	<paramRef ref="organismParams.organism"/>
	<paramRef ref="geneParams.phyletic_indent_map" noTranslation="false" quote="false"/>
	<paramRef ref="geneParams.phyletic_term_map" noTranslation="false" quote="false"/>
	<wsColumn name="source_id" width="50" wsName="source_id"/>
	<wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Metabolic Pathway -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMetabolicPathway" includeProjects="ToxoDB,PlasmoDB" isCacheable="true">
        <paramRef ref="geneParams.metabolic_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql includeProjects="PlasmoDB">
            <![CDATA[
              select * from (
              SELECT gf.source_id, '@PROJECT_ID@' as project_id
            FROM ApidbTuning.GeneAttributes gf, dots.DbRefNaFeature drnf, sres.DbRef dr,
              (SELECT idrnf.na_feature_id
               FROM dots.DbRefNaFeature idrnf, sres.DbRef idr
               WHERE idr.primary_identifier = $$metabolic_pathway$$
                 AND idrnf.db_ref_id = idr.db_ref_id) internal
            WHERE internal.na_feature_id = drnf.na_feature_id
            AND gf.na_feature_id = drnf.na_feature_id
            AND drnf.db_ref_id = dr.db_ref_id
            group by gf.source_id
            )
           ]]>
        </sql>

        <sql includeProjects="ToxoDB">
            <![CDATA[
              select * from (
              SELECT gf.source_id, '@PROJECT_ID@' as project_id
              FROM ApidbTuning.GeneAttributes gf, dots.Transcript t,
                   dots.DbRefaaFeature draf, sres.DbRef dr,
                   dots.TranslatedAaFeature taf,
               (SELECT idraf.aa_feature_id
                FROM dots.DbRefaaFeature idraf, sres.DbRef idr
                WHERE 
                idr.primary_identifier = $$metabolic_pathway$$
                AND  idraf.db_ref_id = idr.db_ref_id) internal
            WHERE internal.aa_feature_id = draf.aa_feature_id
            AND gf.na_feature_id = t.parent_id
            AND t.na_feature_id = taf.na_feature_id
            AND taf.aa_feature_id = draf.aa_feature_id
            AND draf.db_ref_id = dr.db_ref_id
            GROUP BY gf.source_id
            )
           ]]>
        </sql>
    </sqlQuery>

	<processQuery name="GenesByMetabolicPathway" includeProjects="EuPathDB"
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
             <!--   <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf"/> -->
	        <paramRef ref="geneParams.metabolic_pathway" quote="false"/>
	        <wsColumn name="source_id" width="50" wsName="source_id"/>
	        <wsColumn name="project_id" width="20" wsName="project_id"/>
	</processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Taxon (Species) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTaxon" excludeProjects="EuPathDB" isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
                FROM ApidbTuning.GeneAttributes gf, dots.nasequence ens
                WHERE gf.na_sequence_id = ens.na_sequence_id
                   and ens.taxon_id in ($$organism$$)
                ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByTaxon" includeProjects="EuPathDB"
           processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Epitopes -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithEpitopes" includeProjects="CryptoDB,ToxoDB,PlasmoDB,GiardiaDB,TriTrypDB,,PiroplasmaDB"
           isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEpitopes"/>
        <paramRef ref="geneParams.epitope_confidence"/>
        <column name="source_id" />
        <column name="project_id"/>
        <column name="confidence" />
        <column name="count" />
        <sql>
            <![CDATA[
        SELECT gf.source_id, '@PROJECT_ID@' as project_id, count(ef.source_id) AS count,
           DECODE(
             MAX(
               DECODE(ef.type, 'Not Full Set Not on Blast Hit', 1,
                      'Not Full Set On Blast Hit', 2,
                      'Full Set Not on Blast Hit', 2,
                      'Full Set On Blast Hit', 3,
                       4)),
               1, 'Low',
               2, 'Medium',
               3, 'High',
               4, 'unknown epitope type') AS confidence
        FROM dots.TranslatedAaSequence tas, dots.EpitopeFeature ef,
             dots.AaLocation al,/* sres.ExternalDatabaseRelease edr,
             sres.ExternalDatabase ed,*/ ApidbTuning.GeneAttributes gf,
             dots.TranslatedAaFeature taf, dots.Transcript t,
             dots.MotifAaSequence mas, dots.NaSequence ens
        WHERE tas.aa_sequence_id = ef.aa_sequence_id
          AND ef.aa_feature_id = al.aa_feature_id
          AND ef.motif_aa_sequence_id = mas.aa_sequence_id
          AND tas.aa_sequence_id = taf.aa_sequence_id
          AND taf.na_feature_id = t.na_feature_id
          AND t.parent_id = gf.na_feature_id
          AND gf.na_sequence_id = ens.na_sequence_id
          AND ens.taxon_id in ($$organism$$)
         /*  AND ef.external_database_release_id
              = edr.external_database_release_id
          AND edr.external_database_id = ed.external_database_id
         AND ed.name in('Links to IEDB epitopes','Lbraziliensis_IEDB_Epitopes_RSRC','Linfantum_IEDB_Epitopes_RSRC','LmajorFriedlin_IEDB_Epitopes_RSRC','Tbrucei927_IEDB_Epitopes_RSRC','Tbrucei427_IEDB_Epitopes_RSRC','Tbruceigambiense_IEDB_Epitopes_RSRC','TcruziEsmeraldoLike_IEDB_Epitopes_RSRC','TcruziNonEsmeraldoLike_IEDB_Epitopes_RSRC','Pf_IEDB_Epitopes_RSRC','Pb_IEDB_Epitopes_RSRC','Pc_IEDB_Epitopes_RSRC','Pk_IEDB_Epitopes_RSRC','Pv_IEDB_Epitopes_RSRC','Py_IEDB_Epitopes_RSRC','BbovisT2Bo_IEDB_Epitopes_RSRC','TannulataAnkara_IEDB_Epitopes_RSRC' */
          AND ef.type IN ($$epitope_confidence$$)
        GROUP BY gf.source_id
        ORDER BY gf.source_id
           ]]>
        </sql>
    </sqlQuery>   

    <processQuery name="GenesWithEpitopes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
           isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEpitopes" quote="false"/>
        <paramRef ref="geneParams.epitope_confidence" quote="false"/>
        <wsColumn name="source_id" width="50" />
        <wsColumn name="project_id" width="20"/>
        <wsColumn name="confidence" width="10" />
        <wsColumn name="count" width="10" />
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Mass Spec -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!-- TODO: add Mass spec query for Trypdb -->
    <sqlQuery name="GenesByMassSpec" includeProjects="PlasmoDB,ToxoDB,CryptoDB,GiardiaDB,TriTrypDB,TrichDB,AmoebaDB" 
            isCacheable='true'>

        <testParamValues includeProjects="AmoebaDB">
          <paramValue name="ms_assay">Phagosome Proteomics data from Huston - 0 mins</paramValue>
        </testParamValues>
        <testParamValues includeProjects="ToxoDB">
          <paramValue name="ms_assay">Wastling 1-D SDS PAGE</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TriTrypDB">
          <paramValue name="ms_assay">TcruziEsmeraldoLike_Proteomics_Brent_Amastigote_RSRC</paramValue>
        </testParamValues>
        <testParamValues includeProjects="PlasmoDB">
          <paramValue name="ms_assay">Merozoite</paramValue>
        </testParamValues>
        <testParamValues includeProjects="CryptoDB">
          <paramValue name="ms_assay">Wastling MassSpec 1D Gel LC-MS/MS</paramValue>
        </testParamValues>
        <testParamValues includeProjects="GiardiaDB">
          <paramValue name="ms_assay">DTASelect-filter_032108_Proteomics</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TrichDB">
          <paramValue name="ms_assay">Hayes-Johnson_Tvag_Proteomics</paramValue>
        </testParamValues>
        <paramRef ref="geneParams.ms_assay"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" columnType="number" width="12" />
         
     <!--   <sqlParamValue name="restrainOrganism" excludeProjects="TriTrypDB,PlasmoDB">
                <![CDATA[
                   and nas.taxon_id in ($$organism$$)
                ]]>
       </sqlParamValue>
       <sqlParamValue name="restrainOrganism" includeProjects="TriTrypDB,PlasmoDB" /> -->


        <sql>
            <![CDATA[
          select distinct ga.source_id,'@PROJECT_ID@' as project_id, seq.sum_sequence_count, spec.sum_spectrum_count
          from apidb.massspecsummary mss,
                dots.translatedaafeature taaf, dots.transcript t, ApidbTuning.GeneAttributes ga,
          (select intseq.aa_sequence_id,count(*) as sum_sequence_count
             from (select msf.aa_sequence_id, count(*) as sum_seq_ct
              from dots.massspecfeature msf,
                   dots.aalocation aal,
                   sres.externaldatabase ed,
                   sres.externaldatabaserelease edr
              where msf.aa_feature_id = aal.aa_feature_id
                and msf.external_database_release_id = edr.external_database_release_id
                and edr.external_database_id = ed.external_database_id
                and ed.name in ($$ms_assay$$)
              group by msf.aa_sequence_id,aal.start_min,aal.end_max ) intseq
              group by intseq.aa_sequence_id
              having count(*) >= $$min_sequence_count$$
          ) seq,
          (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
              from apidb.massspecsummary mss,
                   sres.externaldatabase ed,
                   sres.externaldatabaserelease edr
              where mss.external_database_release_id = edr.external_database_release_id
                and edr.external_database_id = ed.external_database_id
                and ed.name in ($$ms_assay$$)
              group by mss.aa_sequence_id
              having sum(spectrum_count) >= $$min_spectrum_count$$
          ) spec,
          dots.nasequence nas
          where mss.aa_sequence_id = taaf.aa_sequence_id
          and taaf.na_feature_id = t.na_feature_id
          and t.parent_id = ga.na_feature_id
          and ga.na_sequence_id = nas.na_sequence_id
          and mss.aa_sequence_id = seq.aa_sequence_id
          and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
 
    


    </sqlQuery>   

    <processQuery name="GenesByMassSpec" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
            isCacheable='true'>
        <testParamValues>
          <paramValue name="ms_assay">Wastling 1-D SDS PAGE</paramValue>
        </testParamValues>
        <paramRef ref="geneParams.ms_assay" quote="false"/>
        <paramRef ref="sharedParams.min_sequence_count" number="true" />
        <paramRef ref="sharedParams.min_spectrum_count" number="true"/>
        <wsColumn name="source_id" width="50" />
        <wsColumn name="project_id" width="20" />
        <wsColumn name="sum_sequence_count" width="10" />
        <wsColumn name="sum_spectrum_count" width="10" />
    </processQuery>

<!-- this query has been unified with the P. Bergheii generic mass spec query GenesByMassSpec

    <sqlQuery name="GenesByMassSpecPf" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.mass_spec_stage_sample_pf"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="sum_sequence_count"/>
        <column name="sum_spectrum_count"/>
        <sql>
            <![CDATA[
              SELECT source_id,project_id,sum(sequence_count) as sum_sequence_count,sum(spectrum_count) as sum_spectrum_count from (
                SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id,mss.number_of_spans as sequence_count,mss.spectrum_count as spectrum_count
                FROM apidb.MassSpecSummary mss, dots.transcript t,
                     dots.genefeature gf, dots.translatedAAFeature taf
                WHERE mss.developmental_stage in ($$mass_spec_stage_sample_pf$$)
                  AND taf.aa_sequence_id = mss.aa_sequence_id
                  AND t.na_feature_id = taf.na_feature_id
                  AND gf.na_feature_id = t.parent_id
               UNION
                SELECT gf.source_id, '@PROJECT_ID@' as project_id,mss.number_of_spans as sequence_count,mss.spectrum_count as spectrum_count
                FROM apidb.MassSpecSummary mss, dots.transcript t,
                     dots.genefeature gf, dots.translatedAAFeature taf,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                WHERE mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$mass_spec_stage_sample_pf$$)
                  AND taf.aa_sequence_id = mss.aa_sequence_id
                  AND t.na_feature_id = taf.na_feature_id
                  AND gf.na_feature_id = t.parent_id
             )
            group by source_id,project_id
            having sum(sequence_count) >= $$min_sequence_count$$
                /*  AND sum(spectrum_count) >= $$min_spectrum_count$$ */
           ]]>
       </sql>
    </sqlQuery> 

    <processQuery name="GenesByMassSpecPf" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
            isCacheable='true'>
        <paramRef ref="geneParams.mass_spec_stage_sample_pf" quote="false"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" width="50" />
        <wsColumn name="project_id" width="20" />
        <wsColumn name="sum_sequence_count" width="10" />
        <wsColumn name="sum_spectrum_count" width="10" />
    </processQuery>
-->

<!--

    <processQuery name="GenesByMassSpec2" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
            isCacheable='true'>
        <paramRef ref="geneParams.mass_spec_stage"/>
        <paramRef ref="sharedParams.min_seq_coverage"/>
        <paramRef ref="sharedParams.min_span_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" width="50" />
        <wsColumn name="project_id" width="20" />
    </processQuery>

    <sqlQuery name="GenesByMassSpec2" includeProjects="PlasmoDB" 
            isCacheable='true'>
        <paramRef ref="geneParams.ms_assay_3"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />

        <sql includeProjects="PlasmoDB">
            <![CDATA[
            select distinct gf.source_id,'@PROJECT_ID@' as project_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay_3$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay_3$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec,
            dots.nasequence nas
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
            and gf.na_sequence_id = nas.na_sequence_id
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
 
    
    </sqlQuery>   

-->



<!-- This query has been unified with the generic P Berghei  mass spec query GenesByMassSpec

    <sqlQuery name="GenesByMassSpec4" includeProjects="PlasmoDB" 
            isCacheable='true'>
        <paramRef ref="geneParams.ms_assay_4"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />

        <sql includeProjects="PlasmoDB">
            <![CDATA[
            select distinct gf.source_id,'@PROJECT_ID@' as project_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay_4$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay_4$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec,
            dots.nasequence nas
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
            and gf.na_sequence_id = nas.na_sequence_id
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
 
    
    </sqlQuery>   

    <processQuery name="GenesByMassSpec4" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
            isCacheable='true'>
        <paramRef ref="geneParams.ms_assay_4" quote="false"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" width="50" />
        <wsColumn name="project_id" width="20" />
        <wsColumn name="sum_sequence_count" width="10" />
        <wsColumn name="sum_spectrum_count" width="10" />
    </processQuery>
-->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesOrthologousToAGivenGene   COULD HAVE SQL ERRORS FOR APIDB -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesOrthologousToAGivenGene" includeProjects="CryptoDB,PlasmoDB,ToxoDB,TriTrypDB,GiardiaDB,AmoebaDB,MicrosporidiaDB,FungiDB,InitDB,PiroplasmaDB,EuPathDB"
              isCacheable="true">

        <testParamValues includeProjects="PlasmoDB">
          <paramValue name="single_gene_id">PVX_092275</paramValue>
        </testParamValues>

        <testParamValues includeProjects="CryptoDB">
          <paramValue name="single_gene_id">Chro.70036</paramValue>
        </testParamValues>


        <testParamValues includeProjects="PiroplasmaDB">
          <paramValue name="single_gene_id">BBOV_IV008150</paramValue>
        </testParamValues>

        <paramRef ref="organismParams.organism" excludeProjects="EuPathDB"/>
        <paramRef ref="organismParams.localorganism"  includeProjects="EuPathDB"/>
        <paramRef ref="geneParams.single_gene_id"/>
        <column name="project_id"/>
        <column name="source_id"/>

        <sql excludeProjects="EuPathDB">
            <![CDATA[
                SELECT gattr.source_id, project_id
                FROM ApidbTuning.GeneAttributes gattr, dots.nasequence nas
                WHERE orthomcl_name in (
                  SELECT orthomcl_name 
                  FROM   ApidbTuning.GeneAttributes ga, ApidbTuning.GeneId gi 
                  WHERE  lower(gi.id) = lower($$single_gene_id$$)
                  AND    ga.source_id = gi.gene  ) 
                AND gattr.na_sequence_id = nas.na_sequence_id
                AND nas.taxon_id IN ($$organism$$)
                ORDER BY project_id, source_id
           ]]>
       </sql>

       <sql includeProjects="EuPathDB">
       <![CDATA[
                SELECT gattr.source_id, project_id
                FROM ApidbTuning.GeneAttributes gattr
                WHERE orthomcl_name in (
                  SELECT orthomcl_name 
                  FROM   ApidbTuning.GeneAttributes ga, ApidbTuning.GeneId gi 
                  WHERE  lower(gi.id) = lower($$single_gene_id$$)
                  AND    ga.source_id = gi.gene  ) 
                AND gattr.organism IN ($$localorganism$$)
                ORDER BY project_id, source_id
           ]]>
       </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Location -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

 <!-- TODO:  wdkSanityTest needs to handle dependent params -->
    <sqlQuery name="GenesByLocation" excludeProjects="EuPathDB"
              isCacheable="true" doNotTest="true">

        <paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes" multiPick="false" includeProjects="TriTrypDB,ToxoDB,PlasmoDB,MicrosporidiaDB,CryptoDB,PiroplasmaDB,GiardiaDB,FungiDB" quote="true"> <help>Select the organism you wish to query against.</help></paramRef>
        <paramRef ref="sharedParams.chromosomeOptional" includeProjects="PlasmoDB,ToxoDB,CryptoDB,TriTrypDB,MicrosporidiaDB,PiroplasmaDB,GiardiaDB,FungiDB"  queryRef="SharedVQ.ChromosomeOrderNum"/>
        <paramRef ref="sharedParams.sequenceId"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dynamic_location"/>

        <sql includeProjects="TriTrypDB,MicrosporidiaDB,PlasmoDB,CryptoDB,ToxoDB,PiroplasmaDB,GiardiaDB,FungiDB">
            <![CDATA[
            SELECT gatr.source_id as source_id, '@PROJECT_ID@' as project_id,
                  apidb.tab_to_string(CAST(COLLECT(
                  fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)')
                  )  AS apidb.varchartab), '<br/>') as dynamic_location
            FROM ApidbTuning.FeatureLocation fl, ApidbTuning.GeneAttributes gatr
            WHERE ((gatr.species = $$organism$$ AND gatr.chromosome = $$chromosomeOptional$$ )
                   OR lower(fl.sequence_source_id) = lower($$sequenceId$$))
              AND fl.NA_FEATURE_ID = gatr.NA_FEATURE_ID
              AND fl.end_max >= REGEXP_REPLACE('$$start_point$$', ',| ','')
              AND (fl.start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
              AND gatr.project_id  = '@PROJECT_ID@'
            GROUP BY gatr.source_id
           ]]>
       </sql>

        <sql includeProjects="TrichDB,AmoebaDB,FungiDB,InitDB">
            <![CDATA[
            SELECT distinct gatr.source_id as source_id, '@PROJECT_ID@' as project_id,
              fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
            FROM ApidbTuning.FeatureLocation fl,ApidbTuning.GeneAttributes gatr
            WHERE  lower(gatr.sequence_id) = lower($$sequenceId$$)
              AND fl.na_sequence_id = gatr.na_sequence_id
              AND fl.na_feature_id = gatr.na_feature_id
              AND fl.end_max >= REGEXP_REPLACE('$$start_point$$', ',| ','')
              AND (fl.start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
              AND gatr.project_id  = '@PROJECT_ID@'
           ]]>
       </sql>
    </sqlQuery>

	<processQuery name="GenesByLocation" includeProjects="EuPathDB" 
                    isCacheable='true' doNotTest="true"
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                       <paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes"  multiPick="false"  
                             noTranslation="true" default="Plasmodium falciparum"><help>Select organism you wish to query against</help>
        </paramRef>
                    <!--   <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>  -->
	               <paramRef ref="sharedParams.chromosomeOptional" quote="false" noTranslation="true"/>
	               <paramRef ref="sharedParams.sequenceId" noTranslation="true"/>
                       <paramRef ref="sharedParams.start_point"/>
                       <paramRef ref="sharedParams.end_point"/>
	               <wsColumn name="source_id" width="50" wsName="source_id"/>
	               <wsColumn name="project_id" width="20" wsName="project_id"/>
                       <wsColumn name="dynamic_location" width="100" wsName="dynamic_location"/>
                
	</processQuery>


    <sqlQuery name="GenesBySequenceSourceId" excludeProjects="EuPathDB"
              isCacheable="true" doNotTest="true">

        <paramRef ref="sharedParams.sequenceId"/>
        <column name="project_id"/>
        <column name="source_id"/>

        <sql>
        <![CDATA[
        select distinct feature_source_id as source_id, project_id 
        from ApidbTuning.FeatureLocation 
        where feature_type = 'GeneFeature' 
        and sequence_source_id = $$sequenceId$$
        ]]>
        </sql>

    </sqlQuery>

	<processQuery name="GenesByLocations" includeProjects="EuPathDB" 
                    isCacheable='true' doNotTest="true"
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
	               <paramRef ref="sharedParams.sequenceId" noTranslation="true"/>
                       <paramRef ref="sharedParams.start_point"/>
                       <paramRef ref="sharedParams.end_point"/>
	               <wsColumn name="source_id" width="50" wsName="source_id"/>
	               <wsColumn name="project_id" width="20" wsName="project_id"/>
                       <wsColumn name="dynamic_location" width="100" wsName="dynamic_location"/>
                
	</processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Genes By Snps -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySnps" includeProjects="PlasmoDB,ToxoDB,CryptoDB"
              isCacheable="true">

        <testParamValues includeProjects="PlasmoDB">
            <paramValue name="snp_strain_m">Pf-7G8</paramValue>
        </testParamValues>
 
       <testParamValues includeProjects="CryptoDB">
            <paramValue name="snp_strain_m">Cp-MD</paramValue>
        </testParamValues> 	  

        <testParamValues includeProjects="ToxoDB">
            <paramValue name="snp_strain_m">Tg-GT1 (type I)</paramValue>
        </testParamValues>

        <paramRef ref="organismParams.organism" displayType="listBox" multiPick="false" 
                  quote="true" queryRef="organismVQ.withChromosomesSNPs">
                  <help>Select organism you wish to query against</help>
        </paramRef>

        <paramRef ref="sharedParams.snp_strain_a"/>
        <paramRef ref="sharedParams.snp_strain_m" multiPick="false"/>
        <paramRef ref="geneParams.snp_stat"/>
        <paramRef ref="geneParams.occurrences_lower"/>
        <paramRef ref="geneParams.occurrences_upper"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper"/>
        <paramRef ref="geneParams.snp_density_lower"/>
        <paramRef ref="geneParams.snp_density_upper"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="cds_snp_density"/>
        <column name="dn_ds_ratio"/>
        <column name="num_synonymous"/>
        <column name="num_non_synonymous"/>
        <column name="num_noncoding"/>
        <column name="num_nonsense"/>
        <column name="total_snps"/>

        <sqlParamValue name="approxZero">0.1</sqlParamValue>

        <sql>
            <![CDATA[
              SELECT source_id, '@PROJECT_ID@' as project_id,
	           round(non_synonymous / CASE synonymous
	                      WHEN 0 THEN null
				  ELSE synonymous end, 2) as dn_ds_ratio,
              non_synonymous as num_non_synonymous,synonymous as num_synonymous,
              non_coding as num_noncoding, stop as num_nonsense,
              cds_length,round(((non_synonymous + synonymous) / cds_length * 1000),2) as cds_snp_density,
              total as total_snps
	      FROM (
SELECT cds_length, na_feature_id, source_id,
       strain_a, strain_b,
       sum(synonymous) as synonymous,
       sum(non_synonymous) as non_synonymous,
       sum(non_coding) as non_coding,
       sum(stop) as stop,
       (sum(non_coding) + sum(synonymous) + sum(non_synonymous)) as total
FROM  (SELECT gf.cds_length, gf.na_feature_id, gf.source_id,
              sf.external_database_release_id,
              sva.strain AS strain_a,
              svb.strain AS strain_b,
              CASE WHEN sva.product IS NULL THEN 1 ELSE 0 END AS non_coding,
              CASE WHEN sva.product = svb.product THEN 1 ELSE 0 END AS synonymous,
              CASE WHEN sva.product != svb.product THEN 1 ELSE 0 END AS non_synonymous,
              CASE WHEN sva.product = '*' OR  svb.product = '*' THEN 1 ELSE 0 END AS stop
       FROM dots.SeqVariation sva, dots.SeqVariation svb, dots.SnpFeature sf,
            apidbtuning.geneattributes gf, 
            ( select distinct organism,extdb_name as name,external_database_release_id 
              from apidbtuning.snpstrains) ss
       WHERE ss.organism = $$organism$$
         AND ss.name in ('Genomic Sequence SNPs','Pf_plasmoDbCombinedSnps_RSRC','Widmer SNPs','sangerPReichenowiSnps_RSRC')
         AND sf.external_database_release_id = ss.external_database_release_id
         AND sva.parent_id = sf.na_feature_id
         AND svb.parent_id = sf.na_feature_id        
         AND sva.strain = $$snp_strain_a$$
         AND svb.strain = $$snp_strain_m$$
         AND sva.allele != svb.allele
         AND sf.parent_id = gf.na_feature_id
)
GROUP BY cds_length, na_feature_id, source_id,
         strain_a, strain_b )
	      WHERE non_synonymous / CASE synonymous
	                          WHEN 0 THEN &&approxZero&&
				  ELSE synonymous end >= $$dn_ds_ratio_lower$$
	      AND (-1 = $$dn_ds_ratio_upper$$
                        OR non_synonymous / CASE synonymous
	                                    WHEN 0 THEN &&approxZero&&
				            ELSE synonymous end <= $$dn_ds_ratio_upper$$ )
              AND $$snp_stat$$ >= $$occurrences_lower$$
	      AND (-1 = $$occurrences_upper$$ OR $$snp_stat$$ <= $$occurrences_upper$$)
              AND (non_synonymous + synonymous) / cds_length * 1000 >= $$snp_density_lower$$
              AND (-1 = $$snp_density_upper$$ OR (non_synonymous + synonymous) / cds_length * 1000 <= $$snp_density_upper$$)
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesBySnps" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
              isCacheable="true">
        <testParamValues>
            <paramValue name="snp_strain_m">Cp-MD</paramValue>
        </testParamValues>

        <paramRef ref="organismParams.organism" displayType="listBox" multiPick="false" 
                  quote="true" queryRef="organismVQ.withChromosomesSNPs">
                  <help>Select organism you wish to query against</help>
        </paramRef>

        <paramRef ref="sharedParams.snp_strain_a" quote="false"/>
        <paramRef ref="sharedParams.snp_strain_m" multiPick="false"  quote="false"/>
        <paramRef ref="geneParams.snp_stat" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density_upper" groupRef="paramGroups.advancedParams"/>
        <wsColumn name="project_id" width="20"/>
        <wsColumn name="source_id" width="50"/>
        <wsColumn name="cds_snp_density" width="10"/>
        <wsColumn name="dn_ds_ratio" width="10"/>
        <wsColumn name="num_synonymous" width="10"/>
        <wsColumn name="num_non_synonymous" width="10"/>
        <wsColumn name="num_noncoding" width="10"/>
        <wsColumn name="num_nonsense" width="10"/>
        <wsColumn name="total_snps" width="10"/>
   </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Genes By HTS Snps -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByHtsSnps" includeProjects="ToxoDB,TriTrypDB,AmoebaDB"
              isCacheable="true">

       <testParamValues includeProjects="CryptoDB">
            <paramValue name="htsSnp_strain_m">Cp-MD</paramValue>
        </testParamValues> 	  
        <testParamValues includeProjects="ToxoDB">
            <paramValue name="htsSnp_strain_m">Tg-GT1 (type I)</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TriTrypDB">
            <paramValue name="htsSnp_strain_a">Tb-427</paramValue>
            <paramValue name="htsSnp_strain_m">Tb-927</paramValue>
        </testParamValues>

        <paramRef ref="organismParams.organism" displayType="listBox" multiPick="false" queryRef="organismVQ.withHtsSNPs" quote="true">
                  <help>Select organism you wish to query against</help>
        </paramRef>

        <paramRef ref="sharedParams.htsSnp_strain_a"/>
        <paramRef ref="sharedParams.htsSnp_strain_m" multiPick="false"/>
        <paramRef ref="sharedParams.hts_snps_coverage"/>
        <paramRef ref="sharedParams.hts_snps_allele_freq" default="40" includeProjects="TriTrypDB,AmoebaDB"/>
        <paramRef ref="sharedParams.hts_snps_allele_freq" default="80" includeProjects="ToxoDB"/>
        <paramRef ref="sharedParams.hts_snps_pvalue"/>
        <paramRef ref="geneParams.snp_stat"/>
        <paramRef ref="geneParams.occurrences_lower"/>
        <paramRef ref="geneParams.occurrences_upper"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper"/>
        <paramRef ref="geneParams.snp_density_lower"/>
        <paramRef ref="geneParams.snp_density_upper"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="cds_snp_density"/>
        <column name="dn_ds_ratio"/>
        <column name="num_synonymous"/>
        <column name="num_non_synonymous"/>
        <column name="num_noncoding"/>
        <column name="num_nonsense"/>
        <column name="total_snps"/>

        <sqlParamValue name="approxZero">0.1</sqlParamValue>

        <sql>
            <![CDATA[
              SELECT source_id, '@PROJECT_ID@' as project_id,
                     round(non_synonymous
                           / CASE synonymous
                             WHEN 0 THEN null
                             ELSE synonymous END, 2) as dn_ds_ratio,
                     non_synonymous as num_non_synonymous, synonymous as num_synonymous,
                     non_coding as num_noncoding, stop as num_nonsense, cds_length,
                     round(((non_synonymous + synonymous) / cds_length * 1000), 2) as cds_snp_density,
                     total as total_snps
              FROM (SELECT cds_length, na_feature_id, source_id,
                           $$htsSnp_strain_a$$ as strain_a, $$htsSnp_strain_m$$ as strain_b,
                           sum(is_synonymous) as synonymous,
                           sum(is_non_synonymous) as non_synonymous,
                           sum(is_non_coding) as non_coding,
                           sum(is_stop) as stop,
                           (sum(is_non_coding) + sum(is_synonymous) + sum(is_non_synonymous)) as total
                    FROM (SELECT gf.cds_length,
                                 gf.na_feature_id, gf.source_id,
                                 sf.external_database_release_id,
                                 p.is_non_coding, p.is_synonymous, p.is_non_synonymous, p.is_stop
                          FROM dots.SnpFeature sf, ApidbTuning.GeneAttributes gf, 
                               (select distinct strain_a, strain_b, snp_na_feature_id, gene_na_feature_id,
                                                is_non_coding, is_synonymous, is_non_synonymous, is_stop
                                from ApidbTuning.Polymorphism
                                where (strain_a = $$htsSnp_strain_a$$ and strain_b = $$htsSnp_strain_m$$
                                       or strain_a = $$htsSnp_strain_m$$ and strain_b = $$htsSnp_strain_a$$)
                                  and gene_source_id is not null
                                  and (pvalue_a is null or  pvalue_a <= $$hts_snps_pvalue$$)
                                  and (allele_percent_a is null or  allele_percent_a >= $$hts_snps_allele_freq$$)
                                  and (coverage_a is null or coverage_a >= $$hts_snps_coverage$$)
                                  and (pvalue_b is null or pvalue_b <= $$hts_snps_pvalue$$)
                                  and (allele_percent_b is null or allele_percent_b >= $$hts_snps_allele_freq$$)
                                  and (coverage_b is null or coverage_b >= $$hts_snps_coverage$$)
                                  and external_database_release_id
                                       in (select external_database_release_id
                                           from ApidbTuning.SnpStrains
                                           where organism =  $$organism$$
                                             and extdb_name = 'InsertSnps.pm NGS SNPs INTERNAL') ) p
                          WHERE p.snp_na_feature_id = sf.na_feature_id
                            AND p.gene_na_feature_id = gf.na_feature_id
                         )
                    GROUP BY cds_length, na_feature_id, source_id)
              WHERE non_synonymous / CASE synonymous
                                     WHEN 0 THEN &&approxZero&&
                                     ELSE synonymous END >= $$dn_ds_ratio_lower$$
                    AND (-1 = $$dn_ds_ratio_upper$$
                         OR non_synonymous / CASE synonymous
                                             WHEN 0 THEN &&approxZero&&
                                             ELSE synonymous end <= $$dn_ds_ratio_upper$$ )
                    AND $$snp_stat$$ >= $$occurrences_lower$$
                    AND (-1 = $$occurrences_upper$$ OR $$snp_stat$$ <= $$occurrences_upper$$)
                    AND (non_synonymous + synonymous) / cds_length * 1000 >= $$snp_density_lower$$
                    AND (-1 = $$snp_density_upper$$
                         OR (non_synonymous + synonymous) / cds_length * 1000 <= $$snp_density_upper$$)
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByHtsSnps" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
              isCacheable="true">
        <testParamValues>
            <paramValue name="htsSnp_strain_m">Cp-MD</paramValue>
        </testParamValues>

        <paramRef ref="organismParams.organism" displayType="listBox" multiPick="false" 
                  quote="true" queryRef="organismVQ.withChromosomesHtsSNPs">
                  <help>Select organism you wish to query against</help>
        </paramRef>

        <paramRef ref="sharedParams.htsSnp_strain_a" quote="false"/>
        <paramRef ref="sharedParams.htsSnp_strain_m" multiPick="false"  quote="false"/>
<!--        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>  -->        
        <paramRef ref="geneParams.snp_stat" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density_upper" groupRef="paramGroups.advancedParams"/>
        <wsColumn name="project_id" width="20"/>
        <wsColumn name="source_id" width="50"/>
        <wsColumn name="cds_snp_density" width="10"/>
        <wsColumn name="dn_ds_ratio" width="10"/>
        <wsColumn name="num_synonymous" width="10"/>
        <wsColumn name="num_non_synonymous" width="10"/>
        <wsColumn name="num_noncoding" width="10"/>
        <wsColumn name="num_nonsense" width="10"/>
        <wsColumn name="total_snps" width="10"/>
   </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- SecondaryStructure -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySecondaryStructure" includeProjects="GiardiaDB,TrichDB,PlasmoDB,TriTrypDB,CryptoDB"
            isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withSecondaryStructure"/>
        <paramRef ref="geneParams.min_coil"/>
        <paramRef ref="geneParams.max_coil"/>
        <paramRef ref="geneParams.min_strand"/>
        <paramRef ref="geneParams.max_strand"/>
        <paramRef ref="geneParams.min_helix"/>
        <paramRef ref="geneParams.max_helix"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="percent_coil"/>
        <column name="percent_strand"/>
        <column name="percent_helix"/>
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, c.percentage as percent_coil,
                   e.percentage as percent_strand, h.percentage as percent_helix
            FROM dots.SecondaryStructure ss, dots.SecondaryStructureCall c,
                 dots.SecondaryStructureCall e, dots.SecondaryStructureCall h, 
                 ApidbTuning.GeneAttributes gf,dots.transcript t, 
                 dots.translatedaafeature tf,dots.nasequence s
            WHERE s.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = tf.na_feature_id
              AND tf.aa_sequence_id = ss.aa_sequence_id
              AND ss.secondary_structure_id = c.secondary_structure_id
              AND ss.secondary_structure_id = e.secondary_structure_id
              AND ss.secondary_structure_id = h.secondary_structure_id
              AND c.structure_type = 'C'
              AND e.structure_type = 'E'
              AND h.structure_type = 'H'
              AND c.percentage between $$min_coil$$ and $$max_coil$$
              AND e.percentage between $$min_strand$$ and $$max_strand$$
              AND h.percentage between $$min_helix$$ and $$max_helix$$
              AND s.taxon_id IN ($$organism$$)
            ]]>
       </sql>
    </sqlQuery>


	<processQuery name="GenesBySecondaryStructure"
	    includeProjects="EuPathDB"        
		isCacheable="true" 
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withSecondaryStructure"/>
	        <paramRef ref="geneParams.min_coil"/>
	        <paramRef ref="geneParams.max_coil"/>
	        <paramRef ref="geneParams.min_strand"/>
	        <paramRef ref="geneParams.max_strand"/>
	        <paramRef ref="geneParams.min_helix"/>
	        <paramRef ref="geneParams.max_helix"/>
	        <wsColumn name="source_id" width="50" wsName="source_id"/>
	        <wsColumn name="project_id" width="20" wsName="project_id"/>
			<wsColumn name="percent_coil" width="32" wsName="percent_coil"/>
			<wsColumn name="percent_strand" width="32" wsName="percent_strand"/>
			<wsColumn name="percent_helix" width="32" wsName="percent_helix"/>
	</processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Interpro -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

 <!-- TODO:  wdkSanityTest needs to handle dependent params -->
    <sqlQuery name="GenesByInterproDomain" excludeProjects="EuPathDB"  
			isCacheable="true" doNotTest="true">

        <testParamValues includeProjects="CryptoDB,PlasmoDB,ToxoDB,GiardiaDB,TrichDB">
           <paramValue name="domain_database">PRODOM</paramValue>
           <paramValue name="domain_accession">PD001005: ISOMERASE TRIOSEPHOSPHATE TIM BIOSYNTHESIS GLUCONEOGENESIS PENTOSE GLYCOLYSIS SHUNT ACID FATTY</paramValue>
        </testParamValues>
        <!--TODO-domain accession value is not defined here for PD000018-->
        <testParamValues includeProjects="TriTrypDB">
           <paramValue name="domain_database">PRODOM</paramValue>
           <paramValue name="domain_accession">PD000018:</paramValue>
        </testParamValues>
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.domain_database"/>
        <paramRef ref="geneParams.domain_accession"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="e_value"/>
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, to_char(avg(df.e_value),'9.9EEEE') as e_value
            FROM dots.DomainFeature df,dots.translatedaasequence tas,
                 ApidbTuning.GeneAttributes gf, dots.transcript t, dots.TranslatedAAFeature taf,
                 dots.DbRefAaFeature draf, sres.DbRef dr
            WHERE tas.aa_sequence_id = df.aa_sequence_id
              AND df.aa_feature_id = draf.aa_feature_id
              AND draf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = $$domain_database$$
              AND (dr.primary_identifier
                  LIKE REPLACE($$domain_accession$$,'*','%')
                  OR dr.secondary_identifier
                  LIKE REPLACE($$domain_accession$$,'*','%')
                  OR dr.remark
                  LIKE REPLACE($$domain_accession$$,'*','%'))
              AND tas.taxon_id IN ($$organism$$)
              AND tas.aa_sequence_id = taf.aa_sequence_id
              AND taf.na_feature_id = t.na_feature_id
              AND gf.na_feature_id = t.parent_id
              GROUP BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>

	 <processQuery name="GenesByInterproDomain" includeProjects="EuPathDB" doNotTest="true"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism"/>
	              <paramRef ref="geneParams.domain_database" quote="false"/>
	              <paramRef ref="geneParams.domain_accession"  quote="false"/>
	              <wsColumn name="e_value" width="12"/>
	              <wsColumn name="project_id" width="20" wsName="project_id"/>
	              <wsColumn name="source_id" width="50" wsName="source_id"/>
	 </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- SageTags -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySageTag" includeProjects="PlasmoDB,ToxoDB,GiardiaDB,TriTrypDB" 
              isCacheable="true">
        <testParamValues includeProjects="PlasmoDB">
           <paramValue name="sage_tag_library_name">CQlibrary</paramValue>
        </testParamValues>
       <testParamValues includeProjects="ToxoDB">
           <paramValue name="sage_tag_library_name">sp</paramValue>
        </testParamValues>
       <testParamValues includeProjects="GiardiaDB">
           <paramValue name="sage_tag_library_name">S1 Excystation</paramValue>
        </testParamValues>
       <testParamValues includeProjects="TriTrypDB">
           <paramValue name="sage_tag_library_name">bloodstream library (gambiense)</paramValue>
        </testParamValues>

       <paramRef ref="geneParams.sage_tag_library_name"/>
       <paramRef ref="geneParams.st_max_five_prime_distance"/>
       <paramRef ref="geneParams.st_max_three_prime_distance"/>
       <paramRef ref="geneParams.st_min_tag_count"/>
       <paramRef ref="geneParams.st_max_occurrences"/>
       <paramRef ref="geneParams.sense_antisense"/>
       <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.withSageTags"
                 includeProjects="GiardiaDB,ToxoDB"/ --> 
       <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/ --> 
       <column name="project_id"/> 
       <column name="source_id" />
       <column name="sense_count" />
       <column name="antisense_count" />
       <sql>
            <![CDATA[
               select gene_source_id as source_id, 
                      '@PROJECT_ID@' as project_id,
                      round(sum(sense_count),1) as sense_count,
                      round(sum(antisense_count),1) as antisense_count
               from 
                 (select stg.gene_source_id, stg.tag_source_id,
                         stg.sense_count, stg.antisense_count
                  from ApidbTuning.SageTagGene stg
                  where stg.library_name in ($$sage_tag_library_name$$)
                  and stg.occurrence <= $$st_max_occurrences$$
                  and ((stg.direction = '5' and stg.distance <= $$st_max_five_prime_distance$$)
                     OR (stg.direction = '3' and stg.distance <= $$st_max_three_prime_distance$$))
                  group by stg.gene_source_id, stg.tag_source_id, stg.sense_count, stg.antisense_count
               ) 
               group by gene_source_id having sum($$sense_antisense$$_count) >= $$st_min_tag_count$$ 
            ]]>
          </sql>
    </sqlQuery>

	 <processQuery name="GenesBySageTag" includeProjects="EuPathDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf-gl" includeProjects="EuPathDB"/ -->
        <testParamValues includeProjects="EuPathDB">
           <paramValue name="sage_tag_library_name">CQlibrary</paramValue>
        </testParamValues>
                <paramRef ref="geneParams.sage_tag_library_name" quote="false"/>
                <paramRef ref="geneParams.st_max_five_prime_distance"/>
                <paramRef ref="geneParams.st_max_three_prime_distance"/>
                <paramRef ref="geneParams.st_min_tag_count"/>
                <paramRef ref="geneParams.st_max_occurrences"/>
                <paramRef ref="geneParams.sense_antisense"/>
                <wsColumn name="project_id" width="20" wsName="project_id"/> 
                <wsColumn name="source_id"  width="50" wsName="source_id"/>
                <wsColumn name="sense_count" />
                <wsColumn name="antisense_count" />
<!--
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes" includeProjects="GiardiaDB,ToxoDB"/> 
                <paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/>
-->
	 </processQuery>

    <sqlQuery name="GenesBySageTagRStat" doNotTest="true" includeProjects="PlasmoDB,ToxoDB,GiardiaDB,TriTrypDB" isCacheable="true">
      <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.withSageTags"
                 includeProjects="GiardiaDB,ToxoDB"/ --> 
       <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/ --> 
       <paramRef ref="geneParams.sage_tag_library_name"/>
       <paramRef ref="geneParams.sage_tag_min_r"/>
       <paramRef ref="geneParams.st_max_five_prime_distance"/>
       <paramRef ref="geneParams.st_max_three_prime_distance"/>
       <column name="project_id"/> 
       <column name="source_id" />
       <column name="R" />
       <sql>
            <![CDATA[
       select gene_source_id as source_id, 
              '@PROJECT_ID@' as project_id,
              to_char(sum(xij * log(10, (xij/(Ni * fj)))), '99999D0') as R
       from (
         select g.gene_source_id, aa.library_name, library_count.n as ni, f.frequency as fj, sum(aa.raw_count) as xij
         from ApidbTuning.SageTagAnalysisAttributes aa, 
              ApidbTuning.SageTagAttributes a,
              (select distinct gene_source_id, tag_feature_id, antisense 
               from ApidbTuning.SageTagGene 
               where ((direction = '5' and distance <= $$st_max_five_prime_distance$$) OR (direction = '3' and distance <= $$st_max_three_prime_distance$$))
               ) g,
              (select g.gene_source_id, sum(aa.raw_count) / max(n.n) as frequency
               from ApidbTuning.SageTagAnalysisAttributes aa, 
               ApidbTuning.SageTagAttributes a,
               (select distinct gene_source_id, tag_feature_id, antisense 
                from ApidbTuning.SageTagGene
                where ((direction = '5' and distance <= $$st_max_five_prime_distance$$) OR (direction = '3' and distance <= $$st_max_three_prime_distance$$))
                ) g,
               (select sum(max(total_raw_count)) as n
                from ApidbTuning.SageTagAnalysisAttributes
                where library_name in ($$sage_tag_library_name$$)
                group by library_name) n
               where g.tag_feature_id = a.na_feature_id
                and g.antisense = 0
                and aa.library_name in ($$sage_tag_library_name$$)
                and aa.composite_element_id = a.composite_element_id
               group by g.gene_source_id) f,
              (select library_name, max(total_raw_count) as n
               from ApidbTuning.SageTagAnalysisAttributes
               where library_name in ($$sage_tag_library_name$$)
               group by library_name) library_count
         where g.tag_feature_id = a.na_feature_id
          and g.antisense = 0
          and aa.composite_element_id = a.composite_element_id
          and g.gene_source_id = f.gene_source_id
          and aa.library_name = library_count.library_name
         group by g.gene_source_id, aa.library_name, library_count.n, f.frequency
         )
       group by gene_source_id
       having sum(xij * log(10, (xij/(Ni * fj)))) >  $$sage_tag_min_r$$
            ]]>
          </sql>
    </sqlQuery>



    <processQuery name="GenesBySageTagRStat" includeProjects="EuPathDB" doNotTest="true"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf-gl"/ --> 
        <paramRef ref="geneParams.sage_tag_library_name" quote="false"/>
        <paramRef ref="geneParams.sage_tag_min_r"/>
        <paramRef ref="geneParams.st_max_five_prime_distance"/>
        <paramRef ref="geneParams.st_max_three_prime_distance"/>
   
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="R" />

    </processQuery>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ESTOverlap -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByESTOverlap" excludeProjects="EuPathDB" isCacheable="true">

        <testParamValues includeProjects="ToxoDB">
           <paramValue name="libraryIdGenes">TgME49 3 day invitro bradyzoite</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TriTrypDB">
           <paramValue name="libraryIdGenes">TcAM (amastigote-like)</paramValue>
        </testParamValues>

       <paramRef ref="sharedParams.libraryIdGenes"/>
       <paramRef ref="sharedParams.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.max_number_best_alignments" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.min_number_est_aligned" groupRef="paramGroups.advancedParams"/>

       <column name="project_id"/>
       <column name="source_id" />
       <column name="number_of_ests" />

       <sql excludeProjects="CryptoDB">
            <![CDATA[
            SELECT s.gene as source_id, '@PROJECT_ID@' as project_id, count(*) as number_of_ests
            FROM ApidbTuning.EstAlignmentGeneSummary s, ApidbTuning.EstAttributes e
            WHERE s.est_gene_overlap_length >= $$bp_overlap_gte$$
            AND s.is_consistent in ($$high_confidence_only$$)
            AND s.is_best_alignment in ($$best_alignment_only$$)
            AND s.percent_identity >= $$min_percent_identity$$
            AND s.percent_est_bases_aligned >= $$min_percent_est_aligned$$
            AND s.library_id in ($$libraryIdGenes$$)
            AND e.source_id = s.accession
            AND e.best_alignment_count <= $$max_number_best_alignments$$
            GROUP by s.gene
            HAVING count(*) >= $$min_number_est_aligned$$
            ]]>
          </sql>
       <sql includeProjects="CryptoDB">
           <!-- 
             AA555437 has a gap that spans a huge portion of AAEE01000003,
             causing several genes to be erroneously returned as having overlap
           -->
            <![CDATA[
            SELECT s.gene as source_id, '@PROJECT_ID@' as project_id, count(*) as number_of_ests
            FROM ApidbTuning.EstAlignmentGeneSummary s, ApidbTuning.EstAttributes e
            WHERE s.est_gene_overlap_length >= $$bp_overlap_gte$$
            AND s.is_consistent in ($$high_confidence_only$$)
            AND s.is_best_alignment in ($$best_alignment_only$$)
            AND s.percent_identity >= $$min_percent_identity$$
            AND s.percent_est_bases_aligned >= $$min_percent_est_aligned$$
            AND s.library_id in ($$libraryIdGenes$$)
            AND e.source_id = s.accession
            AND e.best_alignment_count <= $$max_number_best_alignments$$
            AND s.accession != 'AA555437'
            GROUP by s.gene
           HAVING count(*) >= $$min_number_est_aligned$$
            ]]>
          </sql>
    </sqlQuery>


    <processQuery name="GenesByESTOverlap" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <!--    <paramRef ref="organismParams.organism" queryRef="organismVQ.withESTsAndGenes"/> -->
	       <paramRef ref="sharedParams.libraryIdGenes"/>
            <paramRef ref="sharedParams.max_number_best_alignments" groupRef="paramGroups.advancedParams"/>
            <paramRef ref="geneParams.min_number_est_aligned" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
	       <wsColumn name="source_id" width="50" wsName="source_id"/>
	     <wsColumn name="project_id" width="20" wsName="project_id"/>
	<wsColumn name="number_of_ests" width="32" wsName="number_of_ests"/>

    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Dont Care - fake query for internal use -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="DontCare" doNotTest="true" isCacheable="true">
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            select source_id, project_id
            from ApidbTuning.GeneAttributes
            where source_id = 'life_is_sweet' 
        </sql>
    </sqlQuery>
    
    <sqlQuery name="DontCarePlasmoExpression" doNotTest="true" includeProjects="EuPathDB,PlasmoDB" isCacheable="true">
        <paramRef ref="geneParams.extraerythrocytic_stages"/>
        <paramRef ref="geneParams.intraerythrocytic_stages" quote="false"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            select '' as source_id, '' as project_id, '' as max_percentile, '' as min_percentile from dual
        </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Query that retrieves all genes by organism -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneDumpQuery" isCacheable="true" excludeProjects="EuPathDB">
        <paramRef ref="organismParams.gff_organism" queryRef="organismVQ.withGenesGFF"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
                SELECT gf.source_id AS source_id,
                       '@PROJECT_ID@' as project_id
                FROM ApidbTuning.GeneAttributes gf, 
                     dots.NaSequence ns, 
                     ApidbTuning.GeneAttributes ga
                WHERE gf.na_sequence_id = ns.na_sequence_id
                  AND ns.taxon_id IN ($$gff_organism$$)
                  AND gf.source_id = ga.source_id
                  AND ga.project_id = '@PROJECT_ID@'
            ]]>
        </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--  plasmoDB 4.4 dataset-->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPlasmoDbDataset" doNotTest="true" includeProjects="PlasmoDB"
                 isCacheable="true">
        <paramRef ref="geneParams.plasmodb_4-4_dataset"/>
        <column name="project_id"/>
        <column name="source_id"  />
        <sql>
            <!-- keep order or genes but remove duplicates -->
            <![CDATA[
                SELECT imported.source_id, '@PROJECT_ID@' as project_id FROM (
                    SELECT ga.gene AS source_id, min(c.i) AS i
                    FROM cache$$plasmodb_4-4_dataset$$@apidb.cbilprod c,
                         apidb.plasmodb_genes@apidb.cbilprod pg,
                         ApidbTuning.GeneId ga
                    WHERE c.na_feature_id = pg.na_feature_id
                      AND lower(pg.source_id) = lower(ga.id)
                      AND ga.unique_mapping = 1
                    GROUP BY ga.gene) imported
                ORDER BY i
           ]]>
       </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Y2H Protein protein interaction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByProteinProteinInteraction" includeProjects="PlasmoDB,FungiDB"
         isCacheable="true">
        <paramRef ref="geneParams.single_gene_id" default="PFL0275w" includeProjects="PlasmoDB"/>
        <paramRef ref="geneParams.single_gene_id" default="YGR120C" includeProjects="FungiDB"/>
        <paramRef ref="geneParams.min_searches"/>
        <paramRef ref="geneParams.min_observed"/>
        <paramRef ref="geneParams.bait_or_prey"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="gene_source_id" />
        <column name="bait_start" />
        <column name="bait_end" />
        <column name="prey_start" />
        <column name="prey_end" />
        <column name="times_observed" />
        <column name="number_of_searches" />
        <column name="prey_number_of_baits" />
        <column name="bait_number_of_preys" />
        <column name="bait_or_prey" />
        <sql includeProjects="PlasmoDB,FungiDB">
            <![CDATA[
            SELECT * FROM
               (SELECT pf.source_id, '@PROJECT_ID@' as project_id, pf.source_id as gene_source_id, bait_start, bait_end, prey_start, prey_end,
                       times_observed, number_of_searches,
                       (select distinct prey_number_of_baits
                         from apidb.geneinteraction igi
                         where igi.bait_gene_feature_id = pf.na_feature_id) AS prey_number_of_baits,
                       bait_number_of_preys, 'bait' as bait_or_prey
                FROM ApidbTuning.GeneId ga, ApidbTuning.GeneAttributes bf, ApidbTuning.GeneAttributes pf,
                     dots.ExternalNaSequence ens, apidb.GeneInteraction gi
                WHERE lower($$single_gene_id$$) = lower(ga.id)
                  AND ga.gene = bf.source_id
                  AND gi.number_of_searches >= $$min_searches$$
                  AND gi.times_observed >= $$min_observed$$
                  AND bf.na_feature_id = gi.bait_gene_feature_id
                  AND gi.prey_gene_feature_id = pf.na_feature_id
                  AND pf.na_sequence_id = ens.na_sequence_id
                UNION
                SELECT bf.source_id, '@PROJECT_ID@' as project_id, bf.source_id as gene_source_id, bait_start, bait_end, prey_start, prey_end,
                       times_observed, number_of_searches, prey_number_of_baits,
                       (select distinct bait_number_of_preys
                         from apidb.geneinteraction igi
                         where igi.prey_gene_feature_id = bf.na_feature_id) AS bait_number_of_preys, 'prey' as bait_or_prey
                FROM ApidbTuning.GeneId ga, ApidbTuning.GeneAttributes bf, ApidbTuning.GeneAttributes pf,
                     dots.ExternalNaSequence ens,  apidb.GeneInteraction gi
                WHERE lower($$single_gene_id$$) = lower(ga.id)
                  AND ga.gene = pf.source_id
                  AND gi.number_of_searches >= $$min_searches$$
                  AND gi.times_observed >= $$min_observed$$
                  AND bf.na_feature_id = gi.bait_gene_feature_id
                  AND gi.prey_gene_feature_id = pf.na_feature_id
                  AND bf.na_sequence_id = ens.na_sequence_id)
            WHERE ($$bait_or_prey$$ = bait_or_prey
                   OR $$bait_or_prey$$ = 'either')
           ]]>
       </sql>
    </sqlQuery>

   <processQuery name="GenesByProteinProteinInteraction" includeProjects="EuPathDB"
                        isCacheable="true" 
                        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.single_gene_id" default="PFL0275w" noTranslation="true"/>
        <paramRef ref="geneParams.min_searches"/>
        <paramRef ref="geneParams.min_observed"/>
        <paramRef ref="geneParams.bait_or_prey" quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="gene_source_id" width="50" wsName="gene_source_id"/>
        <wsColumn name="bait_start" width="32"/>
        <wsColumn name="bait_end" width="32"/>
        <wsColumn name="prey_start" width="32"/>
        <wsColumn name="prey_end" width="32"/>
        <wsColumn name="times_observed" width="32"/>
        <wsColumn name="number_of_searches" width="32"/>
        <wsColumn name="prey_number_of_baits" width="32"/>
        <wsColumn name="bait_number_of_preys" width="32"/>
        <wsColumn name="bait_or_prey" width="32"/>
     </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Expression Percentiles ToxoDB -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <sqlQuery name="GenesByGenericPercentile" doNotTest="true" includeProjects="AmoebaDB,ToxoDB,TriTrypDB,FungiDB"
          isCacheable='true'>
      <testParamValues includeProjects="TriTrypDB" >
	<paramValue name="samples_percentile_generic">T.brucei bloodstream long slender (Antat1.1)</paramValue>
      </testParamValues>
      <testParamValues includeProjects="ToxoDB" >
	<paramValue name="samples_percentile_generic">oocyst - d0 unsporulated</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.profileset_generic"/>
       <paramRef ref="geneParams.samples_percentile_generic"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.any_or_all"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="max_percentile_chosen" />
       <column name="min_percentile_chosen" />
       <sql>
            <![CDATA[
           select ga.source_id, 
                   '@PROJECT_ID@' as project_id,
                   max(round(profile_min_max.max_value, 1)) as max_percentile_chosen,
                   min(round(profile_min_max.min_value, 1)) as min_percentile_chosen
           from ( select p.source_id, pen.profile_element_name_id
                  from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
                  where ps.profile_set_id = pen.profile_set_id
                   and ps.profile_set_id = p.profile_set_id
                   and pe.profile_id = p.profile_id
                   and pe.element_order = pen.element_order
                   and pen.profile_element_name_id in ( $$samples_percentile_generic$$ )
                   and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
                  group by p.source_id, pen.profile_element_name_id
                ) profile, ApidbTuning.GeneAttributes ga,
                ( select p.source_id, min(pe.value) as min_value, max(pe.value) as max_value
                  from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
                  where ps.profile_set_id = pen.profile_set_id
                   and ps.profile_set_id = p.profile_set_id 
                   and pe.profile_id = p.profile_id
                   and pe.element_order = pen.element_order
                   and  pen.profile_element_name_id in ( $$samples_percentile_generic$$ )
                  group by p.source_id
                ) profile_min_max
           where ga.source_id = profile.source_id
             and ga.source_id = profile_min_max.source_id
             and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
           group by ga.source_id
           having '$$any_or_all$$' = 'any' OR count(*) = (select count(*) as total from apidb.profileelementname where profile_element_name_id in ( $$samples_percentile_generic$$ ))
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByGenericPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.profileset_generic"/>
       <paramRef ref="geneParams.samples_percentile_generic"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.any_or_all"/>
       <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="min_percentile_chosen" width="32" wsName="min_percentile_chosen"/>
       <wsColumn name="max_percentile_chosen" width="32" wsName="max_percentile_chosen"/>
    </processQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Expression Percentiles TriTrypDB -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <sqlQuery name="GenesByExpressionPercentBrucei5stg"  includeProjects="TriTrypDB"
          isCacheable='true'>
       <paramRef ref="geneParams.expressionPercentileSampleBrucei5stg"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select  ga.source_id, '@PROJECT_ID@' as project_id,max(round(pe.value,1))as percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where ps.profile_set_id = pen.profile_set_id
            and ga.source_id = p.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and  pen.profile_element_name_id in ( $$expressionPercentileSampleBrucei5stg$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by ga.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpressionPercentBrucei5stg" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.expressionPercentileSampleBrucei5stg"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="percentile"/>
    </processQuery>   


    <sqlQuery name="GenesByExpressionPercentileInfantum"  includeProjects="TriTrypDB"
          isCacheable='true'>
      <testParamValues>
	<paramValue name="expressionPercentileSampleInfantum">2.5 hr</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.expressionPercentileExptsInfantum"/>
       <paramRef ref="geneParams.expressionPercentileSampleInfantum"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select ga.source_id, '@PROJECT_ID@' as project_id,max(round(pe.value,1))as percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where ps.profile_set_id = pen.profile_set_id
            and ga.source_id = p.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.profile_set_id = $$expressionPercentileExptsInfantum$$ 
            and  pen.profile_element_name_id in ( $$expressionPercentileSampleInfantum$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by ga.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpressionPercentileInfantum" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
      <testParamValues>
	<paramValue name="expressionPercentileSampleInfantum">2.5 hr</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.expressionPercentileExptsInfantum"/>
       <paramRef ref="geneParams.expressionPercentileSampleInfantum"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>   


    <sqlQuery name="GenesByExpressionPercentileTcruzi"  includeProjects="TriTrypDB"
          isCacheable='true'>
      <testParamValues>
	<paramValue name="expressionPercentileSampleCruzi">amastigotes</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.expressionPercentileExptsCruzi"/>
       <paramRef ref="geneParams.expressionPercentileSampleCruzi"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select ga.source_id, '@PROJECT_ID@' as project_id,max(round(pe.value,1))as percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where ps.profile_set_id = pen.profile_set_id
            and ga.source_id = p.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.profile_set_id = $$expressionPercentileExptsCruzi$$ 
            and  pen.profile_element_name_id in ( $$expressionPercentileSampleCruzi$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by ga.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpressionPercentileTcruzi" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
      <testParamValues>
	<paramValue name="expressionPercentileSampleCruzi">amastigotes</paramValue>
      </testParamValues>
       <paramRef ref="geneParams.expressionPercentileExptsCruzi"/>
       <paramRef ref="geneParams.expressionPercentileSampleCruzi"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>   


    <sqlQuery name="GenesByExpressionPercentileTbrucei"  includeProjects="TriTrypDB"
          isCacheable='true'>
      <testParamValues>
	<paramValue name="expressionPercentileSampleBrucei">sl</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.expressionPercentileExptsBrucei"/>
       <paramRef ref="geneParams.expressionPercentileSampleBrucei"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select p.source_id, '@PROJECT_ID@' as project_id,max(round(pe.value,1))as percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and p.source_id = ga.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.profile_set_id = $$expressionPercentileExptsBrucei$$ 
            and  pen.profile_element_name_id in ( $$expressionPercentileSampleBrucei$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by p.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpressionPercentileTbrucei" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
      <testParamValues>
	<paramValue name="expressionPercentileSampleBrucei">sl</paramValue>
      </testParamValues>
       <paramRef ref="geneParams.expressionPercentileExptsBrucei" quote="false"/>
       <paramRef ref="geneParams.expressionPercentileSampleBrucei" quote="false"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Expression Timing -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <sqlQuery name="GenesByRNASeqPfRBCFoldChange" includeProjects="PlasmoDB" 
              isCacheable="true">

        <paramRef ref="geneParams.RNA_rbc_pfal_fc_ref_pd"/>
        <paramRef ref="geneParams.RNA_rbc_pfal_fc_comp_pd"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir_up_down_only" quote="false"/>
        <paramRef ref="geneParams.group_operator"/>
        <paramRef ref="geneParams.minimum_percentile_value" default="25"/>
        <paramRef ref="geneParams.global_min_max"/>
        <paramRef ref="geneParams.apply_scaling"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change_average"/>
        <column name="fold_change_minmax"/>
        <column name="avg_ref"/>
        <column name="avg_comp"/>
        <column name="minmax_ref"/>
        <column name="minmax_comp"/>
        <sql>
          <![CDATA[
 select ref.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN (ref.average > comp.average)
                                THEN ((ref.average + .01)/(comp.average + .01))
                              WHEN (comp.average >= ref.average)
                              THEN -(comp.average + .01)/(ref.average + .01)
                  END),1) as fold_change_average,
                  round((CASE WHEN (ref.minmax > comp.minmax)
                                THEN ((ref.minmax + .01)/(comp.minmax + .01))
                              WHEN (comp.minmax >= ref.minmax)
                              THEN -(comp.minmax + .01)/(ref.minmax + .01)
                  END),1) as fold_change_minmax,
                          round(ref.average,2) as avg_ref,
        round(comp.average,2) as avg_comp,round(ref.minmax,2) as minmax_ref,
        round(comp.minmax,2) as minmax_comp
 from (
 select * from (
 select source_id, 
 CASE WHEN $$group_operator$$ = 'average'  THEN avg(value) WHEN '$$regulated_dir_up_down_only$$' = '+' THEN min(value) ELSE max(value) END as groupval,
 CASE WHEN $$group_operator$$ = 'average'  THEN avg(percentile) WHEN '$$regulated_dir_up_down_only$$' = '+' THEN min(percentile) ELSE max(percentile) END as group_pc,
 CASE WHEN '$$regulated_dir_up_down_only$$' = '+' THEN min(value) ELSE max(value) END as minmax,
 avg(value) as average, sum(min_expr) as sum_min_expr, sum(max_expr) as sum_max_expr
 from  (select p.source_id,pe.value * $$apply_scaling$$ as value, pepc.value as percentile,
        CASE WHEN pen.name = p.time_of_min_expr || 'h' THEN 1 ELSE 0 END as min_expr,
        CASE WHEN pen.name = p.time_of_max_expr || 'h' THEN 1 ELSE 0 END as max_expr
  from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe, apidb.profileset pspc, apidb.profile ppc, apidb.profileelement pepc, apidb.nextgenseq_scaling sc
 where pen.profile_element_name_id in ($$RNA_rbc_pfal_fc_ref_pd$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 and sc. exp_name = 'Stunnenberg_iRBC'
 and sc.sample_name = pen.name
 and pspc.name = 'Percents of P. falciparum Stunnenberg mRNA Seq data'
 and pspc.profile_set_id = ppc.profile_set_id
 and ppc.profile_id = pepc.profile_id
 and p.source_id = ppc.source_id
 and pen.element_order = pepc.element_order)
 group by source_id ) 
 where ($$global_min_max$$ = 'dont_care'
       or ('$$regulated_dir_up_down_only$$' = '+'
       and $$global_min_max$$ = 'max')
       or ('$$regulated_dir_up_down_only$$' = '-'
       and $$global_min_max$$ = 'min'))
  or ('$$regulated_dir_up_down_only$$' = '+'
      and sum_min_expr >= 1)
  or ('$$regulated_dir_up_down_only$$' = '-'
      and sum_max_expr >= 1)
 ) ref,
 (
 select * from (
 select source_id, 
 CASE WHEN $$group_operator$$ = 'average'  THEN avg(value) WHEN '$$regulated_dir_up_down_only$$' = '+' THEN max(value) ELSE min(value) END as groupval,
 CASE WHEN $$group_operator$$ = 'average'  THEN avg(percentile) WHEN '$$regulated_dir_up_down_only$$' = '+' THEN max(percentile) ELSE min(percentile) END as group_pc,
 CASE WHEN '$$regulated_dir_up_down_only$$' = '+' THEN max(value) ELSE min(value) END as minmax,
 avg(value) as average, sum(min_expr) as sum_min_expr, sum(max_expr) as sum_max_expr
 from  (select p.source_id,pe.value * $$apply_scaling$$ as value, pepc.value as percentile,
        CASE WHEN pen.name = p.time_of_min_expr || 'h' THEN 1 ELSE 0 END as min_expr,
        CASE WHEN pen.name = p.time_of_max_expr || 'h' THEN 1 ELSE 0 END as max_expr
   from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe, apidb.profileset pspc, apidb.profile ppc, apidb.profileelement pepc, apidb.nextgenseq_scaling sc
 where pen.profile_element_name_id in ($$RNA_rbc_pfal_fc_comp_pd$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 and sc. exp_name = 'Stunnenberg_iRBC'
 and sc.sample_name = pen.name
 and pspc.name = 'Percents of P. falciparum Stunnenberg mRNA Seq data'
 and pspc.profile_set_id = ppc.profile_set_id
 and ppc.profile_id = pepc.profile_id
 and p.source_id = ppc.source_id
 and pen.element_order = pepc.element_order)
 group by source_id )
 where ($$global_min_max$$ = 'dont_care'
       or ('$$regulated_dir_up_down_only$$' = '+'
       and $$global_min_max$$ = 'min')
       or ('$$regulated_dir_up_down_only$$' = '-'
       and $$global_min_max$$ = 'max'))
  or ('$$regulated_dir_up_down_only$$' = '+'
      and sum_max_expr >= 1)
  or ('$$regulated_dir_up_down_only$$' = '-'
      and sum_min_expr >= 1)
 ) comp, ApidbTuning.GeneAttributes ga
 where ref.source_id = comp.source_id
 and ref.source_id = ga.source_id
 and ga.gene_type = 'protein coding'
 and CASE WHEN '$$regulated_dir_up_down_only$$' = '+' THEN comp.group_pc ELSE ref.group_pc END >= $$minimum_percentile_value$$
 and  $$regulated_dir_up_down_only$$ (
              case when (ref.groupval > comp.groupval)
                  then ((ref.groupval + .01)/(comp.groupval + .01))
                  when (comp.groupval >= ref.groupval)
                  then -(comp.groupval + .01)/(ref.groupval + .01)
                  end ) >= CASE WHEN $$fold_change$$ >= 1 THEN $$fold_change$$ ELSE -100000 END
           ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByRNASeqPfRBCFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.RNA_rbc_pfal_fc_ref_pd"  quote="false"/>
        <paramRef ref="geneParams.RNA_rbc_pfal_fc_comp_pd"  quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir_up_down_only" quote="false"/>
        <paramRef ref="geneParams.group_operator" quote="false"/>
        <paramRef ref="geneParams.minimum_percentile_value"/>
        <paramRef ref="geneParams.global_min_max" quote="false"/>
        <paramRef ref="geneParams.apply_scaling"/>
        <wsColumn name="project_id" width="20"/>
        <wsColumn name="source_id" width="50"/>
        <wsColumn name="fold_change_average"/>
        <wsColumn name="fold_change_minmax"/>
        <wsColumn name="avg_ref"/>
        <wsColumn name="avg_comp"/>
        <wsColumn name="minmax_ref"/>
        <wsColumn name="minmax_comp"/>
    </processQuery>



    <sqlQuery name="GenesByRNASeqPfRBCPercentile"  includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.exprnPercentilePfRBCRnaSeqTP"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select distinct p.source_id, '@PROJECT_ID@' as project_id, max(round(pe.value,2))as percentile
           from apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and p.source_id = ga.source_id
            and ga.gene_type = 'protein coding'
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and  pen.profile_element_name_id in ( $$exprnPercentilePfRBCRnaSeqTP$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by p.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByRNASeqPfRBCPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.exprnPercentilePfRBCRnaSeqTP"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>   







    <sqlQuery name="GenesByRNASeqPfFoldChange" includeProjects="PlasmoDB" 
              isCacheable="true">

        <paramRef ref="geneParams.RNA_pfal_fc_two_pd"/>
        <paramRef ref="geneParams.RNA_pfal_fc_one_pd"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.minimum_percentile_value" default="50"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
        <sql>
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN (one.average >= two.average)
                                THEN (one.average + .01)/(two.average + .01)
                              WHEN (two.average > one.average)
                              THEN -((two.average + .01)/(one.average + .01))
                  END),1) as fold_change,
                          round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, pe.value as average,pepc.value as percentile
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe, apidb.profileset pspc, apidb.profile ppc, apidb.profileelement pepc
 where pen.profile_element_name_id = $$RNA_pfal_fc_one_pd$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 and pspc.name = 'Percents of P. falciparum duffy mRNA Seq data'
 and pspc.profile_set_id = ppc.profile_set_id
 and ppc.profile_id = pepc.profile_id
 and p.source_id = ppc.source_id
 and pen.element_order = pepc.element_order ) one,
 (
 select p.source_id, pe.value as average,pepc.value as percentile
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe, apidb.profileset pspc, apidb.profile ppc, apidb.profileelement pepc
 where pen.profile_element_name_id = $$RNA_pfal_fc_two_pd$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 and pspc.name = 'Percents of P. falciparum duffy mRNA Seq data'
 and pspc.profile_set_id = ppc.profile_set_id
 and ppc.profile_id = pepc.profile_id
 and p.source_id = ppc.source_id
 and pen.element_order = pepc.element_order ) two, ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and one.source_id = ga.source_id
 and ga.gene_type = 'protein coding'
 and  $$regulated_dir$$ ( CASE WHEN (one.average >= two.average and one.percentile >= $$minimum_percentile_value$$)
                                THEN (one.average + .01)/(two.average + .01)
                              WHEN (two.average > one.average and two.percentile >= $$minimum_percentile_value$$)
                              THEN -((two.average + .01)/(one.average + .01))
                  end ) >= CASE WHEN $$fold_change$$ >= 1 THEN $$fold_change$$ ELSE -10000 END
           ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByRNASeqPfFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        
        <paramRef ref="geneParams.RNA_pfal_fc_two_pd" quote="false"/>
        <paramRef ref="geneParams.RNA_pfal_fc_one_pd" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.minimum_percentile_value"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>


    <sqlQuery name="GenesByRNASeqPfPercentile"  includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.expressionPercentilePfSampleRnaSeq"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select distinct p.source_id, '@PROJECT_ID@' as project_id, max(round(pe.value * 100 ,2))as percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and p.source_id = ga.source_id
            and ga.gene_type = 'protein coding'
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.name = 'Percents of P.falciparum duffy mRNA Seq data'
            and  pen.profile_element_name_id in ( $$expressionPercentilePfSampleRnaSeq$$ )
            and 100 * pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by p.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByRNASeqPfPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.expressionPercentileSampleRnaSeq"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>   


    <sqlQuery name="GenesByRNASeqFoldChange" includeProjects="TriTrypDB" 
              isCacheable="true">
      <testParamValues>
	<paramValue name="RNA_tb_fc_one_pd">BF_All.min</paramValue>
	<paramValue name="RNA_tb_fc_two_pd">PF_WT.min</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.RNA_tb_fc_two_pd"/>
        <paramRef ref="geneParams.RNA_tb_fc_one_pd"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="TriTrypDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN (one.average >= two.average)
                                THEN (one.average + .01)/(two.average + .01)
                              WHEN (two.average > one.average)
                              THEN -((two.average + .01)/(one.average + .01))
                  END),1) as fold_change,
                          round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$RNA_tb_fc_one_pd$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$RNA_tb_fc_two_pd$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two, ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and one.source_id = ga.source_id
 and ga.gene_type = 'protein coding'
 and  $$regulated_dir$$ (
                              CASE WHEN (one.average >= two.average)
                                THEN (one.average + .01)/(two.average + .01)
                              WHEN (two.average > one.average)
                                THEN -((two.average + .01)/(one.average + .01))
                  end ) >= $$fold_change$$
           ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByRNASeqFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="RNA_tb_fc_one_pd">BF_All.min</paramValue>
	<paramValue name="RNA_tb_fc_two_pd">PF_WT.min</paramValue>
      </testParamValues>
        
        <paramRef ref="geneParams.RNA_tb_fc_two_pd" quote="false"/>
        <paramRef ref="geneParams.RNA_tb_fc_one_pd" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>

    <sqlQuery name="GenesByTgVegRNASeqFoldChange" includeProjects="ToxoDB" 
              isCacheable="true"  doNotTest="true">
      <testParamValues>
	<paramValue name="RNASeq_reference_sample">Day3</paramValue>
	<paramValue name="RNASeq_comparison_sample">Day4</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.RNASeq_sample_organism" quote="false"/>
        <paramRef ref="geneParams.RNASeq_reference_sample" quote="false"/>
        <paramRef ref="geneParams.RNASeq_comparison_sample" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN (one.average >= two.average)
                                THEN (one.average + .01)/(two.average + .01)
                              WHEN (two.average > one.average)
                              THEN -((two.average + .01)/(one.average + .01))
                  END),1) as fold_change,
                          round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$RNASeq_reference_sample$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 and p.profile_set_id in ($$RNASeq_sample_organism$$)
 group by p.source_id ) two,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$RNASeq_comparison_sample$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and p.profile_set_id in ($$RNASeq_sample_organism$$)
 and pe.element_order = pen.element_order
 group by p.source_id ) one, ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and one.source_id = ga.source_id
 and ga.gene_type = 'protein coding'
 and  $$regulated_dir$$ (
                              CASE WHEN (one.average >= two.average)
                                THEN (one.average + .01)/(two.average + .01)
                              WHEN (two.average > one.average)
                                THEN -((two.average + .01)/(one.average + .01))
                  end ) >= $$fold_change$$
           ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByTgVegRNASeqFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"  doNotTest="true">
      <testParamValues>
	<paramValue name="RNASeq_reference_sample">Day3</paramValue>
	<paramValue name="RNASeq_comparison_sample">Day4</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.RNASeq_sample_organism" quote="false"/>
        <paramRef ref="geneParams.RNASeq_reference_sample" quote="false"/>
        <paramRef ref="geneParams.RNASeq_comparison_sample" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
    </processQuery>


    <sqlQuery name="GenesByRNASeqPercentile"  includeProjects="TriTrypDB,ToxoDB"
          isCacheable='true'>
       <paramRef includeProjects="ToxoDB" ref="geneParams.RNASeq_sample_organism_pct"/>
       <paramRef ref="geneParams.expressionPercentileSampleRnaSeq"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql includeProjects="TriTrypDB">
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select distinct p.source_id, '@PROJECT_ID@' as project_id, max(round(pe.value,2))as percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and p.source_id = ga.source_id
            and ga.gene_type = 'protein coding'
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.name = 'T.brucei George Cross RNA Sequence min-Profiles Percentile'
            and  pen.profile_element_name_id in ( $$expressionPercentileSampleRnaSeq$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by p.source_id
            ]]>
          </sql>
       <sql includeProjects="ToxoDB">
            <![CDATA[
           select distinct p.source_id, '@PROJECT_ID@' as project_id, max(round(pe.value,2))as percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and p.source_id = ga.source_id
            and ga.gene_type = 'protein coding'
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.profile_set_id in ( $$RNASeq_sample_organism_pct$$ )
            and pen.profile_element_name_id in ( $$expressionPercentileSampleRnaSeq$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by p.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByRNASeqPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.expressionPercentileSampleRnaSeq"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>   




    <sqlQuery name="GenesByMicroArrPageLogValue" includeProjects="TriTrypDB" 
              isCacheable="true">
      <testParamValues>
	<paramValue name="life_cyc_cruzi_ref">amastigotes</paramValue>
	<paramValue name="life_cyc_cruzi_cmp">epimastigotes</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.life_cyc_cruzi_ref"/>  
        <paramRef ref="geneParams.life_cyc_cruzi_cmp"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="confidence"/>
      <sql includeProjects="TriTrypDB">
          <![CDATA[
select '@PROJECT_ID@' as project_id,one.source_id,
                  round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
       de.confidence as confidence
 from
  (select  p.source_id as source_id,
           pe.value as average,
           lgl.logical_group_id
   from    apidb.profile p,
           apidb.profileelement pe,
           apidb.profileelementname pen,
           rad.logicalgrouplink lgl
  where    p.profile_set_id = pen.profile_set_id
    and      pe.profile_id = p.profile_id
    and      pe.element_order = pen.element_order
    and      pen.profile_element_name_id in ($$life_cyc_cruzi_cmp$$)
    and      lgl.row_id = pen.profile_element_name_id
  ) one,
 (select  p.source_id as source_id,
           pe.value as average,
           lgl.logical_group_id
   from    apidb.profile p,
           apidb.profileelement pe,
           apidb.profileelementname pen,
           rad.logicalgrouplink lgl
  where    p.profile_set_id = pen.profile_set_id
    and      pe.profile_id = p.profile_id
    and      pe.element_order = pen.element_order
    and      pen.profile_element_name_id in ($$life_cyc_cruzi_ref$$)
    and      lgl.row_id = pen.profile_element_name_id
  ) two,
   rad.analysisinput ai,
   ApidbTuning.GeneAttributes ga,
   rad.differentialexpression de
where one.source_id = two.source_id
 and one.logical_group_id = two.logical_group_id
 and  ai.logical_group_id = one.logical_group_id
 and  ai.analysis_id = de.analysis_id
 and  de.row_id = ga.na_feature_id
 and  one.source_id = ga.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  de.confidence >= $$confidence$$
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPageLogValue" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <testParamValues>
	<paramValue name="life_cyc_cruzi_ref">amastigotes</paramValue>
	<paramValue name="life_cyc_cruzi_cmp">epimastigotes</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.life_cyc_cruzi_ref"/> 
        <paramRef ref="geneParams.life_cyc_cruzi_cmp"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="confidence" wsName="confidence"/>
    </processQuery>





    <sqlQuery name="GenesByMicroArrPageNonLogValue" includeProjects="TriTrypDB" 
              isCacheable="true">
      <testParamValues>
	<paramValue name="life_cyc_brucei_ref">bf</paramValue>
	<paramValue name="life_cyc_brucei_cmp">sl</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.life_cyc_brucei_ref"/>  
        <paramRef ref="geneParams.life_cyc_brucei_cmp"/>
        <paramRef ref="geneParams.fold_change" default="1.5"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="confidence"/>
      <sql includeProjects="TriTrypDB">
          <![CDATA[
select '@PROJECT_ID@' as project_id,one.source_id,
                  round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
       de.confidence as confidence
 from
  (select  p.source_id as source_id,
           pe.value as average,
           lgl.logical_group_id
   from    apidb.profile p,
           apidb.profileelement pe,
           apidb.profileelementname pen,
           rad.logicalgrouplink lgl
  where    p.profile_set_id = pen.profile_set_id
    and      pe.profile_id = p.profile_id
    and      pe.element_order = pen.element_order
    and      pen.profile_element_name_id =$$life_cyc_brucei_cmp$$ 
    and      lgl.row_id = pen.profile_element_name_id
  ) one,
 (select  p.source_id as source_id,
           pe.value as average,
           lgl.logical_group_id
   from    apidb.profile p,
           apidb.profileelement pe,
           apidb.profileelementname pen,
           rad.logicalgrouplink lgl
  where    p.profile_set_id = pen.profile_set_id
    and      pe.profile_id = p.profile_id
    and      pe.element_order = pen.element_order
    and      pen.profile_element_name_id = $$life_cyc_brucei_ref$$
    and      lgl.row_id = pen.profile_element_name_id
  ) two,
   rad.analysisinput ai,
   ApidbTuning.GeneAttributes ga,
   rad.differentialexpression de
where one.source_id = two.source_id
 and one.logical_group_id = two.logical_group_id
 and  ai.logical_group_id = one.logical_group_id
 and  ai.analysis_id = de.analysis_id
 and  de.row_id = ga.na_feature_id
 and  one.source_id = ga.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  de.confidence >= $$confidence$$
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPageNonLogValue" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="life_cyc_brucei_ref">bf</paramValue>
	<paramValue name="life_cyc_brucei_cmp">sl</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.life_cyc_brucei_ref"/>  
        <paramRef ref="geneParams.life_cyc_brucei_cmp"/>
        <paramRef ref="geneParams.fold_change" default="1.5"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="confidence" wsName="confidence"/>
    </processQuery>





    <sqlQuery name="GenesByMicroArrPagePreComparedPctLm" includeProjects="TriTrypDB" 
              isCacheable="true">

       <paramRef ref="geneParams.PaGE_comparisons_pct_Lm" />
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select ga.source_id, '@PROJECT_ID@' as project_id,max(round(pe.value,1))as percentile
           from   apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and ga.source_id = p.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and pen.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ( $$PaGE_comparisons_pct_Lm$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by ga.source_id
         ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPagePreComparedPctLm" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="geneParams.PaGE_comparisons_pct_Lm"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>





    <sqlQuery name="GenesByMicroArrPagePreComparedPctLi" includeProjects="TriTrypDB" 
              isCacheable="true">

       <paramRef ref="geneParams.PaGE_comparisons_pct_Li" />
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select ga.source_id, '@PROJECT_ID@' as project_id,max(round(pe.value,1))as percentile
           from   apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and ga.source_id = p.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and pen.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ( $$PaGE_comparisons_pct_Li$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by ga.source_id
         ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPagePreComparedPctLi" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="geneParams.PaGE_comparisons_pct_Li"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>






    <sqlQuery name="GenesByMicroArrPagePreComparedLm" includeProjects="TriTrypDB" 
              isCacheable="true">

        <paramRef ref="geneParams.PaGE_comparisons_Lm"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="confidence"/>

      <sql includeProjects="TriTrypDB">
          <![CDATA[
           select '@PROJECT_ID@' as project_id, 
                   ga.source_id as source_id,
                   round(d.fold_change, 1) as fold_change, 
                   d.confidence
          from rad.differentialexpression d, 
               Core.tableInfo t ,
               ApidbTuning.GeneAttributes ga, 
               rad.analysis a
          where ga.na_feature_id = d.row_id
           and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
           and t.table_id = d.table_id
           and a.analysis_id = d.analysis_id
           and t.name = 'GeneFeature'
           and $$regulated_dir$$(d.fold_change) >= $$fold_change$$
           and d.confidence >= $$confidence$$
           and a.analysis_id = $$PaGE_comparisons_Lm$$ 
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPagePreComparedLm" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.PaGE_comparisons_Lm"/> 
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="confidence" wsName="confidence"/>
    </processQuery>



    <sqlQuery name="GenesByMicroArrPagePreComparedLi" includeProjects="TriTrypDB" 
              isCacheable="true">

        <paramRef ref="geneParams.PaGE_comparisons_Li"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="confidence"/>

      <sql includeProjects="TriTrypDB">
          <![CDATA[
           select '@PROJECT_ID@' as project_id, 
                   ga.source_id as source_id,
                   round(d.fold_change, 1) as fold_change, 
                   d.confidence
          from rad.differentialexpression d, 
               Core.tableInfo t ,
               ApidbTuning.GeneAttributes ga, 
               rad.analysis a
          where ga.na_feature_id = d.row_id
           and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
           and t.table_id = d.table_id
           and a.analysis_id = d.analysis_id
           and t.name = 'GeneFeature'
           and $$regulated_dir$$(d.fold_change) >= $$fold_change$$
           and d.confidence >= $$confidence$$
           and a.analysis_id = $$PaGE_comparisons_Li$$ 
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPagePreComparedLi" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.PaGE_comparisons_Li"/> 
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="confidence" wsName="confidence"/>
    </processQuery>





    <sqlQuery name="GenesByMicroArrPageTbHeatShock" includeProjects="TriTrypDB" 
              isCacheable="true">

        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="confidence"/>

      <sql includeProjects="TriTrypDB">
          <![CDATA[
           select '@PROJECT_ID@' as project_id, 
                   ga.source_id as source_id,
                   round(d.fold_change, 1) as fold_change, 
                   d.confidence
          from rad.differentialexpression d, 
               Core.tableInfo t ,
               ApidbTuning.GeneAttributes ga, 
               rad.analysis a
          where ga.na_feature_id = d.row_id
           and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
           and t.table_id = d.table_id
           and a.analysis_id = d.analysis_id
           and t.name = 'GeneFeature'
           and $$regulated_dir$$(d.fold_change) >= $$fold_change$$
           and d.confidence >= $$confidence$$
           and a.name = 'T. brucei under heat shock page analysis' 
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPageTbHeatShock" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="confidence" wsName="confidence"/>
    </processQuery>



    <sqlQuery name="GenesByMicroArrPctTbHeatShock" includeProjects="TriTrypDB" 
              isCacheable="true">

       <paramRef ref="geneParams.PaGE_HeatShock_pct_Tb" />
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select ga.source_id, '@PROJECT_ID@' as project_id,max(round(pe.value,1))as percentile
           from   apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and ga.source_id = p.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and pen.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ( $$PaGE_HeatShock_pct_Tb$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by ga.source_id
         ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPctTbHeatShock" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="geneParams.PaGE_HeatShock_pct_Tb" />
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>




    <sqlQuery name="GenesByMicroArrPctTbDHH1" includeProjects="TriTrypDB" 
              isCacheable="true">

       <paramRef ref="geneParams.PaGE_comparisons_pct_Tb" />
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select ga.source_id, '@PROJECT_ID@' as project_id,max(round(pe.value,1))as percentile
           from   apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and ga.source_id = p.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and pen.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ( $$PaGE_comparisons_pct_Tb$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by ga.source_id
         ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPctTbDHH1" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="geneParams.PaGE_comparisons_pct_Tb"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="project_id"/>
    </processQuery>






    <sqlQuery name="GenesByMicroArrPageTbDHH1" includeProjects="TriTrypDB" 
              isCacheable="true">

        <paramRef ref="geneParams.PaGE_comparisons_Tb_DHH1"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="confidence"/>

      <sql includeProjects="TriTrypDB">
          <![CDATA[
           select '@PROJECT_ID@' as project_id, 
                   ga.source_id as source_id,
                   round(d.fold_change, 1) as fold_change, 
                   d.confidence
          from rad.differentialexpression d, 
               Core.tableInfo t ,
               ApidbTuning.GeneAttributes ga, 
               rad.analysis a
          where ga.na_feature_id = d.row_id
           and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
           and t.table_id = d.table_id
           and a.analysis_id = d.analysis_id
           and t.name = 'GeneFeature'
           and $$regulated_dir$$(d.fold_change) >= $$fold_change$$
           and d.confidence >= $$confidence$$
           and a.analysis_id = $$PaGE_comparisons_Tb_DHH1$$ 
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrPageTbDHH1" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.PaGE_comparisons_Tb_DHH1"/> 
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.confidence"/> 
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="confidence" wsName="confidence"/>
    </processQuery>





    <sqlQuery name="GenesByMicroArrTbDRBD3" includeProjects="TriTrypDB" 
              isCacheable="true">
 
        <paramRef ref="geneParams.fold_change" default="1.5"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="confidence"/>

      <sql includeProjects="TriTrypDB">
          <![CDATA[
        select '@PROJECT_ID@' as project_id, 
               drbd.source_id, max(drbd.fold_change) as fold_change,
               max(drbd.confidence) as confidence
        from (
           select ga.source_id as source_id,
                   round(d.fold_change, 1) as fold_change, 
                   d.confidence
          from rad.differentialexpression d, 
               Core.tableInfo t ,
               ApidbTuning.GeneAttributes ga, 
               rad.analysis a
          where ga.na_feature_id = d.row_id
           and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
           and t.table_id = d.table_id
           and a.analysis_id = d.analysis_id
           and t.name = 'GeneFeature'
           and a.name like '%TbDRBD3%' 
           ) drbd
        group by drbd.source_id
        having max($$regulated_dir$$(drbd.fold_change)) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByMicroArrTbDRBD3" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
 
        <paramRef ref="geneParams.fold_change" default="1.5"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="confidence" wsName="confidence"/>
    </processQuery>


<!-- FungiDB Start  Microarray and Rna seq only differ by params-->
<!--
    <sqlQuery name="GenesByRnaSeqFoldChangeRo" includeProjects="FungiDB" 
              isCacheable="true">

        <paramRef ref="geneParams.ro_rnaseq_fc_two"/>
        <paramRef ref="geneParams.ro_rnaseq_fc_one"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.group_operator"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change_avg"/>
        <column name="fold_change_minmax"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
        <column name="max_group_one"/>
        <column name="max_group_two"/>
        <column name="min_group_one"/>
        <column name="min_group_two"/>

       <sqlParamValue name="shift">0.01</sqlParamValue>
      <sql>
          <![CDATA[
 select one.source_id, 
        '@PROJECT_ID@' as project_id,
        round((CASE WHEN (one.average /  (two.average + &&shift&&)) >= 1
                      THEN (one.average / (two.average + &&shift&&))
                    ELSE -1 * (two.average / (one.average + &&shift&&))
               END), 1) as fold_change_avg,
        round((CASE WHEN '$$regulated_dir$$' = '-'
                      THEN -1 * (two.maximum / (one.minimum + &&shift&&))
                    WHEN '$$regulated_dir$$' = '+'
                      THEN (one.maximum / (two.minimum + &&shift&&))
                    ELSE CASE WHEN (one.maximum / (two.minimum + &&shift&&)) >= (two.maximum / (one.minimum + &&shift&&))
                                THEN (one.maximum / (two.minimum + &&shift&&))
                              ELSE -1 * (two.maximum / (one.minimum + &&shift&&))
                         END
               END), 1) as fold_change_minmax,
        round(one.average, 2) as avg_group_one,
        round(two.average, 2) as avg_group_two,
        round(one.maximum, 2) as max_group_one,
        round(two.maximum, 2) as max_group_two,
        round(one.minimum, 2) as min_group_one,
        round(two.minimum, 2) as min_group_two
 from (
 select p.source_id, 
        avg(pe.value) as average,
        max(pe.value) as maximum,
        min(pe.value) as minimum
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ro_rnaseq_fc_one$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, 
        avg(pe.value) as average,
        max(pe.value) as maximum,
        min(pe.value) as minimum
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ro_rnaseq_fc_two$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 apidb.geneattributes ga
 where one.source_id = two.source_id
 and ga.source_id = two.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  (( $$group_operator$$ = 'average' AND $$regulated_dir$$ (
               case when one.average >= two.average
                    then (one.average / (two.average + &&shift&&))
                    else -( two.average / (one.average + &&shift&&))
                    end) >= $$fold_change$$ )
       OR
       ($$group_operator$$ = 'minmax' AND ($$regulated_dir$$ (one.maximum / (two.minimum + &&shift&&)) >= $$fold_change$$
                                        OR $$regulated_dir$$ ( -(two.maximum / (one.minimum + &&shift&&))) >= $$fold_change$$) ))

          ]]>
      </sql>

    </sqlQuery>
-->

    <!-- <sqlQuery name="GenesByMicroarrayTimeSeriesSc" includeProjects="FungiDB" 
              isCacheable="true">

     
        <paramRef ref="geneParams.sc_fc_profile" default="Expression profiling of saccharomyces cerevisiae s288c pheromone experiments"/>
        <paramRef ref="geneParams.sc_ts_fc_two"/>
        <paramRef ref="geneParams.sc_ts_fc_one"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.group_operator"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change_avg"/>
        <column name="fold_change_minmax"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
        <column name="max_group_one"/>
        <column name="max_group_two"/>
        <column name="min_group_one"/>
        <column name="min_group_two"/>
      <sql>
          <![CDATA[
 select one.source_id, 
        '@PROJECT_ID@' as project_id,
        round((CASE WHEN power(2, one.average - two.average) >= 1
                      THEN power(2, one.average - two.average)
                    ELSE -1 * (power(2, two.average - one.average))
               END), 1) as fold_change_avg,
        round((CASE WHEN '$$regulated_dir$$' = '-'
                      THEN -1 * power(2, two.maximum - one.minimum)
                    WHEN '$$regulated_dir$$' = '+'
                      THEN power(2, one.maximum - two.minimum)
                    ELSE CASE WHEN power(2, one.maximum - two.minimum) >= power(2, two.maximum - one.minimum)
                                THEN power(2, one.maximum - two.minimum)
                              ELSE -1 * power(2, two.maximum - one.minimum) 
                         END
               END), 1) as fold_change_minmax,
        round(one.average, 2) as avg_group_one,
        round(two.average, 2) as avg_group_two,
        round(one.maximum, 2) as max_group_one,
        round(two.maximum, 2) as max_group_two,
        round(one.minimum, 2) as min_group_one,
        round(two.minimum, 2) as min_group_two
 from (
 select p.source_id, 
        avg(pe.value) as average,
        max(pe.value) as maximum,
        min(pe.value) as minimum
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$sc_ts_fc_one$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, 
        avg(pe.value) as average,
        max(pe.value) as maximum,
        min(pe.value) as minimum
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$sc_ts_fc_two$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 apidb.geneattributes ga
 where one.source_id = two.source_id
 and ga.source_id = two.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  (( $$group_operator$$ = 'average' AND $$regulated_dir$$ (
               case when one.average >= two.average
                    then power(2, one.average - two.average)
                    else -( power(2, two.average - one.average))
                    end) >= $$fold_change$$ )
       OR
       ($$group_operator$$ = 'minmax' AND ($$regulated_dir$$ (power(2, one.maximum - two.minimum)) >= $$fold_change$$
                                        OR $$regulated_dir$$ ( -(power(2, two.maximum - one.minimum))) >= $$fold_change$$) ))

          ]]>
      </sql>

    </sqlQuery>
-->


    <sqlQuery name="GenesByRnaSeqPercentileRo"  includeProjects="FungiDB"
          isCacheable='true'>
       <paramRef ref="geneParams.ro_rnaseq_pct"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
            <![CDATA[
           select  p.source_id, '@PROJECT_ID@' as project_id, max(pe.value) as percentile 
           from apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where p.profile_set_id = pen.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ($$ro_rnaseq_pct$$)
            and pe.value BETWEEN $$min_expression_percentile$$
            and $$max_expression_percentile$$
           group by p.source_id 
            ]]>
          </sql>
    </sqlQuery>  
<!-- FungiDB END -->

    <sqlQuery name="GenesByTimeSeriesFoldChangeAlternate" includeProjects="ToxoDB" 
              isCacheable="true">

      <testParamValues>
	<paramValue name="ts_fc_one_pd">12 hours</paramValue>
	<paramValue name="ts_fc_two_pd">18 hours</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_profile_two_pd"/>
        <paramRef ref="geneParams.ts_fc_two_pd"/>
        <paramRef ref="geneParams.ts_fc_one_pd"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_one_pd$$)
 and pen.profile_set_id = $$ts_fc_profile_two_pd$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_two_pd$$)
 and pen.profile_set_id = $$ts_fc_profile_two_pd$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and ga.source_id = two.source_id
 and ga.gene_type = 'protein coding'
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByTimeSeriesFoldChangeAlternate" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="ts_fc_one_pd">12 hours</paramValue>
	<paramValue name="ts_fc_two_pd">18 hours</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_profile_two_pd"/>
        <paramRef ref="geneParams.ts_fc_two_pd" quote="false"/>
        <!-- paramRef ref="geneParams.ts_fc_profile_one_pd"/ -->
        <paramRef ref="geneParams.ts_fc_one_pd" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>





    <sqlQuery name="GenesByeQTLHaploGrpSimilarity" includeProjects="PlasmoDB" 
              isCacheable="true">

        <paramRef ref="geneParams.pf_gene_id" default="PFE1150w"/>
        <paramRef ref="geneParams.lod_score" default="1.5"/>
        <paramRef ref="geneParams.percentage_sim_haploblck"/>
        <!-- <paramRef ref="geneParams.any_or_all_hpgrp"/> -->
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="lod_score"/>
      <sql>
          <![CDATA[
            SELECT distinct source_id, '@PROJECT_ID@' as project_id, max(lod_score) as lod_score
            FROM   (select distinct ga.source_id,
                           CASE WHEN (gls.LOD_SCORE_EXP = 0) THEN to_char(gls.LOD_SCORE_MANT)
                           ELSE to_char(to_binary_double(gls.LOD_SCORE_MANT|| 'e' || gls.LOD_SCORE_EXP),'99.99EEEE') 
                           END as lod_score
                    from   apidbTuning.geneattributes ga, apidb.genefeaturelodscore  gls
                    where  gls.na_feature_id = ga.na_feature_id
                    and    to_binary_double(gls.LOD_SCORE_MANT || 'e' || gls.LOD_SCORE_EXP) >= $$lod_score$$
                    and    lower(ga.source_id) != lower($$pf_gene_id$$)
                    and    gls.HAPLOTYPE_BLOCK_NAME in (
                           select distinct HAPLOTYPE_BLOCK_NAME 
                           from   apidbTuning.geneattributes ga, apidb.genefeaturelodscore  gls
                           where  gls.na_feature_id = ga.na_feature_id 
                           and lower(ga.source_id) = lower($$pf_gene_id$$) 
                           and to_binary_double(LOD_SCORE_MANT || 'e' || LOD_SCORE_EXP) >= $$lod_score$$))
            GROUP BY source_id
            HAVING ((count(*)*100)/(select count(*) 
                                    from apidbTuning.geneattributes ga, apidb.genefeaturelodscore  gls
                                    where  gls.na_feature_id = ga.na_feature_id 
                                    and lower(ga.source_id) = lower($$pf_gene_id$$)
                                    and to_binary_double(LOD_SCORE_MANT || 'e' || LOD_SCORE_EXP) >= $$lod_score$$)) >= $$percentage_sim_haploblck$$
         ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByeQTLHaploGrpSimilarity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.pf_gene_id" default="PFE1150w"/>
        <paramRef ref="geneParams.lod_score" default="1.5"/>
        <paramRef ref="geneParams.percentage_sim_haploblck"/>
        <!-- <paramRef ref="geneParams.any_or_all_hpgrp"/> -->
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="lod_score" wsName="lod_score"/>
    </processQuery>




    <sqlQuery name="GenesByeQTLSegments" includeProjects="PlasmoDB" 
              isCacheable="true">

        <paramRef ref="geneParams.sequence_id" default="P.f. chromosome 11"/>
        <paramRef ref="sharedParams.start_point" default="11180"/>
        <paramRef ref="sharedParams.end_point_segment" default="1120683"/>
        <paramRef ref="geneParams.lod_score" default="1.5"/>
        <paramRef ref="geneParams.liberal_conservative"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="lod_score"/>
      <sql>
          <![CDATA[
           SELECT distinct source_id, '@PROJECT_ID@' as project_id, max(lod_score) as lod_score
           FROM   (SELECT  distinct ga.source_id,
                          CASE WHEN (gls.LOD_SCORE_EXP = 0) THEN to_char(gls.LOD_SCORE_MANT)
                               ELSE to_char(to_binary_double(gls.LOD_SCORE_MANT|| 'e' || gls.LOD_SCORE_EXP),'99.99EEEE') 
                          END as lod_score
                   FROM   dots.chromosomeelementfeature  cef, apidb.genefeaturelodscore  gls, 
                          apidbTuning.geneattributes ga, dots.externalnasequence ens, dots.nalocation nl  
                   WHERE  ens.source_id = $$sequence_id$$  
                   AND  cef.na_sequence_id = ens.na_sequence_id 
                   AND  nl.na_feature_id = cef.na_feature_id 
                   AND (($$liberal_conservative$$ = 'liberal' and nl.start_min <= $$end_point_segment$$  and nl.end_max >= $$start_point$$) 
                         OR ($$liberal_conservative$$ = 'conservative' and nl.start_max <= $$end_point_segment$$  and nl.end_min >= $$start_point$$))	
                   AND cef.name = gls.haplotype_block_name 
                   AND gls.na_feature_id = ga.na_feature_id
                   AND to_binary_double(gls.LOD_SCORE_MANT || 'e' || gls.LOD_SCORE_EXP) >= $$lod_score$$)
           GROUP BY source_id
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByeQTLSegments" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.sequence_id" default="P.f. chromosome 11"/>
        <paramRef ref="sharedParams.start_point" default="11180"/>
        <paramRef ref="sharedParams.end_point_segment" default="1120683"/>
        <paramRef ref="geneParams.lod_score" default="1.5"/>
        <paramRef ref="geneParams.liberal_conservative" />
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="lod_score" wsName="lod_score"/>
    </processQuery>





    <sqlQuery name="GenesByToxoCellCycleFoldChange" includeProjects="ToxoDB" 
              isCacheable="true">

      <testParamValues>
	<paramValue name="cc_fc_two_mw">10 HR</paramValue>
	<paramValue name="cc_fc_one_mw">12 HR</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.cc_fc_two_mw"/>
        <paramRef ref="geneParams.cc_fc_one_mw"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$cc_fc_one_mw$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id )two,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$cc_fc_two_mw$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and ga.source_id = two.source_id
 and ga.gene_type = 'protein coding'
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByToxoCellCycleFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="cc_fc_two_mw">10 HR</paramValue>
	<paramValue name="cc_fc_one_mw">12 HR</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.cc_fc_two_mw" quote="false"/>
        <paramRef ref="geneParams.cc_fc_one_mw" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>




  <sqlQuery name="GenesByGenericFoldChangeWithPvalue" includeProjects="TriTrypDB" 
              isCacheable="true" doNotTest="true">

      <paramRef ref="geneParams.profileset_generic_coverage"/>
      <paramRef ref="geneParams.regulated_dir_coverage" quote="false"/>
      <paramRef ref="geneParams.samples_fc_ref_generic_coverage"/>
      <paramRef ref="geneParams.samples_fc_comp_generic_coverage"/>
      <paramRef ref="geneParams.fold_change_cov"/>
      <paramRef ref="geneParams.p_value"/>
      <paramRef ref="geneParams.any_or_all_fc"/>
      <paramRef ref="geneParams.protein_coding_only"/>
      <column name="project_id"/>
      <column name="source_id"/>
      <column name="p_value_max" sortingColumn="max_exponent"/>
      <column name="max_exponent" />
      <column name="p_value_min" />
      <column name="fold_change_min"/>
      <column name="fold_change_avg"/>
      <column name="fold_change_max"/>
      <column name="avg_group_one"/>
      <column name="avg_group_two"/>
      <column name="max_group_one"/>
      <column name="max_group_two"/>
      <column name="min_group_one"/>
      <column name="min_group_two"/>

      <sqlParamValue name="isLogged" includeProjects="TriTrypDB">0</sqlParamValue>
      <sqlParamValue name="shift" includeProjects="TriTrypDB">1</sqlParamValue>

      <sql>
      <![CDATA[    select grp1.source_id,
                         '@PROJECT_ID@' as project_id,
                       CASE WHEN max(to_binary_double(de.pvalue_mant || 'e' || de.pvalue_exp)) > 0 
                            THEN to_char(max(to_binary_double(de.pvalue_mant || 'e' || de.pvalue_exp)),'99.99EEEE') 
                            ELSE to_char(0)
                       END  as p_value_max,
                       max(de.pvalue_exp) as max_exponent, 
                       CASE WHEN min(to_binary_double(de.pvalue_mant || 'e' || de.pvalue_exp)) > 0 
                            THEN to_char(min(to_binary_double(de.pvalue_mant || 'e' || de.pvalue_exp)),'99.99EEEE') 
                            ELSE to_char(0)
                       END  as p_value_min,
                       round(avg((CASE WHEN grp1.value / grp2.value >= 1
                                       THEN grp1.value / grp2.value
                                       ELSE -1 * (grp2.value  / grp1.value)
                                  END)),1) as fold_change_avg,
                       round(min((CASE WHEN grp1.value / grp2.value >= 1
                                       THEN grp1.value / grp2.value
                                       ELSE -1 * (grp2.value  / grp1.value)
                                  END)),1) as fold_change_min,
                       round(max((CASE WHEN grp1.value / grp2.value >= 1
                                       THEN grp1.value / grp2.value
                                       ELSE -1 * (grp2.value / grp1.value)
                                  END)),1) as fold_change_max,
                       round(max(grp1.value),1) as max_group_one,
                       round(min(grp1.value),1) as min_group_one,
                       round(avg(grp1.value),1) as avg_group_one,
                       round(max(grp2.value),1) as max_group_two,
                       round(min(grp2.value),1) as min_group_two,
                       round(avg(grp2.value),1) as avg_group_two        
                from   (select    p.source_id,
                                  pen.profile_element_name_id,
                                  CASE WHEN &&isLogged&& != 1 THEN pe.value + &&shift&& ELSE power(2, pe.value) END as value
                        from      apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
                        where     pen.profile_element_name_id in ($$samples_fc_comp_generic_coverage$$)
                        and       p.profile_set_id = pen.profile_set_id
                        and       pe.profile_id = p.profile_id
                        and       pe.element_order = pen.element_order                        
                        group by  p.source_id,pen.profile_element_name_id, pe.value) grp1,
                       (select    p.source_id,
                                  pen.profile_element_name_id,
                                  CASE WHEN &&isLogged&& != 1 THEN pe.value + &&shift&& ELSE power(2, pe.value) END as value
                        from      apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
                        where     pen.profile_element_name_id in ($$samples_fc_ref_generic_coverage$$)
                        and       p.profile_set_id = pen.profile_set_id
                        and       pe.profile_id = p.profile_id
                        and       pe.element_order = pen.element_order                        
                        group by  p.source_id,pen.profile_element_name_id, pe.value) grp2,
                       rad.logicalgrouplink lgl1,
                       rad.logicalgrouplink lgl2,   
                       ApidbTuning.GeneAttributes ga,
                       rad.analysisinput ai, 
                       rad.differentialexpression de
                where grp1.profile_element_name_id = lgl1.row_id
                and   grp2.profile_element_name_id = lgl2.row_id
                and   grp1.source_id = grp2.source_id
                and   ga.source_id = grp2.source_id
                and   lgl1.logical_group_id = lgl2.logical_group_id
                and   ai.logical_group_id = lgl1.logical_group_id
                and   ai.analysis_id = de.analysis_id
                and   de.row_id = ga.na_feature_id
                and   ($$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$) 
                and   (pvalue_mant is null or (to_binary_double(de.pvalue_mant || 'e' || de.pvalue_exp) <= $$p_value$$))
                and   ($$regulated_dir_coverage$$ ( grp1.value / grp2.value)  >= $$fold_change_cov$$
                      OR $$regulated_dir_coverage$$ (-(grp2.value / grp1.value)) >= $$fold_change_cov$$)
                group by grp1.source_id
                having '$$any_or_all_fc$$' = 'any' OR count(*) = (select count(*) as total from apidb.profileelementname where profile_element_name_id in ( $$samples_fc_comp_generic_coverage$$ ))
   ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByGenericFoldChangeWithPvalue" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <paramRef ref="geneParams.profileset_generic_coverage"/>
      <paramRef ref="geneParams.regulated_dir_coverage" quote="false"/>
      <paramRef ref="geneParams.samples_fc_ref_generic_coverage"/>
      <paramRef ref="geneParams.samples_fc_comp_generic_coverage"/>
      <paramRef ref="geneParams.fold_change_cov"/>
      <paramRef ref="geneParams.p_value"/>
      <paramRef ref="geneParams.any_or_all_fc"/>
      <paramRef ref="geneParams.protein_coding_only" quote="false"/>
     
      <wsColumn name="project_id" width="20" wsName="project_id"/>
      <wsColumn name="source_id" width="50" wsName="source_id"/>
      <wsColumn name="p_value_max" wsName="p_value_max"/>
      <wsColumn name="p_value_min" wsName="p_value_min"/>
      <wsColumn name="fold_change_avg" wsName="fold_change_avg"/>
      <wsColumn name="fold_change_max" wsName="fold_change_max"/>
      <wsColumn name="fold_change_min" wsName="fold_change_min"/>
      <wsColumn name="avg_group_one" wsName="avg_group_one"/>
      <wsColumn name="avg_group_two" wsName="avg_group_two"/>
      <wsColumn name="max_group_one" wsName="max_group_one"/>
      <wsColumn name="max_group_two" wsName="max_group_two"/>
      <wsColumn name="min_group_one" wsName="min_group_one"/>
      <wsColumn name="min_group_two" wsName="min_group_two"/>
    </processQuery>

  <sqlQuery name="GenesByGenericFoldChangeWithConfidence" includeProjects="AmoebaDB,ToxoDB" 
              isCacheable="true" doNotTest="true">

      <paramRef ref="geneParams.profileset_generic"/>
      <paramRef ref="geneParams.regulated_dir"/>
      <paramRef ref="geneParams.samples_fc_ref_generic"/>
      <paramRef ref="geneParams.samples_fc_comp_generic"/>
      <paramRef ref="geneParams.fold_change"/>
      <paramRef ref="geneParams.confidence"/>
      <paramRef ref="geneParams.any_or_all_fc"/>
      <paramRef ref="geneParams.protein_coding_only"/>
      <column name="project_id"/>
      <column name="source_id"/>
      <column name="confidence"/>
      <column name="fold_change"/>
      <column name="group_one_value"/>
      <column name="group_two_value"/>
      <column name="module"/>

      <sqlParamValue name="isLogged" includeProjects="AmoebaDB,ToxoDB">1</sqlParamValue>
      <sqlParamValue name="shift" includeProjects="AmoebaDB,ToxoDB">1</sqlParamValue>

      <sql>
      <![CDATA[    					
                       select distinct grp1.source_id,
                         '@PROJECT_ID@' as project_id,
                       de.confidence as confidence,
                       round((CASE WHEN grp1.value / grp2.value >= 1
                                  THEN grp1.value / grp2.value
                                  ELSE -1 * (grp2.value  / grp1.value)
                                  END),1) as fold_change,
                       round(grp1.value,1) as group_one_value,
                       round(grp2.value,1) as group_two_value,
                       grp2.module
                from   (select    p.source_id,
                                  pen.profile_element_name_id,
                                  CASE WHEN &&isLogged&& != 1 THEN pe.value + &&shift&& ELSE power(2, pe.value) END as value
                        from      apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
                        where     pen.profile_element_name_id = $$samples_fc_comp_generic$$
                        and       p.profile_set_id = pen.profile_set_id
                        and       pe.profile_id = p.profile_id
                        and       pe.element_order = pen.element_order) grp1,
                       (select    p.source_id,
                                  pen.profile_element_name_id,
                                  pgd.module,
                                  CASE WHEN &&isLogged&& != 1 THEN pe.value + &&shift&& ELSE power(2, pe.value) END as value
                        from      apidb.profileelementname pen, 
                                  apidb.profile p, apidb.profileelement pe,
                                  apidb.profileset ps, apidbTuning.profilegraphdescrip pgd
                        where     pen.profile_element_name_id = $$samples_fc_ref_generic$$
                        and       p.profile_set_id = pen.profile_set_id
                        and       pe.profile_id = p.profile_id
                        and       ps.profile_set_id = p.profile_set_id
                        and       pgd.profile_name = ps.name
                        and       pe.element_order = pen.element_order) grp2,
                       rad.logicalgrouplink lgl1,
                       rad.logicalgrouplink lgl2,   
                       ApidbTuning.GeneAttributes ga,
                       rad.analysisinput ai, 
                       rad.differentialexpression de
                where grp1.profile_element_name_id = lgl1.row_id
                and   grp2.profile_element_name_id = lgl2.row_id
                and   grp1.source_id = grp2.source_id
                and   ga.source_id = grp2.source_id
                and   lgl1.logical_group_id = lgl2.logical_group_id
                and   ai.logical_group_id = lgl1.logical_group_id
                and   ai.analysis_id = de.analysis_id
                and   de.row_id = ga.na_feature_id
                and   ($$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$) 
                and   (de.confidence is null or de.confidence >= $$confidence$$)
                and   ($$regulated_dir$$ (grp1.value / grp2.value)  >= $$fold_change$$
                      OR $$regulated_dir$$ (-(grp2.value / grp1.value)) >= $$fold_change$$)
                

   ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByGenericFoldChangeWithConfidence" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <paramRef ref="geneParams.profileset_generic"/>
      <paramRef ref="geneParams.regulated_dir"/>
      <paramRef ref="geneParams.samples_fc_ref_generic"/>
      <paramRef ref="geneParams.samples_fc_comp_generic"/>
      <paramRef ref="geneParams.fold_change"/>
      <paramRef ref="geneParams.confidence"/>
      <paramRef ref="geneParams.any_or_all_fc"/>
      <paramRef ref="geneParams.protein_coding_only" quote="false"/>
     
      <wsColumn name="project_id" width="20" wsName="project_id"/>
      <wsColumn name="source_id" width="50" wsName="source_id"/>
      <wsColumn name="confidence" wsName="confidence"/>
      <wsColumn name="fold_change" wsName="fold_change"/>
      <wsColumn name="group_one_value" wsName="group_one_value"/>
      <wsColumn name="group_two_value" wsName="group_two_value"/>
      <wsColumn name="module" wsName="module"/>
    </processQuery>				
				   

    <sqlQuery name="GenesByGenericFoldChange" includeProjects="AmoebaDB,ToxoDB,TriTrypDB,FungiDB,CryptoDB" 
              isCacheable="true" doNotTest="true">

      <testParamValues includeProjects="TriTrypDB" >
	<paramValue name="samples_fc_ref_generic">T.brucei bloodstream long slender (Antat1.1)</paramValue>
	<paramValue name="samples_fc_comp_generic">T.brucei bloodstream short stumpy (Antat1.1)</paramValue>
	<paramValue name="min_max_avg_ref">average1</paramValue>
	<paramValue name="min_max_avg_comp">average1</paramValue>
      </testParamValues>

      <testParamValues includeProjects="ToxoDB" >
	<paramValue name="samples_fc_ref_generic">0 HR</paramValue>
	<paramValue name="samples_fc_comp_generic">3 HR</paramValue>
	<paramValue name="min_max_avg_ref">average1</paramValue>
	<paramValue name="min_max_avg_comp">average1</paramValue>
      </testParamValues>


      <paramRef ref="geneParams.profileset_generic"/>
      <paramRef ref="geneParams.regulated_dir"/>
      <paramRef ref="geneParams.samples_fc_ref_generic"/>
      <paramRef ref="geneParams.min_max_avg_ref"/>
      <paramRef ref="geneParams.samples_fc_comp_generic"/>
      <paramRef ref="geneParams.min_max_avg_comp"/>
      <paramRef ref="geneParams.fold_change"/>
      <paramRef ref="geneParams.global_min_max"/>
      <paramRef ref="geneParams.protein_coding_only"/>
      <column name="project_id"/>
      <column name="source_id"/>
      <column name="fold_change_avg"/>
      <column name="fold_change_chosen"/>
      <column name="avg_group_one"/>
      <column name="avg_group_two"/>
      <column name="max_group_one"/>
      <column name="max_group_two"/>
      <column name="min_group_one"/>
      <column name="min_group_two"/>
      <column name="median_group_one"/>
      <column name="median_group_two"/>
      <column name="chose_group_one"/>
      <column name="chose_group_two"/>
      <column name="time_of_min_expr"/>
      <column name="time_of_max_expr"/>
      <column name="module" />

      <sqlParamValue name="isLogged">1</sqlParamValue>
      <sqlParamValue name="shift">0</sqlParamValue>

      <sql>
      <![CDATA[
      select one.source_id, 
             '@PROJECT_ID@' as project_id,
             round((CASE WHEN one.average / (two.average + &&shift&&) >= 1
                         THEN one.average / (two.average + &&shift&&)
                         ELSE -1 * (two.average  / (one.average + &&shift&&))
                     END), 1) as fold_change_avg,
             round((CASE WHEN one.chosen / two.chosen >= 1
                         THEN one.chosen / two.chosen
                         ELSE -1 * (two.chosen / one.chosen) 
                     END), 1) as fold_change_chosen,
             round(decode(one.average, 0, 0, log(2, one.average)), 2) as avg_group_one,
             round(decode(two.average, 0, 0, log(2, two.average)), 2) as avg_group_two,
             round(decode(one.maximum, 0, 0, log(2, one.maximum)), 2) as max_group_one,
             round(decode(two.maximum, 0, 0, log(2, two.maximum)), 2) as max_group_two,
             round(decode(one.minimum, 0, 0, log(2, one.minimum)), 2) as min_group_one,
             round(decode(two.minimum, 0, 0, log(2, two.minimum)), 2) as min_group_two,
             round(decode(one.median, 0, 0, log(2, one.median)), 2) as median_group_one,
             round(decode(two.median, 0, 0, log(2, two.median)), 2) as median_group_two,
             round(decode(one.chosen, 0, 0, log(2, one.chosen)), 2) as chose_group_one,
             round(decode(two.chosen, 0, 0, log(2, two.chosen)), 2) as chose_group_two,
             p.time_of_min_expr,
             p.time_of_max_expr,
             two.module
      from ( select p.source_id, 
                    CASE WHEN &&isLogged&& = 1 AND $$min_max_avg_comp$$ = 'minimum'
                         THEN power(2, min(pe.value))
                         WHEN &&isLogged&& = 1 AND $$min_max_avg_comp$$ = 'maximum'
                         THEN power(2, max(pe.value))
                         WHEN &&isLogged&& = 1 AND $$min_max_avg_comp$$ = 'average'
                         THEN power(2, avg(pe.value))
                         WHEN &&isLogged&& = 0 AND $$min_max_avg_comp$$ = 'minimum'
                         THEN min(pe.value) + &&shift&&
                         WHEN &&isLogged&& = 0 AND $$min_max_avg_comp$$ = 'maximum'
                         THEN max(pe.value) + &&shift&&
                         WHEN &&isLogged&& = 0 AND $$min_max_avg_comp$$ = 'average'
                         THEN avg(pe.value) + &&shift&&
                         WHEN &&isLogged&& = 0 AND $$min_max_avg_comp$$ = 'median'
                         THEN median(pe.value) + &&shift&&
                    END  as chosen,
                    decode(&&isLogged&&, 1, power(2, avg(pe.value)), avg(pe.value)) as average,
                    decode(&&isLogged&&, 1, power(2, max(pe.value)), max(pe.value)) as maximum,
                    decode(&&isLogged&&, 1, power(2, min(pe.value)), min(pe.value)) as minimum,
                    decode(&&isLogged&&, 1, power(2, median(pe.value)), median(pe.value)) as median,
                   CASE WHEN p.min_expression = min(pe.value)
                        THEN 1 else 0 
                   END as has_min_expression,
                   CASE WHEN p.max_expression = max(pe.value)
                        THEN 1 else 0 
                   END as has_max_expression
             from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
             where pen.profile_element_name_id in ($$samples_fc_comp_generic$$)
               and p.profile_set_id = pen.profile_set_id
               and pe.profile_id = p.profile_id
               and pe.element_order = pen.element_order
             group by p.source_id, p.min_expression, p.max_expression ) one,
           ( select p.source_id, 
                    CASE WHEN &&isLogged&& = 1 AND $$min_max_avg_ref$$ = 'minimum'
                         THEN power(2, min(pe.value))
                         WHEN &&isLogged&& = 1 AND $$min_max_avg_ref$$ = 'maximum'
                         THEN power(2, max(pe.value))
                         WHEN &&isLogged&& = 1 AND $$min_max_avg_ref$$ = 'average'
                         THEN power(2, avg(pe.value))
                         WHEN &&isLogged&& != 1 AND $$min_max_avg_ref$$ = 'minimum'
                         THEN min(pe.value) + &&shift&&
                         WHEN &&isLogged&& != 1 AND $$min_max_avg_ref$$ = 'maximum'
                         THEN max(pe.value) + &&shift&&
                         WHEN &&isLogged&& != 1 AND $$min_max_avg_ref$$ = 'average'
                         THEN avg(pe.value) + &&shift&&
                         WHEN &&isLogged&& != 1 AND $$min_max_avg_ref$$ = 'median'
                         THEN median(pe.value) + &&shift&&
                    END  as chosen,
                    decode(&&isLogged&&, 1, power(2, avg(pe.value)), avg(pe.value)) as average,
                    decode(&&isLogged&&, 1, power(2, max(pe.value)), max(pe.value)) as maximum,
                    decode(&&isLogged&&, 1, power(2, min(pe.value)), min(pe.value)) as minimum,
                    decode(&&isLogged&&, 1, power(2, median(pe.value)), median(pe.value)) as median,
                    CASE WHEN p.min_expression = min(pe.value)
                         THEN 1 else 0 
                    END as has_min_expression,
                    CASE WHEN p.max_expression = max(pe.value)
                        THEN 1 else 0 
                    END as has_max_expression,
                    pgd.module
             from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe,
                  apidb.profileset ps, apidbTuning.profilegraphdescrip pgd
             where pen.profile_element_name_id in ($$samples_fc_ref_generic$$)
               and p.profile_set_id = pen.profile_set_id
               and pe.profile_id = p.profile_id
               and pe.element_order = pen.element_order
               and ps.profile_set_id = p.profile_set_id
               and pgd.profile_name = ps.name
             group by p.source_id, p.min_expression, p.max_expression,pgd.module ) two,  
           ApidbTuning.GeneAttributes ga, apidb.profile p
      where one.source_id = two.source_id
        and ga.source_id = two.source_id
        and p.profile_set_id = $$profileset_generic$$
        and ga.na_feature_id = p.subject_row_id
        and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
        and ($$regulated_dir$$ ( one.chosen / two.chosen)  >= $$fold_change$$
          OR $$regulated_dir$$ (-(two.chosen / one.chosen)) >= $$fold_change$$)
        and (('$$regulated_dir$$' = '+' and $$global_min_max$$ = 'both' and two.has_min_expression = 1 and one.has_max_expression = 1)
          OR ('$$regulated_dir$$' = '+' and $$global_min_max$$ = 'min'  and two.has_min_expression = 1)
          OR ('$$regulated_dir$$' = '+' and $$global_min_max$$ = 'max'  and one.has_max_expression = 1)
          OR ('$$regulated_dir$$' = '-' and $$global_min_max$$ = 'both' and one.has_min_expression = 1 and two.has_max_expression = 1)
          OR ('$$regulated_dir$$' = '-' and $$global_min_max$$ = 'min'  and one.has_min_expression = 1)
          OR ('$$regulated_dir$$' = '-' and $$global_min_max$$ = 'max'  and two.has_max_expression = 1)
          OR ('$$regulated_dir$$' = 'abs' and $$global_min_max$$ = 'both' and one.has_min_expression + one.has_max_expression + two.has_min_expression + two.has_max_expression = 2)
          OR ('$$regulated_dir$$' = 'abs' and $$global_min_max$$ = 'min'  and one.has_min_expression + two.has_min_expression = 1)
          OR ('$$regulated_dir$$' = 'abs' and $$global_min_max$$ = 'max'  and one.has_max_expression + two.has_max_expression = 1)
          OR $$global_min_max$$ = 'dont_care' 
          )
      ]]>
      </sql>

    </sqlQuery>

<!--
    <processQuery name="GenesByGenericTimeSeriesFoldChangeLog2" includeProjects="EuPathDB"
-->
    <processQuery name="GenesByGenericFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <paramRef ref="geneParams.profileset_generic" quote="false"/>
      <paramRef ref="geneParams.regulated_dir"/>
      <paramRef ref="geneParams.samples_fc_ref_generic"/>
      <paramRef ref="geneParams.min_max_avg_ref"  quote="false"/>
      <paramRef ref="geneParams.samples_fc_comp_generic"/>
      <paramRef ref="geneParams.min_max_avg_comp"  quote="false"/>
      <paramRef ref="geneParams.fold_change"/>
      <paramRef ref="geneParams.global_min_max" quote="false"/>
      <paramRef ref="geneParams.protein_coding_only"  quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change_avg" wsName="fold_change_avg"/>
        <wsColumn name="fold_change_chosen" wsName="fold_change_chosen"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
        <wsColumn name="max_group_one" wsName="max_group_one"/>
        <wsColumn name="max_group_two" wsName="max_group_two"/>
        <wsColumn name="min_group_one" wsName="min_group_one"/>
        <wsColumn name="min_group_two" wsName="min_group_two"/>
        <wsColumn name="chose_group_one" wsName="chose_group_one"/>
        <wsColumn name="chose_group_two" wsName="chose_group_two"/>
        <wsColumn name="module" wsName="module"/>
      <wsColumn name="time_of_min_expr"/>
      <wsColumn name="time_of_max_expr"/>

    </processQuery>





    <sqlQuery name="GenesByTimeSeriesFoldChangeTbrucei" includeProjects="TriTrypDB" 
              isCacheable="true">
      <testParamValues>
	<paramValue name="tb_ts_fc_one_pd">0 hr</paramValue>
	<paramValue name="tb_ts_fc_two_pd">1 hr</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.tb_fc_profile_pd"/>
        <paramRef ref="geneParams.tb_ts_fc_two_pd"/>
        <paramRef ref="geneParams.tb_ts_fc_one_pd"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only" />
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
        <column name="module"/>
      <sql includeProjects="ToxoDB,TriTrypDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$tb_ts_fc_one_pd$$)
 and pen.profile_set_id = $$tb_fc_profile_pd$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$tb_ts_fc_two_pd$$)
 and pen.profile_set_id = $$tb_fc_profile_pd$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and ga.source_id = two.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByTimeSeriesFoldChangeTbrucei" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="tb_ts_fc_one_pd">0 hr</paramValue>
	<paramValue name="tb_ts_fc_two_pd">1 hr</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.tb_fc_profile_pd"/>
        <paramRef ref="geneParams.tb_ts_fc_two_pd" quote="false"/>
        <paramRef ref="geneParams.tb_ts_fc_one_pd" quote="false"/> 
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>



    <sqlQuery name="GenesByTimeSeriesFoldChangeBradyBoothroyd" includeProjects="ToxoDB" 
              isCacheable="true">

      <testParamValues>
	<paramValue name="ts_fc_one_matt">2 days</paramValue>
	<paramValue name="ts_fc_two_matt">4 days</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_two_matt"/>
        <paramRef ref="geneParams.ts_fc_one_matt"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_one_matt$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_two_matt$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByTimeSeriesFoldChangeBradyBoothroyd" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="ts_fc_one_matt">2 days</paramValue>
	<paramValue name="ts_fc_two_matt">4 days</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_two_matt" quote="false"/>
        <paramRef ref="geneParams.ts_fc_one_matt" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>




    <sqlQuery name="LdGenesByExpressionTimingFC" includeProjects="TriTrypDB" 
              isCacheable="true">
      <testParamValues>
	<paramValue name="ld_fc_one_fl">0 hr</paramValue>
	<paramValue name="ld_fc_two_fl">2.5 hr</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ld_fc_profile_two_fl"/>
        <paramRef ref="geneParams.ld_fc_two_fl"/>
        <paramRef ref="geneParams.ld_fc_one_fl"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
       <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="TriTrypDB,ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ld_fc_one_fl$$)
 and pen.profile_set_id = $$ld_fc_profile_two_fl$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ld_fc_two_fl$$)
 and pen.profile_set_id = $$ld_fc_profile_two_fl$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and one.source_id = ga.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  $$regulated_dir$$ (
                case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

   </sqlQuery>

    <processQuery name="LdGenesByExpressionTimingFC" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="ld_fc_one_fl">0 hr</paramValue>
	<paramValue name="ld_fc_two_fl">2.5 hr</paramValue>
      </testParamValues>
        <paramRef ref="geneParams.ld_fc_profile_two_fl"/>
        <paramRef ref="geneParams.ld_fc_two_fl" quote="false"/>
        <paramRef ref="geneParams.ld_fc_one_fl" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>

    <sqlQuery name="GenesByExpressionTiming" includeProjects="ToxoDB" 
              isCacheable="true">

      <testParamValues>
	<paramValue name="ts_fc_one_fl">2 days</paramValue>
	<paramValue name="ts_fc_two_fl">4 days</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_profile_two_fl"/>
        <paramRef ref="geneParams.ts_fc_two_fl"/>
        <paramRef ref="geneParams.ts_fc_one_fl"/>
        <!-- paramRef ref="geneParams.ts_fc_profile_one_fl"/ -->
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_one_fl$$)
 and pen.profile_set_id = $$ts_fc_profile_two_fl$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_two_fl$$)
 and pen.profile_set_id = $$ts_fc_profile_two_fl$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

   </sqlQuery>

    <processQuery name="GenesByExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="ts_fc_one_fl">2 days</paramValue>
	<paramValue name="ts_fc_two_fl">4 days</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_profile_two_fl"/>
        <paramRef ref="geneParams.ts_fc_two_fl" quote="false"/>
        <!-- paramRef ref="geneParams.ts_fc_profile_one_fl"/ -->
        <paramRef ref="geneParams.ts_fc_one_fl" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>


<!--    <sqlQuery name="GenesByFalcExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true">

        <paramRef ref="geneParams.profileSetFalciparum"/>
        <paramRef ref="geneParams.pf_fc_one_fl"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
        <paramRef ref="geneParams.pf_fc_two_fl"/>
        <paramRef ref="geneParams.maxPlusMinusHours2"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>

       
        <sql>
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where ( (nvl((regexp_replace(pen.name,'[^[:digit:]]')),0) >= ($$pf_fc_one_fl$$ - $$maxPlusMinusHours$$))
     and (nvl((regexp_replace(pen.name,'[^[:digit:]]')),0) <= ($$pf_fc_one_fl$$ + $$maxPlusMinusHours$$)) ) 
 and pen.profile_set_id = $$profileSetFalciparum$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where ( (nvl((regexp_replace(pen.name,'[^[:digit:]]')),0) >= ($$pf_fc_two_fl$$ - $$maxPlusMinusHours2$$))
     and (nvl((regexp_replace(pen.name,'[^[:digit:]]')),0) <= ($$pf_fc_two_fl$$ + $$maxPlusMinusHours2$$)) )  
 and pen.profile_set_id = $$profileSetFalciparum$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and one.source_id = ga.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByFalcExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.profileSetFalciparum"/>
        <paramRef ref="geneParams.pf_fc_one_fl"  quote="false"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
        <paramRef ref="geneParams.pf_fc_two_fl"  quote="false"/>
        <paramRef ref="geneParams.maxPlusMinusHours2"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>  -->



<!-- The new fold change format for this Query is put on hold and commented out here till we decide the best way to present the microarray data-->
<!-- Changing the query and params also resulted in breaking several strategies/results for a large user base..so this will perhaps -->
<!-- be added as an additional query over the existing format -->

    <sqlQuery name="GenesByFalcExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true">

        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.maxExprHourFalc"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
        <paramRef ref="geneParams.profileSetFalc"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <sql>
          <![CDATA[
          SELECT iq.source_id, round(max(iq.max_fc), 1) as max_fc, 
                 count(*) as num_replicates, '@PROJECT_ID@' as project_id
          FROM (
          SELECT gf.source_id, prs.name, max(pr.ind_ratio) as max_fc
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR abs($$maxExprHourFalc$$ - pr.equiv_max) <= $$maxPlusMinusHours$$)
          AND ($$minOrMax$$ = 'max'
                 OR abs($$maxExprHourFalc$$ - pr.equiv_min) <= $$maxPlusMinusHours$$)
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$ / 100
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          AND prs.name like case when $$profileSetFalc$$ = '3' then 'DeRisi % Smoothed Averaged' else $$profileSetFalc$$ end
          group BY gf.source_id,prs.name) iq
          group by iq.source_id
          having count(*) >= case when $$profileSetFalc$$ = '3' then 3 else 1 end
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByFalcExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.minOrMax" quote="false"/>
        <paramRef ref="geneParams.maxExprHourFalc"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
<!--        <paramRef ref="geneParams.minExprHour"/>
        <paramRef ref="geneParams.minPlusMinusHours"/> -->
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
         <paramRef ref="geneParams.profileSetFalc" quote="false"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
          <wsColumn name="max_fc" width="32" wsName="max_fc"/>
          <wsColumn name="num_replicates" width="32" wsName="max_fc"/>
    </processQuery>


<!-- The new fold change format for this Query is put on hold and commented out here till we decide the best way to present the microarray data-->
<!-- Changing the query and params also resulted in breaking several strategies/results for a large user base..so this will perhaps -->
<!-- be added as an additional query over the existing format -->

<!--
       <sqlQuery name="GenesByVivaxExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true">
        <paramRef ref="geneParams.profileSetVivax"/>
        <paramRef ref="geneParams.pv_fc_one_fl"/>
        <paramRef ref="geneParams.pv_fc_two_fl"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
        <sql>
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$pv_fc_one_fl$$)
 and pen.profile_set_id = $$profileSetVivax$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$pv_fc_two_fl$$)
 and pen.profile_set_id = $$profileSetVivax$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and one.source_id = ga.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$

          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByVivaxExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.profileSetVivax"/>
        <paramRef ref="geneParams.pv_fc_one_fl"  quote="false"/>
        <paramRef ref="geneParams.pv_fc_two_fl"  quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>
-->

    <sqlQuery name="GenesByVivaxExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true">
        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.exprHourVivax"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
        <paramRef ref="geneParams.profileSetVivax"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <column name="num_replicates"/> 
        <sql>
          <![CDATA[
          SELECT iq.source_id, round(max(iq.max_fc), 1) as max_fc,
                 count(*) as num_replicates, '@PROJECT_ID@' as project_id
          from (
          SELECT gf.source_id, prs.name, max(pr.ind_ratio) as max_fc
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR pr.time_of_max_expr in ($$exprHourVivax$$))
          AND ($$minOrMax$$ = 'max'
                 OR pr.time_of_min_expr in ($$exprHourVivax$$))
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          AND prs.name like case when $$profileSetVivax$$ = '3' then 'ZB Pvivax time series normalized_averaged %' else $$profileSetVivax$$ end
          group BY gf.source_id,prs.name) iq
          group by iq.source_id
          having count(*) >= case when $$profileSetVivax$$ = '3' then 3 else 1 end
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByVivaxExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.minOrMax" quote="false"/>
        <paramRef ref="geneParams.exprHourVivax"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
        <paramRef ref="geneParams.profileSetVivax" quote="false"/>
	<wsColumn name="source_id" width="50" wsName="source_id"/>
	<wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="max_fc" width="32" wsName="max_fc"/>
        <wsColumn name="num_replicates" width="32" wsName="max_fc"/>
    </processQuery>




    <sqlQuery name="GenesByEHistoExpressionTiming" includeProjects="AmoebaDB" 
              isCacheable="true" doNotTest="true">

        <paramRef ref="geneParams.profileSetEHisto"/>
        <paramRef ref="geneParams.eh_fc_one_fl"/>
        <paramRef ref="geneParams.eh_fc_two_fl"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
        <sql>
          <![CDATA[
 select  ga.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select  p.source_id, p.subject_row_id as subject_row_id,avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$eh_fc_one_fl$$)
 and pen.profile_set_id = $$profileSetEHisto$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.subject_row_id,p.source_id ) one,
 (
 select p.source_id, p.subject_row_id as subject_row_id,avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$eh_fc_two_fl$$)
 and pen.profile_set_id = $$profileSetEHisto$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.subject_row_id,p.source_id ) two,
 ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and ga.species = 'Entamoeba histolytica'
 and one.source_id = ga.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByEHistoExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.profileSetEHisto"/>
        <paramRef ref="geneParams.eh_fc_one_fl"  quote="false"/>
        <paramRef ref="geneParams.eh_fc_two_fl"  quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>




  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- RNA Seq Expression Timing -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->


<!-- The new fold change format for this Query is put on hold and commented out here till we decide the best way to present the microarray data-->
<!-- Changing the query and params also resulted in breaking several strategies/results for a large user base..so this will perhaps -->
<!-- be added as an additional query over the existing format -->

<!--    <sqlQuery name="GenesByRNASeqExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true"> 
        <paramRef ref="geneParams.pfd_fc_one_fl"/>
        <paramRef ref="geneParams.pfd_fc_two_fl"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
        <sql>
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$pfd_fc_one_fl$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$pfd_fc_two_fl$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 ApidbTuning.GeneAttributes ga
 where one.source_id = two.source_id
 and one.source_id = ga.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$

          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByRNASeqExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.pfd_fc_one_fl"  quote="false"/>
        <paramRef ref="geneParams.pfd_fc_two_fl"  quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>

    </processQuery> -->


  <!-- the doNotTest is temporary;  Some wdkSanity bug.. this query is working fine ont he qa site and also from the command line with default params but failing sanity tests -->
   <sqlQuery name="GenesByRNASeqExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true" doNotTest="true">
        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.exprHourRNASeq"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/> 
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <column name="num_replicates"/> 
        <sqlParamValue name="prsName">
                <![CDATA[
                   AND prs.name = 'Profiles of P.falciparum Newbold mRNA Seq data'
                ]]>
        </sqlParamValue>
        <sql>
          <![CDATA[
          SELECT iq.source_id, round(max(iq.max_fc), 1) as max_fc,
                 count(*) as num_replicates, '@PROJECT_ID@' as project_id
          from (
          SELECT gf.source_id, prs.name, max(pr.ind_ratio) as max_fc
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR pr.time_of_max_expr in ($$exprHourRNASeq$$))
          AND ($$minOrMax$$ = 'max'
                 OR pr.time_of_min_expr in ($$exprHourRNASeq$$))
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          &&prsName&&
          group BY gf.source_id,prs.name) iq
          group by iq.source_id
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByRNASeqExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.minOrMax" quote="false"/>
        <paramRef ref="geneParams.exprHourRNASeq"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
	<wsColumn name="source_id" width="50" wsName="source_id"/>
	<wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="max_fc" width="32" wsName="max_fc"/>
        <wsColumn name="num_replicates" width="32" wsName="max_fc"/>
    </processQuery>


   <sqlQuery name="GenesByToxoCellCycleSpline" doNotTest="true" includeProjects="ToxoDB" 
              isCacheable="true">

        <testParamValues includeProjects="ToxoDB">
            <paramValue name="exprHourCellCycle">7 hours</paramValue>
        </testParamValues>


        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.exprHourCellCycle"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/> 
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <column name="num_replicates"/> 
        <sqlParamValue name="prsName">
                <![CDATA[
                   AND prs.name = 'M.White Cell Cycle Microarray spline smoothed 12 pts'
                ]]>
        </sqlParamValue>

        <sql>
          <![CDATA[
          SELECT iq.source_id, round(max(iq.max_fc), 1) as max_fc,
                 count(*) as num_replicates, '@PROJECT_ID@' as project_id
          from (
          SELECT gf.source_id, prs.name, max(pr.ind_ratio) as max_fc
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR pr.time_of_max_expr in ($$exprHourCellCycle$$))
          AND ($$minOrMax$$ = 'max'
                 OR pr.time_of_min_expr in ($$exprHourCellCycle$$))
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          &&prsName&&
          group BY gf.source_id,prs.name) iq
          group by iq.source_id
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByToxoCellCycleSpline" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.minOrMax" quote="false"/>
        <paramRef ref="geneParams.exprHourCellCycle"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
	<wsColumn name="source_id" width="50" wsName="source_id"/>
	<wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="max_fc" width="32" wsName="max_fc"/>
        <wsColumn name="num_replicates" width="32" wsName="max_fc"/>
    </processQuery>


             
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Expression profile similarity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <processQuery name="GenesByGenericProfileSimilarity" includeProjects="PlasmoDB,ToxoDB,CryptoDB"  
             processName="org.apidb.apicomplexa.wsfplugin.profile.ProfileSimilarityPlugin">
       <paramRef ref="geneParams.ProfileGeneId" noTranslation="true"/>
       <paramRef ref="geneParams.ProfileDistanceMethod"  quote="false"/>
       <paramRef ref="geneParams.ProfileNumToReturn"/>
       <paramRef ref="geneParams.ProfileMissingPtsPercent"/>
       <paramRef ref="geneParams.profile_profile_set"/>
       <paramRef ref="geneParams.ProfileSearchGoal"  quote="false"/>
       <paramRef ref="geneParams.profile_time_shift"/>
       <paramRef ref="geneParams.ProfileScaleFactor"/>
       <paramRef ref="geneParams.ProfileMinPoints"/>
       <wsColumn name="source_id" width="50" wsName="GeneID"/>
       <wsColumn name="project_id" width="20" wsName="ProjectId"/>
       <wsColumn name="distance" wsName="Distance" width="50"/>
       <wsColumn name="time_shift" wsName="Shift" width="50"/>
       <wsColumn name="query_source_id" wsName="QueryGeneId" width="50"/>
    </processQuery>

    <processQuery name="GenesByGenericProfileSimilarity" includeProjects="EuPathDB"  
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
   <!--    <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>  -->
       <paramRef ref="geneParams.ProfileGeneId" default="PF11_0344"/>
       <paramRef ref="geneParams.ProfileDistanceMethod" quote="false"/>
       <paramRef ref="geneParams.ProfileNumToReturn"/>
       <paramRef ref="geneParams.profile_profile_set" quote="false"/>
       <paramRef ref="geneParams.ProfileSearchGoal" quote="false"/>
       <paramRef ref="geneParams.profile_time_shift"/>
       <paramRef ref="geneParams.ProfileScaleFactor"/>
       <paramRef ref="geneParams.ProfileMinPoints"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="distance" wsName="distance" width="50"/>
       <wsColumn name="time_shift" wsName="time_shift" width="50"/>
       <wsColumn name="query_source_id" wsName="query_source_id" width="50"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByPhyleticProfile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPhyleticProfile" doNotTest="true" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids" default="PY03942"/>
        <paramRef ref="geneParams.min_mutual_information_score"/>
        <paramRef ref="geneParams.include_only_queries"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="query_ids" />
        <column name="mutual_information_scores" />
        <column name="num_queries" />
        <sql>
            <![CDATA[
                select * from (
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, count(*) as num_queries,
                    apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids,
                    apidb.tab_to_string(CAST(COLLECT(to_char(mis.mutual_information_score/10000)) AS apidb.varchartab), ', ') AS mutual_information_scores
                FROM ApidbTuning.GeneAttributes gf1, dots.PhylogeneticProfile pp1,
                     dots.MutualInformationScore mis, dots.PhylogeneticProfile pp2,
                     ApidbTuning.GeneAttributes gf2, ($$ds_gene_ids$$) ds, ApidbTuning.GeneId gi
                WHERE $$include_only_queries$$ = 'no'
                  AND gf1.source_id = gi.gene
                  AND lower(gi.id) = lower(ds.source_id)
                  AND gf1.na_feature_id = pp1.na_feature_id
                  AND ((pp1.phylogenetic_profile_id = mis.primary_profile_id
                  AND mis.secondary_profile_id = pp2.phylogenetic_profile_id)
                    OR (pp1.phylogenetic_profile_id = mis.secondary_profile_id
                  AND mis.primary_profile_id = pp2.phylogenetic_profile_id))
                  and mis.mutual_information_score/1000 >= $$min_mutual_information_score$$
                  AND pp2.na_feature_id = gf2.na_feature_id
                  AND gf2.source_id != gf1.source_id
                  group  by gf2.source_id
                  having count(*) >= $$min_num_query_matches$$
             UNION
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, count(*) as num_queries,
                    apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                    apidb.tab_to_string(CAST(COLLECT(to_char(mis.mutual_information_score/10000)) AS apidb.varchartab), ', ') AS mutual_information_scores
                FROM ApidbTuning.GeneAttributes gf1, dots.PhylogeneticProfile pp1,
                     dots.MutualInformationScore mis, dots.PhylogeneticProfile pp2,
                     ApidbTuning.GeneAttributes gf2, ($$ds_gene_ids$$) ds, ApidbTuning.GeneId gi
                WHERE $$include_only_queries$$ = 'yes'
                  AND gf1.source_id = gi.gene
                  AND lower(gi.id) = lower(ds.source_id)
                  AND gf1.na_feature_id = pp1.na_feature_id
                  AND ((pp1.phylogenetic_profile_id = mis.primary_profile_id
                  AND mis.secondary_profile_id = pp2.phylogenetic_profile_id)
                    OR (pp1.phylogenetic_profile_id = mis.secondary_profile_id
                  AND mis.primary_profile_id = pp2.phylogenetic_profile_id))
                  and mis.mutual_information_score/1000 >= $$min_mutual_information_score$$
                  AND pp2.na_feature_id = gf2.na_feature_id
                  AND gf2.source_id in (select intds.source_id from ($$ds_gene_ids$$) intds) 
                  AND gf2.source_id != gf1.source_id
                  group  by gf2.source_id
                  having count(*) >= $$min_num_query_matches$$
                )
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByPhyleticProfile" includeProjects="EuPathDB" doNotTest="true"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids" default="PY03942" noTranslation="true"/>
        <paramRef ref="sharedParams.signature" noTranslation="true"/>
        <paramRef ref="geneParams.min_mutual_information_score"/>
        <paramRef ref="geneParams.include_only_queries"  quote="false"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="query_ids" />
        <wsColumn name="mutual_information_scores" />
        <wsColumn name="num_queries" />
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByFunctionalInteraction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByFunctionalInteraction" doNotTest="true" includeProjects="PlasmoDB" 
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids" default="PF11_0344"/>
        <paramRef ref="geneParams.min_interaction"/>
        <paramRef ref="geneParams.include_only_queries"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="likelihood_scores"/>
        <column name="query_ids" />
        <column name="queries_matched"/>
        <sql>
            <![CDATA[
                select * from (
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, 
                  apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                  apidb.tab_to_string(CAST(COLLECT(to_char(rnf.value)) AS apidb.varchartab), ', ') AS likelihood_scores,
                  count(*) as queries_matched
                FROM ApidbTuning.GeneAttributes gf1, apidb.RelatedNaFeature rnf,
                     ApidbTuning.GeneAttributes gf2, ($$ds_gene_ids$$) ds, ApidbTuning.GeneId gi
                WHERE $$include_only_queries$$ = 'no'
                  AND gf1.source_id = gi.gene
                  AND lower(gi.id) = lower(ds.source_id)
                  AND gf1.na_feature_id = rnf.na_feature_id
                  AND rnf.associated_na_feature_id = gf2.na_feature_id
                  AND rnf.value >= $$min_interaction$$
                GROUP BY gf2.source_id
                HAVING count(*) >= $$min_num_query_matches$$
              UNION
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, 
                  apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                  apidb.tab_to_string(CAST(COLLECT(to_char(rnf.value)) AS apidb.varchartab), ', ') AS likelihood_scores,
                  count(*) as queries_matched
                FROM ApidbTuning.GeneAttributes gf1, apidb.RelatedNaFeature rnf,
                     ApidbTuning.GeneAttributes gf2, ($$ds_gene_ids$$) ds, ApidbTuning.GeneId gi
                WHERE $$include_only_queries$$ = 'yes'
                  AND gf1.source_id = gi.gene
                  AND lower(gi.id) = lower(ds.source_id)
                  AND gf1.na_feature_id = rnf.na_feature_id
                  AND rnf.associated_na_feature_id = gf2.na_feature_id
                  AND rnf.value >= $$min_interaction$$
                  AND gf2.source_id in (select intds.source_id from ($$ds_gene_ids$$) intds)
                GROUP BY gf2.source_id
                HAVING count(*) >= $$min_num_query_matches$$
              )
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByFunctionalInteraction" includeProjects="EuPathDB" doNotTest="true"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids" default="PF11_0344" noTranslation="true"/>
        <paramRef ref="sharedParams.signature" noTranslation="true"/>
        <paramRef ref="geneParams.min_interaction"/>
        <paramRef ref="geneParams.include_only_queries"  quote="false"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="likelihood_scores"/>
        <wsColumn name="query_ids" />
        <wsColumn name="queries_matched"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByDifferentialExpression" includeProjects="ToxoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.exprnsample"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
          select '@PROJECT_ID@' as project_id, ga.source_id as source_id, 
                 round(d.fold_change, 1) as fold_change, d.confidence
          from rad.differentialexpression d, Core.tableInfo t , 
               ApidbTuning.GeneAttributes ga, rad.analysis a 
          where ga.na_feature_id = d.row_id 
           and t.table_id = d.table_id
           and a.analysis_id = d.analysis_id
           and t.name = 'GeneFeature'
           and $$regulated_dir$$(d.fold_change) >= $$fold_change$$
           and d.confidence >= $$confidence$$
           and a.name = $$exprnsample$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByDifferentialExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.exprnsample" quote="false"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 

    <sqlQuery name="GenesByDifferentialExpressionChooseComparisons" includeProjects="ToxoDB"
          isCacheable='true'>

        <testParamValues includeProjects="ToxoDB">
            <paramValue name="lineages_b">GT1 (Type I) </paramValue>
        </testParamValues>
       <paramRef ref="geneParams.lineages_b"/>
       <paramRef ref="geneParams.lineages_a"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
          select '@PROJECT_ID@' as project_id, ga.source_id as source_id, 
                 d.confidence, round(d.fold_change, 1) as fold_change
          from ApidbTuning.GeneAttributes ga, 
               (select r.row_id, r.confidence, 
                   case when lower(a.name) = $$lineages_a$$ || 'vs' || $$lineages_b$$
                        then r.fold_change
                        else -(r.fold_change)
                   end as fold_change
                from rad.analysis a, rad.differentialexpression r, core.tableinfo t
                where a.analysis_id = r.analysis_id
                  and r.table_id = t.table_id
                  and t.name = 'GeneFeature'
                  and (lower(a.name) = $$lineages_a$$ || 'vs' || $$lineages_b$$ 
                    or lower(a.name) = $$lineages_b$$ || 'vs' || $$lineages_a$$)
                ) d
           where ga.na_feature_id = d.row_id
             and $$regulated_dir$$(d.fold_change) >= $$fold_change$$
             and d.confidence >= $$confidence$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByDifferentialExpressionChooseComparisons" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues>
            <paramValue name="lineages_b">GT1 (Type I) </paramValue>
        </testParamValues>
       <paramRef ref="geneParams.lineages_b" quote="false"/>
       <paramRef ref="geneParams.lineages_a" quote="false"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GiardiaGenesByDifferentialExpression" includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.gl_exprnsample"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
            <![CDATA[
               SELECT g.source_id, '@PROJECT_ID@' as project_id, 
                      avg(round(de.fold_change, 2)) as fold_change,
                      max(round(de.confidence, 2)) as confidence                   
                 FROM rad.differentialExpression de, core.tableInfo ti, 
                      rad.compositeElementNaSequence cs, dots.transcript t, 
                      ApidbTuning.GeneAttributes g, rad.analysis a
                WHERE ti.name = 'ShortOligoFamily'
                  AND de.table_id = ti.table_id
                  AND de.row_id = cs.composite_element_id
                  AND cs.na_sequence_id = t.na_sequence_id
                  AND t.parent_id = g.na_feature_id
                  AND de.analysis_id = a.analysis_id
                  AND a.name = $$gl_exprnsample$$
                  AND de.confidence >= $$confidence$$
                  AND ($$regulated_dir$$ (de.fold_change) >= $$fold_change$$)
                  GROUP BY g.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GiardiaGenesByDifferentialExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.gl_exprnsample"  quote="false"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 

    <sqlQuery name="GiardiaGenesByDifferentialExpressionTwo" includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.gl_exprnsample_two"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
            <![CDATA[
               SELECT g.source_id,  '@PROJECT_ID@' as project_id,  
                      round(de.fold_change, 2) as fold_change,
                      round(de.confidence, 2) as confidence
                 FROM rad.differentialExpression de, core.tableInfo ti,
                      ApidbTuning.GeneAttributes g, rad.analysis a
                 WHERE ti.name = 'GeneFeature'
                   AND de.table_id = ti.table_id
                   AND de.row_id = g.na_feature_id
                   AND de.analysis_id = a.analysis_id
                   AND a.name = $$gl_exprnsample_two$$
                   AND de.confidence >= $$confidence$$
                   AND ($$regulated_dir$$ (de.fold_change) >= $$fold_change$$)             
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GiardiaGenesByDifferentialExpressionTwo" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.gl_exprnsample_two"  quote="false"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GiardiaGenesFoldChange(Two) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GiardiaGenesFoldChange" includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.gl_expr_studies_stress"/>
       <paramRef ref="geneParams.gl_expr_sample_stress_comparitor"/>
       <paramRef ref="geneParams.gl_expr_sample_stress_reference"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <column name="val_one"/>
       <column name="val_two"/>

        <sql>
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN power(2, one.val) / power(2,two.val) >= 1
                                 THEN power(2, one.val) / power(2,two.val)
                           ELSE -1 / (power(2,one.val) / power(2,two.val))
                   END),1) as fold_change,
        round(one.val,2) as val_one,
        round(two.val,2) as val_two
 from (
 select p.source_id, pe.value as val
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$gl_expr_sample_stress_comparitor$$)
 and pen.profile_set_id = $$gl_expr_studies_stress$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 ) one,
 (
 select p.source_id, pe.value as val
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$gl_expr_sample_stress_reference$$)
 and pen.profile_set_id = $$gl_expr_studies_stress$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 ) two
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.val >= two.val
                   then one.val / two.val
                   else -( two.val / one.val)
                   end ) >= $$fold_change$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GiardiaGenesFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.gl_expr_studies_stress"/>
       <paramRef ref="geneParams.gl_expr_sample_stress_comparitor"/>
       <paramRef ref="geneParams.gl_expr_sample_stress_reference"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="fold_change" />
       <wsColumn name="val_one"/>
       <wsColumn name="val_two"/>
    </processQuery> 


    <sqlQuery name="GiardiaGenesFoldChangeTwo" includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.gl_expr_sample_encyst_reference"/>
       <paramRef ref="geneParams.gl_expr_sample_encyst_comparitor"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <column name="val_one"/>
       <column name="val_two"/>

        <sql>
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN power(2, one.val) / power(2,two.val) >= 1
                                 THEN power(2, one.val) / power(2,two.val)
                           ELSE -1 / (power(2,one.val) / power(2,two.val))
                   END),1) as fold_change,
        round(one.val,2) as val_one,
        round(two.val,2) as val_two
 from (
 select p.source_id, pe.value as val
 from  apidb.profileelementname pen, apidb.profile p, 
       apidb.profileelement pe, apidb.profileSet ps
 where pen.profile_element_name_id in ($$gl_expr_sample_encyst_comparitor$$)
 and ps.name = 'Hehl encystation expression profile'
 and ps.profile_set_id = p.profile_set_id
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 ) one,
 (
 select p.source_id, pe.value as val
 from apidb.profileelementname pen, apidb.profile p, 
      apidb.profileelement pe, apidb.profileSet ps
 where pen.profile_element_name_id in ($$gl_expr_sample_encyst_reference$$)
 and ps.name = 'Hehl encystation expression profile'
 and ps.profile_set_id = p.profile_set_id
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 ) two
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.val >= two.val
                   then power(2,one.val) / power(2,two.val)
                   else -( power(2,two.val) / power(2,one.val))
                   end ) >= $$fold_change$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GiardiaGenesFoldChangeTwo" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.gl_expr_sample_encyst_reference"  quote="false"/>
       <paramRef ref="geneParams.gl_expr_sample_encyst_comparitor"  quote="false"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="fold_change" />
       <wsColumn name="val_one"/>
       <wsColumn name="val_two"/>
    </processQuery> 



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Generic Expression Percentile Query GiardiaDB -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpressionPercentileProfile"  includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.expressionPercentileSamples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select distinct source_id, '@PROJECT_ID@' as project_id
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.name || '|' || pen.name in ( $$expressionPercentileSamples$$ )
            and pe.value BETWEEN $$min_expression_percentile$$
              and $$max_expression_percentile$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpressionPercentileProfile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.expressionPercentileSamples" quote="false"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>   


    <sqlQuery name="GenesByExpressionPercentileProfileTwo"  includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.expressionPercentileSamplesTwo"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="max_percentile"/>
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select source_id, '@PROJECT_ID@' as project_id, max(round(pe.value,1)) AS max_percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.name || '|' || pen.name in ( $$expressionPercentileSamplesTwo$$ )
            and pe.value BETWEEN $$min_expression_percentile$$
              and $$max_expression_percentile$$
            group by source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpressionPercentileProfileTwo" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.expressionPercentileSamplesTwo" quote="false"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="max_percentile"/>
    </processQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Giardia Ringqvist fold-change and percentile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <sqlQuery name="GenesByRingqvistFoldChange" includeProjects="GiardiaDB" isCacheable='true'>

        <paramRef ref="geneParams.ringqvist_reference"/>  
        <paramRef ref="geneParams.ringqvist_comparitor"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
      <sql>
          <![CDATA[
select '@PROJECT_ID@' as project_id,one.source_id,
                  round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change
 from
  (select  p.source_id as source_id,
           pe.value as average
   from    apidb.profile p,
           apidb.profileelement pe,
           apidb.profileelementname pen
  where    p.profile_set_id = pen.profile_set_id
    and      pe.profile_id = p.profile_id
    and      pe.element_order = pen.element_order
    and      pen.profile_element_name_id =$$ringqvist_comparitor$$ 
  ) one,
 (select  p.source_id as source_id,
           pe.value as average
   from    apidb.profile p,
           apidb.profileelement pe,
           apidb.profileelementname pen
  where    p.profile_set_id = pen.profile_set_id
    and      pe.profile_id = p.profile_id
    and      pe.element_order = pen.element_order
    and      pen.profile_element_name_id = $$ringqvist_reference$$
  ) two,
   ApidbTuning.GeneAttributes ga
where one.source_id = two.source_id
 and  one.source_id = ga.source_id
 and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByRingqvistFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.ringqvist_reference"/>  
        <paramRef ref="geneParams.ringqvist_comparitor"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
    </processQuery> 

    <sqlQuery name="GenesByRingqvistPercentile"  includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.ringqvist_study"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <paramRef ref="geneParams.protein_coding_only"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
	 <![CDATA[
           select  ga.source_id, '@PROJECT_ID@' as project_id,max(round((pe.value),1))as percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where ps.profile_set_id = pen.profile_set_id
            and ga.source_id = p.source_id
            and ( $$protein_coding_only$$ = 'no' OR ga.gene_type = $$protein_coding_only$$ )
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and  pen.profile_element_name_id in ( $$ringqvist_study$$ )
            and pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$
            group by ga.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByRingqvistPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.ringqvist_study"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" wsName="percentile"/>
    </processQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ToxoGenesByExpressionPercentile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ToxoGenesByExpressionPercentile" includeProjects="ToxoDB"
          isCacheable='true'>

      <testParamValues>
	<paramValue name="toxo_expr_sample">GT1(Type I)</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.toxo_expr_studies"/>
       <paramRef ref="geneParams.toxo_expr_sample"/>
       <paramRef ref="geneParams.percentile"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
	     SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                    max(round(ep.percentile,1)) as percentile
               FROM Rad.Analysis a, Rad.ExpressionProfile ep, Core.tableInfo t, 
                    Rad.Protocol p, ApidbTuning.GeneAttributes ga
              WHERE p.name = '$$toxo_expr_studies$$'
	        AND t.table_id = ep.table_id
                AND t.name = 'GeneFeature'
                AND a.protocol_id = p.protocol_id
                AND ep.analysis_id = a.analysis_id
                AND a.name = $$toxo_expr_sample$$
                AND ga.na_feature_id = ep.row_id 
                AND ep.percentile >= $$percentile$$
             GROUP BY ga.source_id
             ORDER BY ga.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="ToxoGenesByExpressionPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="toxo_expr_sample">GT1(Type I)</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.toxo_expr_studies"  quote="false"/>
       <paramRef ref="geneParams.toxo_expr_sample"  quote="false"/>
       <paramRef ref="geneParams.percentile"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" width="32" />
    </processQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByIntraerythrocyticExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByIntraerythrocyticExpression" includeProjects="PlasmoDB" 
           isCacheable="true">
        <paramRef ref="geneParams.synchronization"/>
        <paramRef ref="geneParams.intraerythrocytic_stages"/> 
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[
           select distinct source_id, '@PROJECT_ID@' as project_id,
           round(max((pe.value)), 1) as max_percentile, 
           round(min((pe.value)), 1) as min_percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profile p
           where ps.profile_set_id  = p.profile_set_id
            and pe.profile_id = p.profile_id
            and ps.name in ($$synchronization$$)
            and pe.element_order in ( $$intraerythrocytic_stages$$ )
            and (pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$)
           group by p.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByIntraerythrocyticExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.synchronization"  quote="false"/>
        <paramRef ref="geneParams.intraerythrocytic_stages" quote="false"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </processQuery>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByIntraerythrocyticExpression fold change -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByIntraerythroExprFoldChange" includeProjects="PlasmoDB" isCacheable='true'>
      <testParamValues>
	<paramValue name="winz_asexual_reference">Early Ring</paramValue>
	<paramValue name="winz_asexual_comparitor">Late Ring</paramValue>
      </testParamValues>

      <paramRef ref="geneParams.synchronizationFldChnge1"/>
      <paramRef ref="geneParams.winz_asexual_reference"/>
      <paramRef ref="geneParams.synchronizationFldChnge2"/>
      <paramRef ref="geneParams.winz_asexual_comparitor"/>
      <paramRef ref="geneParams.fold_change"/>
      <paramRef ref="geneParams.regulated_dir"/>
      <paramRef ref="geneParams.protein_coding_only"/>
      <column name="project_id"/>
      <column name="source_id"/>
      <column name="fold_change"/>
      <column name="val_one"/>
      <column name="val_two"/>
      <sql>
          <![CDATA[
select one.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN power(2, one.val) / power(2,two.val) >= 1
                                 THEN power(2, one.val) / power(2,two.val)
                           ELSE -1 / (power(2,one.val) / power(2,two.val))
                   END),1) as fold_change,
        round(one.val,2) as val_one,
        round(two.val,2) as val_two
 from (
 select p.source_id, pe.value as val
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$winz_asexual_reference$$)
 and p.profile_set_id = $$synchronizationFldChnge1$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 ) two,
 (
 select p.source_id, pe.value as val
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$winz_asexual_comparitor$$)
 and p.profile_set_id = $$synchronizationFldChnge2$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 ) one
 where one.source_id = two.source_id
 and  ( $$regulated_dir$$ (
               case when one.val >= two.val
                   then power(2,one.val) / power(2,two.val)
                   else -( power(2,two.val) / power(2,one.val))
                   end ) >= $$fold_change$$)
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByIntraerythroExprFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="winz_asexual_reference">Early Ring</paramValue>
	<paramValue name="winz_asexual_comparitor">Late Ring</paramValue>
      </testParamValues>

      <paramRef ref="geneParams.synchronizationFldChnge1"/>
      <paramRef ref="geneParams.winz_asexual_reference" quote="false"/>
      <paramRef ref="geneParams.synchronizationFldChnge2"/>
      <paramRef ref="geneParams.winz_asexual_comparitor" quote="false"/>
      <paramRef ref="geneParams.fold_change"/>
      <paramRef ref="geneParams.regulated_dir"/>
      <paramRef ref="geneParams.protein_coding_only" quote="false"/>
      <wsColumn name="project_id" width="20" wsName="project_id"/>
      <wsColumn name="source_id" width="50" wsName="source_id"/>
      <wsColumn name="fold_change" wsName="fold_change"/>
      <wsColumn name="val_one" wsName="avg_group_one"/>
      <wsColumn name="val_two" wsName="avg_group_two"/>

    </processQuery> 



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExtraerythrocyticExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExtraerythrocyticExpression"  includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.extraerythrocytic_stages"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[
           select distinct source_id, '@PROJECT_ID@' as project_id,
           round(max((pe.value)), 1) as max_percentile, 
           round(min((pe.value)), 1) as min_percentile                  
           from apidb.profileset ps,apidb.profile p,apidb.profileelementname pen,apidb.profileelement pe
           where p.profile_set_id  = ps.profile_set_id
            and pen.profile_set_id = ps.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.name in ('winzeler_cc_sorbPct', 'winzeler_cc_sporPct')
            and pen.name in ($$extraerythrocytic_stages$$ )
            and (pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$)
           group by p.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByExtraerythrocyticExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.extraerythrocytic_stages"  quote="false"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </processQuery>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExtraerythrocyticExpression fold change -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExtraerythroExprFoldChange" includeProjects="PlasmoDB" isCacheable='true'>

        <paramRef ref="geneParams.extraerythrocytic_stage_refe"  quote="false"/>
        <paramRef ref="geneParams.extraerythrocytic_stage_comp"  quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="val_one"/>
        <column name="val_two"/>
      <sql>
          <![CDATA[
select one.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN power(2, one.val) / power(2,two.val) >= 1
                                 THEN power(2, one.val) / power(2,two.val)
                           ELSE -1 / (power(2,one.val) / power(2,two.val))
                   END),1) as fold_change,
        round(one.val,2) as val_one,
        round(two.val,2) as val_two
 from (
  select p.source_id, pe.value as val
    from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe, apidb.profileset ps
   where p.profile_set_id  = ps.profile_set_id
     and pen.profile_set_id = ps.profile_set_id
     and ps.name in ('winzeler_cc_sorbExp')
     and pen.name = '$$extraerythrocytic_stage_refe$$'
     and pe.profile_id = p.profile_id
     and pe.element_order = pen.element_order
 ) two,
 (select p.source_id, pe.value as val
    from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe, apidb.profileset ps
   where p.profile_set_id  = ps.profile_set_id
     and pen.profile_set_id = ps.profile_set_id
     and ps.name in ('winzeler_cc_sporExp')
     and pen.name = '$$extraerythrocytic_stage_comp$$'
     and pe.profile_id = p.profile_id
     and pe.element_order = pen.element_order
 ) one
 where one.source_id = two.source_id
 and  ( $$regulated_dir$$ (
               case when one.val >= two.val
                   then power(2,one.val) / power(2,two.val)
                   else -( power(2,two.val) / power(2,one.val))
                   end ) >= $$fold_change$$)
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByExtraerythroExprFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.extraerythrocytic_stage_refe"  quote="false"/>
        <paramRef ref="geneParams.extraerythrocytic_stage_comp"  quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir"/>
        <paramRef ref="geneParams.protein_coding_only" quote="false"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="val_one" wsName="avg_group_one"/>
        <wsColumn name="val_two" wsName="avg_group_two"/>

    </processQuery> 




  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpression" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[

            SELECT e.source_id, '@PROJECT_ID@' as project_id, MAX(e.value) AS max_percentile,
                   MIN(e.value) AS min_percentile
            FROM ApidbTuning.Expression e
            WHERE e.profile_set_name
                  in ('winzeler_cc_sorbPct', 'winzeler_cc_tempPct',
                      'winzeler_cc_sporPct')
              AND e.value >= $$min_expression_percentile$$ / 100
              AND e.value <= $$max_expression_percentile$$ / 100
            GROUP BY e.source_id
            ORDER BY e.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialMeanExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByDifferentialMeanExpression" includeProjects="PlasmoDB"
          isCacheable='true'>

      <testParamValues includeProjects="PlasmoDB">
	<paramValue name="diffMeanExpr_comparitor">3D7 SIR2 KO 24hr</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.diffMeanExpr_reference"/>
       <paramRef ref="geneParams.diffMeanExpr_comparitor" default="3D7 SIR2 KO 24hr"/>
       <paramRef ref="geneParams.regulated_dir"/>
       <paramRef ref="geneParams.fold_change"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql includeProjects="PlasmoDB">
        <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe, apidb.profileset ps
 where pen.name in ($$diffMeanExpr_reference$$)
 and ps.name = 'Profiles of Cowman Invasion KO-averaged'
 and ps.profile_set_id = p.profile_set_id
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe, apidb.profileset ps
 where pen.name in ($$diffMeanExpr_comparitor$$)
 and ps.name = 'Profiles of Cowman Invasion KO-averaged'
 and ps.profile_set_id = p.profile_set_id
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
            ]]>
       </sql>
    </sqlQuery>    

    <processQuery name="GenesByDifferentialMeanExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues includeProjects="EuPathDB">
            <paramValue name="diffMeanExpr_comparitor">W2mef EBA175 KO (late T)</paramValue>
        </testParamValues>
       <paramRef ref="geneParams.diffMeanExpr_reference" quote="false"/>
       <paramRef ref="geneParams.diffMeanExpr_comparitor" quote="false"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="fold_change" />
    </processQuery> 

    <sqlQuery name="ToxoGenesByDifferentialMeanExpression" includeProjects="ToxoDB"
          isCacheable='true'>

      <testParamValues>
	<paramValue name="diffMeanExpr_toxo_comparitor">GT1-Compound1</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.diffMeanExpr_toxo_reference"/>
       <paramRef ref="geneParams.diffMeanExpr_toxo_comparitor"/>
       <paramRef ref="geneParams.regulated_dir"/>
       <paramRef ref="geneParams.fold_change"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql>
	 <![CDATA[
          SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                 round((CASE WHEN avg(ep1.mean)/avg(ep2.mean) >= 1
                 THEN avg(power(2,ep1.mean))/avg(power(2,ep2.mean))
                 ELSE -1/(avg(power(2,ep1.mean))/avg(power(2,ep2.mean)))
                 END),1) as fold_change
            FROM Rad.Analysis a1, Rad.ExpressionProfile ep1,
                 Rad.Analysis a2, Rad.ExpressionProfile ep2, 
                 Rad.Protocol p, ApidbTuning.GeneAttributes ga
           WHERE p.name = 'Toxo_Strain_Gene_Expressions'  --protocol_id=281
             AND a1.protocol_id = p.protocol_id
             AND ep1.analysis_id = a1.analysis_id
	     AND a2.name = $$diffMeanExpr_toxo_reference$$
	     AND ga.na_feature_id = ep1.row_id
             AND a2.protocol_id = p.protocol_id
             AND ep2.analysis_id = a2.analysis_id
	     AND a1.name = $$diffMeanExpr_toxo_comparitor$$
	     AND ga.na_feature_id = ep2.row_id
             HAVING $$regulated_dir$$ (
              CASE WHEN avg(ep1.mean) >= avg(ep2.mean)
                   THEN avg(power(2,ep1.mean))/avg(power(2,ep2.mean))
                   ELSE -(avg(power(2,ep2.mean))/avg(power(2,ep1.mean)))
                   END ) >= $$fold_change$$
             GROUP BY ga.source_id
             ORDER BY ga.source_id
            ]]>
          </sql>
    </sqlQuery>    

    <processQuery name="ToxoGenesByDifferentialMeanExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="diffMeanExpr_toxo_comparitor">GT1-Compound1</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.diffMeanExpr_toxo_reference" quote="false"/>
       <paramRef ref="geneParams.diffMeanExpr_toxo_comparitor" quote="false"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
	  <wsColumn name="fold_change" width="32" wsName="fold_change"/>
    </processQuery> 

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExpressionPercentileA -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpressionPercentileA" includeProjects="PlasmoDB" isCacheable="true"> 
       <paramRef ref="geneParams.cowmanSample"/>
       <paramRef ref="geneParams.percentile"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
            <![CDATA[
           select source_id, '@PROJECT_ID@' as project_id, round((pe.value), 1) AS percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.name = 'Percentiles of Cowman Invasion KO profiles-averaged'
            and pen.name in ( $$cowmanSample$$ )
            and pe.value > $$percentile$$
            ]]>
          </sql>
    </sqlQuery>    

    <processQuery name="GenesByExpressionPercentileA" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.cowmanSample" quote="false"/>
       <paramRef ref="geneParams.percentile"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="percentile" />
    </processQuery> 


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDailyCorrelation -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--
    <sqlQuery name="GenesByDailyCorrelation" includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.dailyAnalysis"/>
       <paramRef ref="geneParams.correlation"/>
       <paramRef ref="geneParams.correlation_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="correlation" />
       <sql>
            <![CDATA[
          SELECT g.source_id, '@PROJECT_ID@' as project_id,
	      to_char(d.float_value, '999.999') as correlation
            FROM Rad.Datatransformationresult d, Core.TableInfo t, Dots.GeneFeature g
            WHERE t.table_id = d.table_id
             AND g.na_feature_id = d.row_id
             AND t.name = 'GeneFeature'
             AND d.analysis_id = $$dailyAnalysis$$
             AND ( $$correlation_dir$$ d.float_value) >= $$correlation$$
        ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByDailyCorrelation" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="correlation" />
    </processQuery>

-->



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByCowmanSir2 -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByCowmanSir2FoldChange" includeProjects="PlasmoDB"
          isCacheable='true'>

      <testParamValues>
	<paramValue name="cowman_sir2_comparitor">wild type - schizont</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.cowman_sir2_reference"/>
       <paramRef ref="geneParams.cowman_sir2_comparitor"/>
       <paramRef ref="geneParams.regulated_dir"/>
       <paramRef ref="geneParams.fold_change"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql>
	 <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$cowman_sir2_reference$$) 
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$cowman_sir2_comparitor$$)  
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
            ]]>
          </sql>
    </sqlQuery>    

    <processQuery name="GenesByCowmanSir2FoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="cowman_sir2_comparitor">wild type - schizont</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.cowman_sir2_reference" quote="false"/>
       <paramRef ref="geneParams.cowman_sir2_comparitor" quote="false"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
	  <wsColumn name="fold_change" width="32" wsName="fold_change"/>
    </processQuery> 

    <sqlQuery name="GenesByCowmanSir2Percentile"  includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.cowmanSir2Samples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="max_percentile"/>
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select distinct source_id, '@PROJECT_ID@' as project_id, round(max((pe.value)), 1) as max_percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ( $$cowmanSir2Samples$$ )
            and (pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$)
            group by source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByCowmanSir2Percentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.cowmanSir2Samples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="max_percentile" />
    </processQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesBySuCQ -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySuCqPage" includeProjects="PlasmoDB"
          isCacheable='true'>
      <testParamValues>
	<paramValue name="fold_change">0.95</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.su_cq_comparisons"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
	 <![CDATA[
          SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                 round(de.fold_change, 2) as fold_change,
                 round(de.confidence, 2) as confidence
          from ApidbTuning.GeneAttributes ga, rad.differentialexpression de, core.tableinfo ti
          where ti.name = 'GeneFeature'
          and ti.table_id = de.table_id
          and ga.na_feature_id = de.row_id
          and $$regulated_dir$$ (de.fold_change) >= $$fold_change$$
          and de.confidence >= $$confidence$$
          and de.analysis_id = $$su_cq_comparisons$$
            ]]>
        </sql>
    </sqlQuery>    

    <processQuery name="GenesBySuCqPage" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="fold_change">0.95</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.su_cq_comparisons"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 



    <sqlQuery name="GenesBySuCqPercentile"  includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.suCqSamples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="max_percentile" />

       <sql>
            <![CDATA[
           select distinct source_id, '@PROJECT_ID@' as project_id, round(max((pe.value)), 1) as max_percentile
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ( $$suCqSamples$$ )
            and (pe.value BETWEEN $$min_expression_percentile$$ and $$max_expression_percentile$$)
            group by source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesBySuCqPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.suCqSamples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="max_percentile" />
    </processQuery>   




  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByKappeFoldChange -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByKappeFoldChange" includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.kappeAnalysis"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql>
            <![CDATA[
          SELECT p.source_id, 
                 '@PROJECT_ID@' as project_id, 
                 round(max((pe.value)), 1) as fold_change
          FROM   ApiDB.Profile p, ApiDB.ProfileElement pe, ApiDB.ProfileElementName pen
          WHERE  p.profile_set_id = pen.profile_set_id
          AND    pen.profile_set_id = p.profile_set_id
          AND    pe.profile_id = p.profile_id
          AND    pe.element_order = pen.element_order
          AND    pen.profile_element_name_id = $$kappeAnalysis$$
          AND    ($$regulated_dir$$ (pe.value)) >= $$fold_change$$
          GROUP BY p.source_id
        ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByKappeFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
         <paramRef ref="geneParams.kappeAnalysis" quote="false"/>
         <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="fold_change" />
    </processQuery>





  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByWatersDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByWatersDifferentialExpression" includeProjects="PlasmoDB"
          isCacheable='true'>
      <testParamValues>
	<paramValue name="fold_change">0.55</paramValue>
	<paramValue name="regulated_dir">up-regulated</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.confidence" default="0.7"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" default="down-regulated"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence"/>
       <column name="fold_change" />
       <sql>
            <![CDATA[
          SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                 round(de.fold_change, 2) as fold_change,
                 round(de.confidence, 2) as confidence
          from ApidbTuning.GeneAttributes ga, rad.differentialexpression de, 
               core.tableinfo ti, rad.analysis a
          where ti.name = 'GeneFeature'
          and ti.table_id = de.table_id
          and ga.na_feature_id = de.row_id
          and a.analysis_id = de.analysis_id
          and $$regulated_dir$$ (de.fold_change) >= $$fold_change$$
          and de.confidence >= $$confidence$$
          and a.name = 'DOZI KO vs. Wild Type Expression Analysis'
        ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByWatersDifferentialExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="fold_change">0.55</paramValue>
	<paramValue name="regulated_dir">up-regulated</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.confidence" default="0.7"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- BergheiGenesByExpressionPercentile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="BergheiGenesByExpressionPercentile" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.waters_profilesets"/>
        <paramRef ref="geneParams.r_min_expression_percentile"/>
        <paramRef ref="geneParams.r_max_expression_percentile"/>
        <paramRef ref="geneParams.yt_min_expression_percentile"/>
        <paramRef ref="geneParams.yt_max_expression_percentile"/>
        <paramRef ref="geneParams.ys_min_expression_percentile"/>
        <paramRef ref="geneParams.ys_max_expression_percentile"/>
        <paramRef ref="geneParams.ms_min_expression_percentile"/>
        <paramRef ref="geneParams.ms_max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
        SELECT DISTINCT fred.source_id, '@PROJECT_ID@' as project_id
        FROM (
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'R'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$r_min_expression_percentile$$
              AND pe.value <= $$r_max_expression_percentile$$
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'YT'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$yt_min_expression_percentile$$
              AND pe.value <= $$yt_max_expression_percentile$$
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'YS'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$ys_min_expression_percentile$$
              AND pe.value <= $$ys_max_expression_percentile$$
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'MS'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$ms_min_expression_percentile$$
              AND pe.value <= $$ms_max_expression_percentile$$
          ) fred
          ORDER BY fred.source_id
        ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="BergheiGenesByExpressionPercentile" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.waters_profilesets" quote="false"/>
        <paramRef ref="geneParams.r_min_expression_percentile"/>
        <paramRef ref="geneParams.r_max_expression_percentile"/>
        <paramRef ref="geneParams.yt_min_expression_percentile"/>
        <paramRef ref="geneParams.yt_max_expression_percentile"/>
        <paramRef ref="geneParams.ys_min_expression_percentile"/>
        <paramRef ref="geneParams.ys_max_expression_percentile"/>
        <paramRef ref="geneParams.ms_min_expression_percentile"/>
        <paramRef ref="geneParams.ms_max_expression_percentile"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesWithMrnaHalfLife -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithMrnaHalfLife" includeProjects="PlasmoDB"
           isCacheable="true">
      <testParamValues>
	<paramValue name="halfLifeStage1">R</paramValue>
	<paramValue name="halfLifeStage2">S</paramValue>
      </testParamValues>

      <paramRef ref="geneParams.halfLifeStage1"/>
      <paramRef ref="geneParams.halfLifeStage2"/>
      <column name="project_id"/>
      <column name="source_id"/>
      <column name="half_life_one"/>
      <column name="half_life_two"/>
      <sql>
	<![CDATA[
SELECT hl1.source_id, hl1.half_life as half_life_one, hl2.half_life as half_life_two, '@PROJECT_ID@' as project_id 
FROM
(select round(pe.value,2) as half_life, p.source_id as source_id
           from apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and p.source_id = ga.source_id
            and ga.gene_type = 'protein coding'
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and  pen.profile_element_name_id in (substr('$$halfLifeStage1$$', 1, instr('$$halfLifeStage1$$', ',') -1))
) hl1,
(select round(pe.value,2) as std_dev, p.source_id
           from apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and p.source_id = ga.source_id
            and ga.gene_type = 'protein coding'
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and  pen.profile_element_name_id in (substr('$$halfLifeStage1$$', (instr('$$halfLifeStage1$$', ',') + 1), instr('$$halfLifeStage1$$', ',') -1))
) sd1,
(select round(pe.value,2) as half_life, p.source_id
           from apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and p.source_id = ga.source_id
            and ga.gene_type = 'protein coding'
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and  pen.profile_element_name_id in (substr('$$halfLifeStage2$$', 1, instr('$$halfLifeStage2$$', ',') -1))
) hl2,
(select round(pe.value,2) as std_dev, p.source_id
           from apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p, ApidbTuning.GeneAttributes ga
           where p.profile_set_id = pen.profile_set_id
            and p.source_id = ga.source_id
            and ga.gene_type = 'protein coding'
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and  pen.profile_element_name_id in (substr('$$halfLifeStage2$$', (instr('$$halfLifeStage2$$', ',') + 1), instr('$$halfLifeStage2$$', ',') -1))
) sd2
WHERE hl1.source_id = sd1.source_id
AND   hl1.source_id = hl2.source_id
AND   hl1.source_id = sd2.source_id
AND (hl2.half_life - sd2.std_dev) > (hl1.half_life + sd1.std_dev)
ORDER BY hl1.source_id
	]]>
      </sql>
    </sqlQuery>  

    <processQuery name="GenesWithMrnaHalfLife" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="halfLifeStage1">R</paramValue>
	<paramValue name="halfLifeStage2">S</paramValue>
      </testParamValues>
      <paramRef ref="geneParams.halfLifeStage1" quote="false"/>
      <paramRef ref="geneParams.halfLifeStage2" quote="false"/>
      <wsColumn name="source_id" width="50" wsName="source_id"/>
      <wsColumn name="project_id" width="20" wsName="project_id"/>
      <wsColumn name="half_life_one"/>
      <wsColumn name="half_life_two"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesBySubcellularLocalization -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySubcellularLocalization" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.localization"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
              SELECT DISTINCT s.source_id, '@PROJECT_ID@' as project_id
              FROM ApidbTuning.Subcellular s
              WHERE targetting_domain = $$localization$$
              ORDER BY s.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesBySubcellularLocalization" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.localization" quote="false"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByProteomicsProfile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByProteomicsProfile" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.asexual_blood_stages_value"/>
        <paramRef ref="geneParams.gametocytes_value"/>
        <paramRef ref="geneParams.ookinetes_value"/>
        <paramRef ref="geneParams.oocysts_value"/>
        <paramRef ref="geneParams.sporozoites_value"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT pb.source_id, '@PROJECT_ID@' as project_id FROM
            (SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 1 AND ('any' = $$asexual_blood_stages_value$$ OR
                                           pe.value = $$asexual_blood_stages_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 2 AND ('any' = $$gametocytes_value$$ OR
                                           pe.value = $$gametocytes_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 3 AND ('any' = $$ookinetes_value$$ OR
                                           pe.value = $$ookinetes_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 4 AND ('any' = $$oocysts_value$$ OR
                                           pe.value = $$oocysts_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 5 AND ('any' = $$sporozoites_value$$ OR
                                           pe.value = $$sporozoites_value$$))) pb
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByProteomicsProfile" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.asexual_blood_stages_value" quote="false"/>
        <paramRef ref="geneParams.gametocytes_value" quote="false"/>
        <paramRef ref="geneParams.ookinetes_value" quote="false"/>
        <paramRef ref="geneParams.oocysts_value" quote="false"/>
        <paramRef ref="geneParams.sporozoites_value" quote="false"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByReagents -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByReagents" includeProjects="PlasmoDB,CryptoDB,ToxoDB"
              isCacheable="true">

        <paramRef ref="geneParams.reagent_type"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
               SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
               FROM ApidbTuning.GeneAttributes gf,
                dots.DbRefAaFeature df,
                sres.DbRef dbr, sres.ExternalDatabaseRelease edr,
                sres.ExternalDatabase ed, dots.TranslatedAAFeature taf,
                dots.Transcript t
               WHERE ed.name in ('MR4DBxRefs','Pf_MR4Reagents_RSRC','AntibodyDBxRefs')
                 AND edr.external_database_id = ed.external_database_id
                 AND dbr.external_database_release_id = edr.external_database_release_id
                 AND (LOWER(dbr.secondary_identifier) = $$reagent_type$$
                      OR $$reagent_type$$ = 'any')
                 AND df.db_ref_id = dbr.db_ref_id
                 AND taf.aa_feature_id = df.aa_feature_id
                 AND t.na_feature_id = taf.na_feature_id
                 AND gf.na_feature_id = t.parent_id

           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByReagents" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
<!--
<paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.mr4_reagent_type" quote="false"/>
-->
          <paramRef ref="geneParams.reagent_type" quote="false"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExportPrediction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExportPrediction" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism"/>
        <paramRef ref="geneParams.min_exportpred_score"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="exportpred_score"/>
        <sql>
            <![CDATA[
                SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
                  max(df.score) as exportpred_score
                FROM dots.aasequence aa,dots.DomainFeature df, dots.translatedaafeature tf,
                     dots.transcript t, ApidbTuning.GeneAttributes gf
                WHERE  aa.taxon_id in ($$organism$$)
                   AND aa.aa_sequence_id = df.aa_sequence_id
                   AND df.algorithm_name = 'exportpred'
                   AND df.score >= $$min_exportpred_score$$
                   AND tf.aa_sequence_id = aa.aa_sequence_id
                   AND t.na_feature_id = tf.na_feature_id
                   AND gf.na_feature_id = t.parent_id
                   GROUP BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByExportPrediction" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" includeProjects="PlasmoDB,EuPathDB"/>
        <!--<paramRef ref="organismParams.organism" queryRef="organismVQ.withTriTrypGenes" includeProjects="TriTrypDB,EuPathDB"/> -->
        <paramRef ref="geneParams.min_exportpred_score"/>	
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="exportpred_score"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByCentromereProximity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByCentromereProximity" includeProjects="PlasmoDB,ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.max_centromere_distance"/>
        <paramRef ref="sharedParams.centromere_chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dist_centromere"/>
        <sql>
            <![CDATA[
                SELECT gcd.gene AS source_id, '@PROJECT_ID@' as project_id,
                TRIM(TO_CHAR(gcd.centromere_distance,'9,999,999')) as dist_centromere
                FROM ApidbTuning.GeneCentromereDistance gcd, ApidbTuning.GeneAttributes ga
                WHERE gcd.gene = ga.source_id
                  AND gcd.centromere_distance <= $$max_centromere_distance$$
                  AND gcd.genomic_sequence in ($$centromere_chromosome$$)
                ORDER BY gcd.genomic_sequence, ga.start_min
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByCentromereProximity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.max_centromere_distance" noTranslation="true"/>
        <paramRef ref="sharedParams.chromosome" quote="false"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="dist_centromere"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByTelomereProximity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTelomereProximity" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.distanceFromTelomere"/>
        <paramRef ref="sharedParams.chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dist_telomere"/>
        <sql>
            <![CDATA[
	    SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
            trim(to_char(LEAST(s.length - l.end_max,l.start_min),'999,999')) as dist_telomere
	    FROM ApidbTuning.GeneAttributes gf, dots.NALOCATION l, dots.EXTERNALNASEQUENCE s
	    WHERE gf.na_sequence_id = s.na_sequence_id
	     AND l.na_feature_id = gf.na_feature_id
	     AND s.source_id  in ($$chromosome$$)
	     AND (l.end_max >= s.length - $$distanceFromTelomere$$
                                      OR l.start_min <= 1 + $$distanceFromTelomere$$)
	     ORDER BY s.source_id,l.end_max
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByTelomereProximity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.distanceFromTelomere" noTranslation="true"/>
        <paramRef ref="sharedParams.chromosome_telomere"  quote="false"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="dist_telomere"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByNonnuclearGenomicRegion -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByNonnuclearGenomicRegion" includeProjects="PlasmoDB,ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.nonnuclearSequence"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id
            FROM ApidbTuning.GeneAttributes gf, dots.NaSequence ens
            WHERE ens.source_id IN ($$nonnuclearSequence$$)
              AND gf.na_sequence_id = ens.na_sequence_id
              AND end_max >= REGEXP_REPLACE('$$start_point$$', ',| ','') 
              AND (start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByNonnuclearGenomicRegion" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.nonnuclearSequence"  quote="false"/>
        <paramRef ref="sharedParams.start_point"  noTranslation="true"/>
        <paramRef ref="sharedParams.end_point"  noTranslation="true"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesWithStructurePrediction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithStructurePrediction" includeProjects="PlasmoDB"
              isCacheable="true">
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.aafeature aaf, ApidbTuning.GeneAttributes gf, dots.transcript t,
                 dots.DbRefaaFeature drnf,  sres.DbRef dr,
                 sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
            WHERE gf.na_feature_id = t.parent_id
              AND t.na_feature_id = aaf.na_feature_id
              AND aaf.aa_feature_id = drnf.aa_feature_id
              AND drnf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name = 'Pf_predictedProteinStructures_RSRC'
            ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesWithStructurePrediction" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByPdbSimilarity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPdbSimilarity" includeProjects="PlasmoDB,TriTrypDB,CryptoDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPdbSimilarity" />
        <paramRef ref="geneParams.clades"/>
        <paramRef ref="geneParams.pvalue_cutoff"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="pvalue"/>
        <sql>
            <![CDATA[
            SELECT ps.source_id, '@PROJECT_ID@' as project_id, 
                   min(to_binary_double(ps.pvalue_mant || 'e' || ps.pvalue_exp)) pvalue
            FROM ApidbTuning.PdbSimilarity ps
            WHERE ps.pdb_taxon_id IN
                              (SELECT taxon_id FROM sres.taxon
                               CONNECT BY parent_id = PRIOR taxon_id
                               START WITH taxon_id IN ($$clades$$))
              AND ps.gene_taxon_id IN ($$organism$$)
              AND ps.pvalue_exp < $$pvalue_cutoff$$
            GROUP BY ps.source_id
            ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByPdbSimilarity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPdbSimilarity"/>
        <paramRef ref="geneParams.clades" quote="false"/>
        <paramRef ref="geneParams.pvalue_cutoff"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
          <wsColumn name="pvalue" width="32"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByProteinDbAccession -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- query appears unused
    <sqlQuery name="GenesByProteinDbAccession" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes" includeProjects="PlasmoDB"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withTriTrypGenes" includeProjects="TriTrypDB"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
             FROM ApidbTuning.GeneAttributes gf, dots.DbRefNaFeature drnf,
                  sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                  sres.ExternalDatabase ed, dots.ExternalNaSequence ens
             WHERE (dr.primary_identifier = $$accession$$
                    OR dr.secondary_identifier = $$accession$$)
               AND gf.na_feature_id = drnf.na_feature_id
               AND drnf.db_ref_id = dr.db_ref_id
               AND dr.external_database_release_id
                     = edr.external_database_release_id
               AND edr.external_database_id = ed.external_database_id
               AND ed.name IN ('NRDB_gb_dbXRefBySeqIdentity',
                           /*  'NRDB_pdb_dbXRefBySeqIdentity', */
                               'NRDB_ref_dbXRefBySeqIdentity',
                               'NRDB_sp_dbXRefBySeqIdentity',
                               'GenBank')
              AND gf.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id IN ($$organism$$)
            ORDER BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>  

   -->
<!-- I THINK IT I NOT USED 
    <processQuery name="GenesByProteinDbAccession" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes" includeProjects="PlasmoDB"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withTriTrypGenes" includeProjects="TriTrypDB"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>
-->


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesWithProteinLowComplexity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

  <!--
    <sqlQuery name="GenesWithProteinLowComplexity" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.percentLowComplexity"/>
        <paramRef ref="sharedParams.chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
	    select gf.source_id, '@PROJECT_ID@' as project_id
	    from Dots.LowComplexityAAFeature lc, ApidbTuning.GeneAttributes gf,
	         Dots.ExternalNASequence ens, Dots.AALocation al, 
                 Dots.AASequence s, Dots.Transcript t, Dots.TranslatedAAFeature taf
            where ens.source_id in ($$chromosome$$)
            and gf.na_sequence_id = ens.na_sequence_id
            and t.parent_id = gf.na_feature_id
            and taf.na_feature_id = t.na_feature_id
            and s.aa_sequence_id = taf.aa_sequence_id
            and lc.aa_sequence_id = s.aa_sequence_id
            and al.aa_feature_id = lc.aa_feature_id
	    group by gf.source_id
	    having sum(100 *(al.end_max - al.start_min)/s.length ) > $$percentLowComplexity$$
            ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesWithProteinLowComplexity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.percentLowComplexity"/>
        <paramRef ref="sharedParams.chromosome"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>
   -->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByGametocyteExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

   <!-- got rid of the unused pr_organism parameter -->

    <sqlQuery name="GenesByGametocyteExpression" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.day_and_strain"/>
        <paramRef ref="geneParams.min_expression_percentile" default="80"/>
        <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <column name="project_id"/>
        <column name="source_id"  width="50"/>
        <column name="max_percentile"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT p.source_id, '@PROJECT_ID@' as project_id,
                   round(max((pe.value)), 1) as max_percentile 
            FROM apidb.profile p, apidb.profileElementName pen,
                 apidb.profileElement pe
            WHERE (pe.value BETWEEN $$min_expression_percentile$$ AND $$max_expression_percentile$$)
              AND pen.profile_element_name_id IN ($$day_and_strain$$)
              AND pen.profile_set_id = p.profile_set_id
              AND p.profile_id = pe.profile_id
              AND pe.element_order = pen.element_order
            GROUP BY p.source_id
            ]]>
       </sql>
    </sqlQuery>  

    
    <processQuery name="GenesByGametocyteExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.day_and_strain" quote="false"/>
        <paramRef ref="geneParams.min_expression_percentile" default="80"/>
        <paramRef ref="geneParams.max_expression_percentile" default="100"/>
	  <wsColumn name="source_id" width="50" wsName="source_id"/>
	  <wsColumn name="project_id" width="20" wsName="project_id"/>
	  <wsColumn name="max_percentile" />
    </processQuery>
 
 
    <sqlQuery name="ByWeightFilter" isCacheable="true" doNotTest="true">
        <paramRef ref="geneParams.gene_result"/>
        <paramRef ref="sharedParams.min_weight" default="0"/>
        <paramRef ref="sharedParams.max_weight" default="100"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="wdk_weight" />
        <sql>
            <![CDATA[
            SELECT a.source_id, a.project_id, a.wdk_weight
            FROM $$gene_result$$ a
            WHERE a.wdk_weight >= $$min_weight$$
              AND a.wdk_weight <= $$max_weight$$
            ]]>
       </sql>
    </sqlQuery>

    <sqlQuery name="GenesByGametocyteExprFoldChange" includeProjects="PlasmoDB" isCacheable='true'>
      <testParamValues>
	<paramValue name="gameto_reference">Day1</paramValue>
	<paramValue name="gameto_comparitor">Day2</paramValue>
      </testParamValues>

      <paramRef ref="geneParams.gameto_fldchnge_strain1"/>
      <paramRef ref="geneParams.gameto_reference"/>
      <paramRef ref="geneParams.gameto_fldchnge_strain2"/>
      <paramRef ref="geneParams.gameto_comparitor"/>
      <paramRef ref="geneParams.fold_change"/>
      <paramRef ref="geneParams.regulated_dir"/>
      <paramRef ref="geneParams.protein_coding_only"/>
      <column name="project_id"/>
      <column name="source_id"/>
      <column name="fold_change"/>
      <column name="val_one"/>
      <column name="val_two"/>
      <sql>
          <![CDATA[
select one.source_id, '@PROJECT_ID@' as project_id,
                  round((CASE WHEN power(2, one.val) / power(2,two.val) >= 1
                                 THEN power(2, one.val) / power(2,two.val)
                           ELSE -1 / (power(2,one.val) / power(2,two.val))
                   END),1) as fold_change,
        round(one.val,2) as val_one,
        round(two.val,2) as val_two
 from (
 select p.source_id, pe.value as val
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$gameto_reference$$)
 and p.profile_set_id = $$gameto_fldchnge_strain1$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 ) two,
 (
 select p.source_id, pe.value as val
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$gameto_comparitor$$)
 and p.profile_set_id = $$gameto_fldchnge_strain2$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 ) one
 where one.source_id = two.source_id
 and  ( $$regulated_dir$$ (
               case when one.val >= two.val
                   then power(2,one.val) / power(2,two.val)
                   else -( power(2,two.val) / power(2,one.val))
                   end ) >= $$fold_change$$)
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByGametocyteExprFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <testParamValues>
	<paramValue name="gameto_reference">Day1</paramValue>
	<paramValue name="gameto_comparitor">Day2</paramValue>
      </testParamValues>

      <paramRef ref="geneParams.gameto_fldchnge_strain1"/>
      <paramRef ref="geneParams.gameto_reference" quote="false"/>
      <paramRef ref="geneParams.gameto_fldchnge_strain2"/>
      <paramRef ref="geneParams.gameto_comparitor" quote="false"/>
      <paramRef ref="geneParams.fold_change"/>
      <paramRef ref="geneParams.regulated_dir"/>
      <paramRef ref="geneParams.protein_coding_only" quote="false"/>
      <wsColumn name="project_id" width="20" wsName="project_id"/>
      <wsColumn name="source_id" width="50" wsName="source_id"/>
      <wsColumn name="fold_change" wsName="fold_change"/>
      <wsColumn name="val_one" wsName="avg_group_one"/>
      <wsColumn name="val_two" wsName="avg_group_two"/>

    </processQuery> 



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Generic Splice Site Query for TriTrypDB -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGenericSpliceSites" doNotTest="true" includeProjects="TriTrypDB" 
              isCacheable="true">
        <paramRef ref="geneParams.splice_site_generic"/>
        <paramRef ref="geneParams.splice_site_sample_one"/>
        <paramRef ref="geneParams.splice_site_sample_two"/>
        <paramRef ref="geneParams.percent_diff"/>
        <paramRef ref="geneParams.min_norm_count"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="sample_one"/>
        <column name="sample_two"/>
        <column name="utr_len_one"/>
        <column name="utr_len_two"/>
        <column name="diff_cds_start"/>
      <sql>
          <![CDATA[
SELECT DISTINCT t1.source_id, t1.sample_name AS sample_one,t2.sample_name AS sample_two,
   t1.dist_to_first_atg AS utr_len_one, t2.dist_to_first_atg AS utr_len_two,
   CASE WHEN (t1.first_atg_location = t2.first_atg_location) THEN 'no' ELSE 'yes' END as diff_cds_start,
  '@PROJECT_ID@' as project_id
FROM apidb.SpliceSiteGenes t1, apidb.SpliceSiteGenes t2
WHERE t1.external_database_release_id = $$splice_site_generic$$
AND t1.external_database_release_id = t2.external_database_release_id 
AND t1.is_dominant = 1 AND t2.is_dominant =1
AND t1.sample_name = '$$splice_site_sample_one$$'
AND t2.sample_name = '$$splice_site_sample_two$$'
AND t1.sample_name != t2.sample_name 
AND t1.source_id = t2.source_id 
AND t1.location != t2.location
AND t1.percent_fraction >= $$percent_diff$$
AND t2.percent_fraction >= $$percent_diff$$
AND t1.count_per_million >=$$min_norm_count$$
AND t2.count_per_million >=$$min_norm_count$$
          ]]>
      </sql>
   </sqlQuery>

    <processQuery name="GenesByGenericSpliceSites" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.splice_site_generic" quote="false"/>
        <paramRef ref="geneParams.splice_site_sample_one"/>
        <paramRef ref="geneParams.splice_site_sample_two"/>
        <paramRef ref="geneParams.percent_diff"/>
        <wsColumn name="project_id" width="20" wsName="project_id"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="sample_one" wsName="sample_one"/>
        <wsColumn name="utr_len_one" wsName="utr_len_one"/>
        <wsColumn name="sample_two" wsName="sample_two"/>
        <wsColumn name="utr_len_two" wsName="utr_len_two"/>
        <wsColumn name="diff_cds_start" wsName="diff_cds_start"/>
    </processQuery>



    <sqlQuery name="GenesWithUserComments" excludeProjects="EuPathDB"
              isCacheable="false">
        <paramRef ref="sharedParams.timestamp"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gi.gene as source_id, '@PROJECT_ID@' as project_id
            FROM ApidbTuning.GeneId gi
            WHERE id in (SELECT stable_id
                         FROM @COMMENT_SCHEMA@comments@COMMENT_DBLINK@
                         WHERE project_name = '@PROJECT_ID@')
            ]]>
       </sql>
    </sqlQuery> 

  <processQuery name="GenesWithUserComments" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.timestamp"/>
      <wsColumn name="source_id" width="50" wsName="source_id"/>   
      <wsColumn name="project_id" width="20" wsName="project_id"/>
    </processQuery>


    
  </querySet>

  <querySet name="GeneTransforms" queryType="transform" doNotTest="true">


    <sqlQuery name="GenesByExpandResult" includeProjects="ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.gene_result"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="wdk_weight"/>
        <sql>
            <![CDATA[
                    SELECT gb.source_id, gb.project_id, max(c.wdk_weight) AS wdk_weight
                    FROM $$gene_result$$ c, ApidbTuning.GeneAttributes ga, ApidbTuning.GeneAttributes gb
                    WHERE ga.source_id = c.source_id
                    AND gb.gene_id = ga.gene_id
					GROUP BY gb.source_id, gb.project_id
            ]]>
       </sql>
    </sqlQuery> 
<!--
    <sqlQuery name="GenesByExpandOrganism" includeProjects="ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.gene_result"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                    SELECT gb.source_id, gb.project_id
                    FROM $$gene_answer$$, ApidbTuning.GeneAttributes ga, ApidbTuning.GeneAttributes gb
                    WHERE $$gene_answer.condition$$
                    AND ga.source_id = $$gene_answer$$.source_id
                    AND gb.gene_id = ga.gene_id
                    AND gb.organism = ga.organism
            ]]>
       </sql>
    </sqlQuery> 
-->

  </querySet>

</wdkModel>
