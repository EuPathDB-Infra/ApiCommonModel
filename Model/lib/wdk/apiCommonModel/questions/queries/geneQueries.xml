<wdkModel>

<querySet name="GeneId" queryType="id">

  <!-- notes: 
 
   * tmhmm ws needs to use new tm_max/min params 

   * retiring apidb.ToxodbGenes by joining to GeneAttributes from genefeature.source_id
     (which filters away gene predictions)

   * motif search new param names:
     - motif_organism
     - motif_expression

   * text search needs a clean up.  all four sites have differences.

   * assuming all sites have pathway info, which we should be getting from pathtools.

   * ortholog pattern query: lose api-specific "internal" params.  (why do we need these?)

   * does the GeneFeature table have an attribute we can use to mark annotated genes?  this
     will allow us to skip the join to GeneAttributes (so toxo can dodge gene predictions)

   * toxo has to use the GeneId table 

   * why does toxo have a different interpro query?
  -->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- temporary question for modified annotation -->  
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- the workshop (re) annotations have become the official annotations and this section is obsolete

    <sqlQuery name="GenesWithModifiedAnnotation" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.plasmo_annot_status"/>
        <paramRef ref="geneParams.plasmo_new_product"/>
        <paramRef ref="geneParams.plasmo_new_model"/>
        <paramRef ref="geneParams.plasmo_new_go"/>
        <paramRef ref="geneParams.plasmo_new_ec"/>
        <paramRef ref="geneParams.plasmo_snapshot_changed"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="annot_status"/>
        <column name="new_product_desc"/>
       <sql>
             <![CDATA[
            SELECT DISTINCT na.source_id, '@PROJECT_ID@' as project_id, 
              na.status as annot_status, na.product as new_product_desc
            FROM apidb.trackNewAnnotation na
            where na.new_product in ($$plasmo_new_product$$)
            and na.new_go in ($$plasmo_new_go$$)
            and na.new_ec in ($$plasmo_new_ec$$)
            and na.new_protein in ($$plasmo_new_model$$)
            and na.status in ($$plasmo_annot_status$$)
            and na.snapshot_changed in ($$plasmo_snapshot_changed$$)
           ]]>
       </sql>
    </sqlQuery>
-->


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- question for old Plasmo annotations(v 5.5) after the workshop annotation became the official annotation (v 6.0) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <sqlQuery name="GenesByOldAnnotation" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.plasmo_annot_status"/>
        <paramRef ref="geneParams.plasmo_new_product"/>
        <paramRef ref="geneParams.plasmo_new_model"/>
        <paramRef ref="geneParams.plasmo_new_go"/>
        <paramRef ref="geneParams.plasmo_new_ec"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="annot_status"/>
        <column name="new_product_desc"/>
       <sql>
             <![CDATA[
            SELECT DISTINCT na.source_id, '@PROJECT_ID@' as project_id, 
              na.status as annot_status, na.product as new_product_desc
            FROM apidb.TrackOldAnnotation na
            where na.new_product in ($$plasmo_new_product$$)
            and na.new_go in ($$plasmo_new_go$$)
            and na.new_ec in ($$plasmo_new_ec$$)
            and na.new_protein in ($$plasmo_new_model$$)
            and na.status in ($$plasmo_annot_status$$)
            ]]>
       </sql>
    </sqlQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPhenotype" includeProjects="TriTrypDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPhenotype"/>
        <paramRef ref="geneParams.phenotype"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="phenotype_loi"/>
       <sql>
             <![CDATA[
               select si.gene as source_id,'@PROJECT_ID@' as project_id,
                 count(distinct db_xref) as phenotype_loi
               from apidb.sirna si, apidb.geneattributes ga
               where si.go_term || si.pato_term in ($$phenotype$$)
               and ga.source_id = si.gene
               group by si.gene,'@PROJECT_ID@'
           ]]>
       </sql>
    </sqlQuery>

<processQuery name="GenesByPhenotype" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
         <paramRef ref="organismParams.organism" queryRef="organismVQ.withPhenotype"/>
        <paramRef ref="geneParams.phenotype" quote="false"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>   
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="phenotype_loi" width="32"/>
 </processQuery>


    <sqlQuery name="GenesWithUpdatedAnnotation" includeProjects="TriTrypDB"
              isCacheable="true">
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="genedb_link"/>
       <sql>
             <![CDATA[
                  select ga.source_id, '@PROJECT_ID@' as project_id, '<a href="http://beta.genedb.org/NamedFeature?name=' || ga.source_id || '" target="genedb">GeneDB record</a>' as genedb_link
                  from sres.dbref r, sres.externaldatabaserelease rel, dots.dbrefnafeature rf,
                  apidb.geneattributes ga, sres.externaldatabase ed
                  where ga.na_feature_id = rf.na_feature_id(+)
                  and rf.db_ref_id = r.db_ref_id
                  and r.external_database_release_id = rel.external_database_release_id
                  and rel.external_database_id = ed.external_database_id
                  and ed.name = 'Updated genes DBRefs'
           ]]>
       </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ChIP chip chromatin marks -->  
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByChIPchipToxo" includeProjects="ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.chip_strains"/>
        <paramRef ref="geneParams.chip_antibody_toxo"/>
        <paramRef ref="geneParams.chip_replicates"/>
        <paramRef ref="geneParams.chip_distance"/>
        <paramRef ref="geneParams.chip_direction"/>
        
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="chip_distance"/>
        <column name="chip_total_reps"/>
        <column name="chip_antibodies"/>
        <column name="chip_treatment"/>

       <sql>
             <![CDATA[
select rep_1.gene_source_id as source_id, '@PROJECT_ID@' as project_id,
       rep_1.antibody as chip_antibodies,
       rep_1.treatment as chip_treatment,
       min(rep_1.distance) as chip_distance,
       count(*) as chip_total_reps 
from  (select ccg.gene_source_id ,cpp.antibody,cpp.treatment,cpp.replicate,ccg.distance
       from   apidb.CHIPCHIPGENE ccg, 
              rad.DataTransformationResult dtf,
              apidb.ChipProtocolParams cpp
      where ccg.chip_na_feature_id = dtf.row_id 
      and   dtf.analysis_id = cpp.analysis_id
      and  rtrim(cpp.antibody || '|' || cpp.treatment) in ($$chip_antibody_toxo$$)   
      and   ccg.distance <= $$chip_distance$$ 
      and   ('Either' = $$chip_direction$$ OR ccg.direction = $$chip_direction$$)
      and   cpp.strain = $$chip_strains$$ 
      and cpp.replicate = '1') rep_1
full outer join
     (select ccg.gene_source_id ,cpp.replicate,ccg.distance
      from  apidb.CHIPCHIPGENE ccg, 
            rad.DataTransformationResult dtf,
            apidb.ChipProtocolParams cpp
      where ccg.chip_na_feature_id = dtf.row_id 
      and   dtf.analysis_id = cpp.analysis_id
      and  rtrim(cpp.antibody || '|' || cpp.treatment) in ($$chip_antibody_toxo$$)   
      and   ccg.distance <= $$chip_distance$$
      and   ('Either' = $$chip_direction$$  OR ccg.direction = $$chip_direction$$)
      and   cpp.strain = $$chip_strains$$
      and cpp.replicate = '2') rep_2
      on rep_1.gene_source_id = rep_2.gene_source_id
      where ('No' = $$chip_replicates$$ or (rep_1.replicate = '1' and rep_2.replicate = '2'))
group by rep_1.gene_source_id,rep_1.antibody,rep_1.treatment,rep_1.replicate,rep_2.replicate
order by rep_1.gene_source_id
          ]]>
       </sql>
    </sqlQuery>

       
  <processQuery name="GenesByChIPchipToxo" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.chip_strains"  quote="false"/>
        <paramRef ref="geneParams.chip_antibody_toxo" quote="false"/> 
        <paramRef ref="geneParams.chip_replicates"  quote="false"/>
        <paramRef ref="geneParams.chip_distance"  quote="false"/>
        <paramRef ref="geneParams.chip_direction"  quote="false"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>   
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="chip_distance" width="32"/>
        <wsColumn name="chip_total_reps" width="32"/>
        <wsColumn name="chip_antibodies" width="32"/>
        <wsColumn name="chip_treatment" width="32"/>       
      
    </processQuery>



    <sqlQuery name="GenesByChIPchipPlasmo" includeProjects="PlasmoDB"
              isCacheable="true"> 

        <paramRef ref="geneParams.chip_experiment"/>
        <paramRef ref="geneParams.chip_antibody_plasmo"/>
        <paramRef ref="geneParams.chip_genotypes"/> 
        <paramRef ref="geneParams.chip_distance"/>
        <paramRef ref="geneParams.chip_direction"/>

        <column name="source_id"/>
        <column name="project_id"/>
        <column name="chip_distance"/>
        <column name="chip_antibodies"/>
        <column name="chip_genotype"/>
        <column name="chip_score"/>
 

    
      <sql>
             <![CDATA[
            select inner.gene_source_id as source_id, '@PROJECT_ID@' as project_id,
                   min(inner.distance) as chip_distance,
                   apidb.tab_to_string(CAST(COLLECT(distinct(inner.genotype)) AS apidb.varchartab),', ') as chip_genotype,
                   apidb.tab_to_string(CAST(COLLECT(distinct(inner.antibody)) AS apidb.varchartab),', ') as chip_antibodies,
                   max(inner.score) as chip_score
            from (select ccg.gene_source_id ,cpp.antibody,min(ccg.distance) as distance,cpp.genotype as genotype,max(dtf.float_value) as score
              from  apidb.CHIPCHIPGENE ccg,
                    rad.DataTransformationResult dtf,
                    apidb.ChipProtocolParams cpp,
                    rad.protocol p
              where ccg.chip_na_feature_id = dtf.row_id
              and   dtf.analysis_id = cpp.analysis_id
              and   cpp.protocol_id = p.protocol_id
              and   lower(p.name) like lower('%$$chip_experiment$$%') 
              and   ccg.distance <= $$chip_distance$$
              and   ('not applicable' in lower($$chip_genotypes$$) OR lower(cpp.genotype) in  ($$chip_genotypes$$))
              and   ('not applicable' in lower($$chip_antibody_plasmo$$) OR lower(cpp.antibody) in  ($$chip_antibody_plasmo$$))
              and   ('Either' = $$chip_direction$$ OR ccg.direction = $$chip_direction$$)
              group by ccg.gene_source_id,cpp.antibody,cpp.genotype) inner
            group by inner.gene_source_id
           ]]>
       </sql>
    </sqlQuery>

  <processQuery name="GenesByChIPchipPlasmo" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 

        <paramRef ref="geneParams.chip_experiment" quote="false"/>
        <paramRef ref="geneParams.chip_antibody_plasmo"   quote="false"/>
        <paramRef ref="geneParams.chip_genotypes"  quote="false"/> 
        <paramRef ref="geneParams.chip_distance"   quote="false"/>
        <paramRef ref="geneParams.chip_direction"  quote="false"/> 
        <paramRef ref="geneParams.chip_score"      quote="false" />

        <wsColumn name="source_id" width="32" wsName="source_id"/>   
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="chip_distance" width="32"/>   
        <wsColumn name="chip_genotype" width="32"/>
        <wsColumn name="chip_antibodies" width="32"/>
        <wsColumn name="chip_score" width="32"/> 
      
    </processQuery>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Locus Tag  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneByLocusTag"  doNotTest="true" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids"/>
        <column name="source_id"/>
        <column name="project_id"/>
       <sql excludeProjects="TrichDB">
             <![CDATA[
            SELECT DISTINCT gi.gene AS source_id, '@PROJECT_ID@' as project_id
            FROM apidb.GeneId gi, apidb.geneattributes ga, @WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ ds
            WHERE ds.dataset_id = $$ds_gene_ids$$
              AND gi.id LIKE REGEXP_REPLACE(REPLACE(LOWER(ds.dataset_value),
                                                       '*', '%'),
                                               '[[:space:]]', '')
              AND gi.gene = ga.source_id
           ]]>
       </sql>

 <sql includeProjects="TrichDB">
             <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext,
                 @WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ ds
            WHERE ds.dataset_id = $$ds_gene_ids$$ 
              AND gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'T. vaginalis scaffolds' 
              AND gf.source_id LIKE REGEXP_REPLACE(REPLACE(ds.dataset_value,
                                                       '*', '%'),
                                               '[[:space:]]', '')
           ]]>
       </sql>

<!--
 <sql includeProjects="GiardiaDB">
             <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext,
                 @WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ ds
            WHERE ds.dataset_id = $$ds_gene_ids$$ 
              AND gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'G. lamblia contigs' 
              AND gf.source_id LIKE REGEXP_REPLACE(REPLACE(ds.dataset_value,
                                                       '*', '%'),
                                               '[[:space:]]', '')
           ]]>
       </sql>
-->

    </sqlQuery>

    <processQuery name="GeneByLocusTag" includeProjects="EuPathDB" doNotTest="true"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids" quote="false"/>
        <paramRef ref="sharedParams.signature"  quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
     </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Single locus tag  -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneBySingleLocusTag" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="geneParams.single_gene_id"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <sql excludeProjects="TrichDB">
            <![CDATA[
            SELECT DISTINCT gi.gene AS source_id, '@PROJECT_ID@' as project_id
            FROM apidb.GeneId gi, apidb.geneattributes ga
            WHERE gi.id LIKE REGEXP_REPLACE(REPLACE(LOWER($$single_gene_id$$),
                                                       '*', '%'),
                                               '[[:space:]]', '')
            AND gi.gene = ga.source_id
            ]]>
        </sql>
 
<sql includeProjects="TrichDB">
            <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext
            WHERE gf.source_id LIKE REGEXP_REPLACE(REPLACE($$single_gene_id$$,
                                                       '*', '%'),
                                               '[[:space:]]', '')
              AND gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'T. vaginalis scaffolds'
            ]]>
        </sql>


<!--
<sql includeProjects="GiardiaDB">
            <![CDATA[
            SELECT DISTINCT gf.source_id AS source_id, '@PROJECT_ID@' as project_id
            FROM dots.genefeature gf, sres.ExternalDatabaseRelease extr, sres.ExternalDatabase ext
            WHERE gf.source_id LIKE REGEXP_REPLACE(REPLACE($$single_gene_id$$,
                                                       '*', '%'),
                                               '[[:space:]]', '')
              AND gf.external_database_release_id=extr.external_database_release_id
              AND extr.external_database_id=ext.external_database_id
               AND ext.name = 'G. lamblia contigs'
            ]]>
        </sql>
-->


    </sqlQuery>

    <processQuery name="GeneBySingleLocusTag" includeProjects="EuPathDB"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.single_gene_id" quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
     </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- EC number -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByEcNumber" excludeProjects="EuPathDB"
               isCacheable="true">
        <paramRef ref="geneParams.ec_number_pattern"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEC"/>
        <column name="project_id"/>
        <column name="source_id"  />
        <sql >
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.GeneFeature gf, apidb.GenomicSequence gs,
                 dots.Transcript t, dots.translatedAaFeature taf,
                 dots.aaSequenceEnzymeClass asec, sres.enzymeClass ec,apidb.geneattributes ga
            WHERE gs.taxon_id in ($$organism$$)
              AND gs.na_sequence_id = gf.na_sequence_id
              AND ga.source_id = gf.source_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asec.aa_sequence_id
              AND asec.enzyme_class_id = ec.enzyme_class_id
              AND ec.ec_number LIKE REPLACE(REPLACE(REPLACE(REPLACE(lower($$ec_number_pattern$$),' ',''),'-', '%'),'*','%'),'any','%')
            ORDER BY gf.source_id
       </sql>
    </sqlQuery>

    <processQuery name="GenesByEcNumber" 
             isCacheable='true' includeProjects="EuPathDB"
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEC"/>
        <paramRef ref="geneParams.ec_number_pattern" quote="false"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
    </processQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Transmembrane domains -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTransmembraneDomains" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_tm"/>
        <paramRef ref="geneParams.max_tm"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT ga.source_id, '@PROJECT_ID@' as project_id
            from dots.nasequence nas, apidb.geneattributes ga
            where ga.tm_count >= $$min_tm$$ 
            AND ga.tm_count <= $$max_tm$$
            AND nas.na_sequence_id = ga.na_sequence_id
            AND nas.taxon_id IN ($$organism$$)
           ]]>
        </sql>
    </sqlQuery>

    <processQuery name="GenesByTransmembraneDomains" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.min_tm"/>
        <paramRef ref="geneParams.max_tm"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Has Phylogenetic Tree -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPhylogeneticTree" includeProjects="GiardiaDB" 
              isCacheable="true">

        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
              select distinct tree.source_id, '@PROJECT_ID@' as project_id 
              from apidb.phylogenetictree tree
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByPhylogeneticTree" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" default="Giardia Assemblage A isolate WB" visible="false" />
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Gene type -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGeneType" excludeProjects="EuPathDB" 
              isCacheable="true">
        <paramRef ref="geneParams.geneType"/>
        <paramRef ref="geneParams.includePseudogenes"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="is_pseudo" />
        <sql>
            <![CDATA[
            SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
              decode(ga.is_pseudo,0,'No',1,'Yes') as is_pseudo
            FROM dots.NaSequence ens, apidb.GeneAttributes ga
            WHERE ga.gene_type IN ($$geneType$$)
              AND ga.na_sequence_id = ens.na_sequence_id
              and ga.is_pseudo in ($$includePseudogenes$$)
              AND ens.taxon_id IN ($$organism$$)
              AND ga.project_id = '@PROJECT_ID@'
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByGeneType" includeProjects="EuPathDB"
         isCacheable='true' processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
       <paramRef ref="geneParams.includePseudogenes"/>
       <paramRef ref="geneParams.geneType" quote="false"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="source_id" width="60" wsName="source_id"/>
       <wsColumn name="is_pseudo" width="32" wsName="is_pseudo"/>
    </processQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- BLAST   when apidb using apifed (instead of wublast), remember to set useTermOnly in the organism param, in similarityParams.xml   -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <processQuery name="GenesBySimilarity" 
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">

        <testParamValues includeProjects="CryptoDB">
            <paramValue name="BlastQuerySequence">AACCCTAATCATTCCAACTTTGTTTCCAATTCCA</paramValue>
        </testParamValues>
        <testParamValues includeProjects="ToxoDB">
            <paramValue name="BlastQuerySequence">CTGCAAATCGTCAATGTCTTGTCTGCACAAGCAAACAGCCTCGGAGGCGGCGAAACACTCCGGGGCGAGCGCCTTGTTGACGCTAGCACCTTTCTGGTGATGGCGATCGGCATTCGCGGC</paramValue>
        </testParamValues>
        <testParamValues includeProjects="PlasmoDB">
           <paramValue name="BlastQuerySequence">GCAGGAAATATGATTCCAGATAATGATAAAAATTCAAATTATAAATATCCAGCTGTTTATGATGACAAAGATAAAAAGTGTCATATATTATATATTGCAGCTCAAGAAAATAATGGTCCT</paramValue>
            <paramValue name="BlastDatabaseOrganism">Plasmodium falciparum</paramValue>
        </testParamValues>
        <testParamValues includeProjects="GiardiaDB">
           <paramValue name="BlastQuerySequence">CTTAGAGACAAGTATGGCAGTATAGAAGGTCTAGCAAAAGAATTGGGGTCTGACCCTGCCACAGGCCTTTTGAAACCTACCGTTTTGCTCCATCGAAAAACCTATGGTAGCAATACAATG</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TrichDB">
           <paramValue name="BlastQuerySequence">AAGACACTCGCTGAATTAAGAAAGCGCAAATTAGAGGGTGTTGTTCTCATCTACGGCTTCCCAGAGCCAACACGCGCCCACTGCGACTTCGAACCAGTCTTCCGCCAGGAATCCTGCTTC</paramValue>
        </testParamValues>
        <!--TODO revisit the BLAST sequence..it was picked from Sanger-->
        <testParamValues includeProjects="TriTrypDB,EuPathDB">
           <paramValue name="BlastQuerySequence">ATGCAACTCCAAAGGTTGGGTGCTCCACTACTTAAAAGGCTTGTGGGGGGATGCATACGC</paramValue>
            <paramValue name="BlastDatabaseOrganism">Trypanosoma brucei</paramValue>
        </testParamValues>

       <paramRef ref="sharedParams.BlastDatabaseType" quote="false" />
       <paramRef ref="sharedParams.BlastAlgorithm" quote="false" />
       <paramRef ref="geneSimilarityParams.BlastDatabaseOrganism" quote="false" />
       <paramRef ref="sharedParams.BlastQuerySequence" quote="false" />
       <paramRef ref="sharedParams.-e" quote="false" />
       <paramRef ref="sharedParams.-v" quote="false" />
       <paramRef ref="sharedParams.-b" quote="false" />
       <paramRef ref="sharedParams.-filter" quote="false" />
       <wsColumn name="source_id" width="32" wsName="Identifier"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" columnType="clob"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer"  columnType="clob"/>
 <wsColumn name="Counter" width="30" columnType="number"/>
    </processQuery>

<!--
                     
    <processQuery name="GenesBySimilarity" includeProjects="EuPathDB" 
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.BlastDatabaseType"/>
       <paramRef ref="geneSimilarityParams.BlastDatabaseOrganism"/>
       <paramRef ref="sharedParams.BlastAlgorithm"/>      
       <paramRef ref="sharedParams.BlastQuerySequence"/> 
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter"/>
       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </processQuery>
-->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Motif search -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <processQuery name="GenesByMotifSearch" excludeProjects="EuPathDB"  
             processName="org.apidb.apicomplexa.wsfplugin.motifsearch.MotifSearchPlugin">
       <paramRef ref="sharedParams.motif_expression" quote="false"/>
       <paramRef ref="geneSimilarityParams.motif_organism" quote="false" />
       <wsColumn name="source_id" width="32" wsName="GeneID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="Locations" width="3999"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="3999"/>
    </processQuery>

    <processQuery name="GenesByMotifSearch" includeProjects="EuPathDB"  
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneSimilarityParams.motif_organism" quote="false" />
       <paramRef ref="sharedParams.motif_expression" quote="false"/>
       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="Locations" width="4000"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="4000"/>
    </processQuery>
                                                    
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- old Text Search    NOT IN USE ANYMORE     -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--
    <processQuery name="GenesByTextSearch" excludeProjects="EuPathDB,CryptoDB,TriTrypDB,PlasmoDB,GiardiaDB,ToxoDB,TrichDB"
          processName="org.apidb.apicomplexa.wsfplugin.textsearch.TextSearchPlugin">
       <paramRef ref="sharedParams.text_expression"/>
       <paramRef ref="geneParams.whole_words" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.text_fields"/>
       <paramRef ref="organismParams.text_search_organism"/>
       <wsColumn name="source_id" width="32" wsName="GeneID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="text_fields" width="64" wsName="Datasets"/>
    </processQuery>

    <processQuery name="GenesByTextSearch" includeProjects="EuPathDB"
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <paramRef ref="organismParams.text_search_organism"/>
            <paramRef ref="geneParams.text_fields" quote="false"/>
            <paramRef ref="sharedParams.text_expression" quote="false"/>
            <paramRef ref="geneParams.max_pvalue"  quote="false" groupRef="paramGroups.advancedParams"/>
            <paramRef ref="geneParams.whole_words" quote="false" groupRef="paramGroups.advancedParams"/>
            <wsColumn name="project_id" width="32" wsName="project_id"/>
            <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="text_fields" width="64"/>
    </processQuery>
-->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- text search (based on Oracle Text) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <processQuery name="GenesByTextSearch" includeProjects="CryptoDB,TriTrypDB,PlasmoDB,GiardiaDB,ToxoDB,TrichDB"
          processName="org.apidb.apicomplexa.wsfplugin.textsearch.KeywordSearchPlugin"
          isCacheable="false">
       <paramRef ref="organismParams.text_search_organism"/>
       <paramRef ref="sharedParams.text_expression"/>
       <paramRef ref="geneParams.text_fields"/>
       <paramRef ref="geneParams.whole_words" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.max_pvalue" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.timestamp"/>
       <wsColumn name="source_id" width="32" wsName="RecordID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="max_score" width="10" wsName="MaxScore" columnType="float"/>
       <wsColumn name="fields_matched" width="64" wsName="Datasets"/>
    </processQuery>

 <processQuery name="GenesByTextSearch" includeProjects="EuPathDB"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"
          isCacheable="false">
       <paramRef ref="organismParams.text_search_organism"  quote="false"/>
       <paramRef ref="sharedParams.text_expression"  quote="false"/>
       <paramRef ref="geneParams.text_fields"  quote="false"/>
       <paramRef ref="geneParams.whole_words"   quote="false" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.max_pvalue"   quote="false" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.timestamp"  quote="false"/>
       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="max_score" width="10" columnType="float"/>
       <wsColumn name="fields_matched" width="64"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Orthologs -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByOrthologs" doNotTest="true" includeProjects="EuPathDB,CryptoDB,GiardiaDB,PlasmoDB,TriTrypDB,ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.gene_result"/>
        <paramRef ref="organismParams.organism" 
                  queryRef="organismVQ.withGenes" 
                  includeProjects="CryptoDB,GiardiaDB,PlasmoDB,TriTrypDB"/>
        <paramRef ref="organismParams.organism" 
                  queryRef="organismVQ.withStrains"
                  includeProjects="ToxoDB"
                  default="Toxoplasma gondii ME49,Toxoplasma gondii GT1,Toxoplasma gondii VEG"
                  allowEmpty="true"/>
        <paramRef ref="organismParams.localorganism" includeProjects="EuPathDB"/>
        <paramRef ref="geneParams.isSyntenic" excludeProjects="EuPathDB"/>
        <column name="source_id" />
        <column name="project_id" />
<!--        <column name="orthologs"/> -->

        <sql includeProjects="CryptoDB,GiardiaDB,PlasmoDB,TriTrypDB">
            <![CDATA[
            SELECT so.source_id, '@PROJECT_ID@' as project_id
                  --, apidb.tab_to_string(CAST(COLLECT(distinct(so.input)) AS apidb.varchartab),', ') as orthologs 
            FROM (
            SELECT gf2.source_id, gf1.source_id as input
            FROM $$gene_result$$ qr, apidb.GENEATTRIBUTES gf1,
                 apidb.GENEATTRIBUTES gf2, dots.NaSequence ens, apidb.synteny s
            WHERE qr.source_id = gf1.source_id
              AND gf1.orthomcl_name = gf2.ORTHOMCL_NAME
              AND gf2.gene_type = 'protein coding' /* this because non protein coding have orthmcl_name for counting distinct "ortholog" results */
              AND gf2.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id in ($$organism$$)
              AND s.a_na_sequence_id = gf2.na_sequence_id
              AND s.b_na_sequence_id = gf1.na_sequence_id
              AND b_end > gf1.start_min
              AND b_start < gf1.end_max
            UNION
            SELECT qr.source_id, qr.source_id as input
            FROM $$gene_result$$ qr, apidb.geneattributes ga, dots.nasequence s
            where qr.source_id = ga.source_id
            and ga.na_sequence_id = s.na_sequence_id
            AND s.taxon_id in ($$organism$$)
            ) so
            GROUP BY so.source_id
            $$isSyntenic$$
            SELECT gf2.source_id, '@PROJECT_ID@' as project_id
                   --,apidb.tab_to_string(CAST(COLLECT(distinct(gf1.source_id)) AS apidb.varchartab),', ') as orthologs 
            FROM $$gene_result$$ qr, apidb.GENEATTRIBUTES gf1,
                 apidb.GENEATTRIBUTES gf2, dots.NaSequence ens
            WHERE qr.source_id = gf1.source_id
              AND gf1.orthomcl_name = gf2.ORTHOMCL_NAME
              AND gf2.gene_type = 'protein coding' /* this because non protein coding have orthmcl_name for counting distinct "ortholog" results */
              AND gf2.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id in ($$organism$$)
            GROUP BY gf2.source_id

           ]]>
       </sql>

        <sql includeProjects="ToxoDB">
            <![CDATA[
            SELECT so.source_id,'@PROJECT_ID@' as project_id
                  --,apidb.tab_to_string(CAST(COLLECT(distinct(so.input)) AS apidb.varchartab),', ') as orthologs 
            FROM (
              SELECT gb.source_id, ga.source_id as input
              FROM apidb.GENEATTRIBUTES ga, apidb.GENEATTRIBUTES gb,
                   $$gene_result$$ gr, apidb.synteny s
             WHERE ga.source_id = gr.source_id 
               AND gb.orthomcl_name = ga.orthomcl_name
               AND gb.ncbi_tax_id in ($$organism$$)
               AND s.a_na_sequence_id = ga.na_sequence_id
               AND s.b_na_sequence_id = gb.na_sequence_id
               AND b_end > gb.start_min
               AND b_start < gb.end_max
             UNION
            SELECT qr.source_id, qr.source_id as input
            FROM $$gene_result$$ qr, apidb.geneattributes ga, dots.nasequence s
            where qr.source_id = ga.source_id
            and ga.na_sequence_id = s.na_sequence_id
            AND s.taxon_id in ($$organism$$)
             ) so
             GROUP BY so.source_id
             $$isSyntenic$$
            select gb.source_id,'@PROJECT_ID@' as project_id
                   --,apidb.tab_to_string(CAST(COLLECT(distinct(gr.source_id)) AS apidb.varchartab),', ') as orthologs 
              from apidb.GENEATTRIBUTES ga, apidb.GENEATTRIBUTES gb,
                   $$gene_result$$ gr
             where ga.source_id = gr.source_id 
               and gb.orthomcl_name = ga.orthomcl_name
               and gb.ncbi_tax_id in ($$organism$$)
             group by gb.source_id
            ]]>
       </sql>

       <sql includeProjects="EuPathDB">
            <![CDATA[
            SELECT gb.source_id, gb.project_id as project_id
              FROM apidb.GENEATTRIBUTES ga, apidb.GENEATTRIBUTES gb,
                   $$gene_result$$ gr
             WHERE ga.source_id = gr.source_id 
               AND gb.orthomcl_name = ga.orthomcl_name
               AND gb.organism IN ($$localorganism$$)
             GROUP BY gb.project_id,gb.source_id
           ]]>
       </sql>
       
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Go Term -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByGoTerm" excludeProjects="EuPathDB" isCacheable="true">
        <paramRef ref="geneParams.go_term"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id" />
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.NaSequence ens, apidb.geneAttributes gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 dots.GoAssociation ga, sres.GoTerm gp,
                 sres.GoRelationship gr, core.TableInfo ti,
                 sres.GoRelationshipType grt
            WHERE ens.taxon_id IN ($$organism$$)
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = ga.row_id
              AND ga.table_id = ti.table_id
              AND ti.name = 'TranslatedAASequence'
              AND ga.go_term_id = gr.child_term_id
              AND gr.parent_term_id = gp.go_term_id
              AND (gp.go_id = substr($$go_term$$, 1, instr($$go_term$$||' :', ' :')-1)
                   OR gp.name LIKE REPLACE($$go_term$$, '*', '%'))
              AND gr.go_relationship_type_id = grt.go_relationship_type_id
              AND grt.name = 'closure'
            ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>


	<processQuery name="GenesByGoTerm" includeProjects="EuPathDB" 
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.go_term" quote="false"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Signal Peptide -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithSignalPeptide" excludeProjects="EuPathDB" isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.min_sigp_sum_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_d_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_signal_probability" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.any_or_all_sigp" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="sigp_sum_score"/>
        <column name="nn_d_score" />
        <column name="hmm_signal_probability" />
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id,
             (spf.maxy_conclusion + spf.maxc_conclusion + 
              spf.maxs_conclusion + spf.means_conclusion ) as sigp_sum_score,
              to_char((spf.means_score + maxy_score) / 2 , '0.99') as nn_d_score,
              to_char(spf.signal_probability, '0.99') as hmm_signal_probability
            FROM dots.NaSequence ens, apidb.geneattributes gf, 
                 dots.Transcript t,
                 dots.TranslatedAaFeature taf, dots.SignalPeptideFeature spf
            WHERE ens.taxon_id in ($$organism$$) 
              AND ens.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = spf.aa_sequence_id
              AND ((spf.maxy_conclusion +
                   spf.maxc_conclusion +
                   spf.maxs_conclusion +
                   spf.means_conclusion ) >= $$min_sigp_sum_score$$ 
              $$any_or_all_sigp$$ ((spf.means_score + spf.maxy_score) / 2) >= $$min_sigp_d_score$$
              $$any_or_all_sigp$$ spf.signal_probability >= $$min_sigp_signal_probability$$)
           ]]>
       </sql>
    </sqlQuery>

	<processQuery name="GenesWithSignalPeptide" includeProjects="EuPathDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	    <paramRef ref="geneParams.min_sigp_sum_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_d_score" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.min_sigp_signal_probability" groupRef="paramGroups.advancedParams" />
        <paramRef ref="geneParams.any_or_all_sigp" groupRef="paramGroups.advancedParams" quote="false"/>
	    <wsColumn name="source_id" width="32" wsName="source_id"/>
	    <wsColumn name="project_id" width="32" wsName="project_id"/>
	    <wsColumn name="sigp_sum_score" width="32" wsName="sigp_sum_score"/>
            <wsColumn name="nn_d_score" width="32" wsName="nn_d_score"/>
            <wsColumn name="hmm_signal_probability" width="32" wsName="hmm_signal_probability"/>
	</processQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- IsoElectric Point -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByIsoelectricPoint" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="geneParams.min_isoelectric_point"/>
        <paramRef ref="geneParams.max_isoelectric_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="isoelectric_point"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT asa.isoelectric_point, '@PROJECT_ID@' as project_id, gf.source_id
            FROM apidb.geneattributes gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf,
                 apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns
            WHERE asa.isoelectric_point BETWEEN $$min_isoelectric_point$$
                                            AND $$max_isoelectric_point$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
           ]]>
       </sql>
    </sqlQuery>

	<processQuery name="GenesByIsoelectricPoint"
                   includeProjects="EuPathDB"
                   isCacheable="true" 
                   processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes" quote="false"/>	  
                <paramRef ref="geneParams.min_isoelectric_point"/>
	        <paramRef ref="geneParams.max_isoelectric_point"/>
                <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
	 </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Molecular Weight -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMolecularWeight" excludeProjects="EuPathDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_molecular_weight"/>
        <paramRef ref="geneParams.max_molecular_weight"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM apidb.geneattributes gf, dots.Transcript t,
                 dots.TranslatedAaFeature taf, apidb.AaSequenceAttribute asa,
                 dots.NaSequence ns
            WHERE asa.min_molecular_weight <= $$max_molecular_weight$$
              AND asa.max_molecular_weight >= $$min_molecular_weight$$
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = taf.na_feature_id
              AND taf.aa_sequence_id = asa.aa_sequence_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
           ]]>
       </sql>
    </sqlQuery>


	<processQuery name="GenesByMolecularWeight" includeProjects="EuPathDB"
		isCacheable='true'
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.min_molecular_weight"/>
	              <paramRef ref="geneParams.max_molecular_weight"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	</processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ExonCount -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExonCount" excludeProjects="EuPathDB" isCacheable="true">
        <paramRef ref="geneParams.num_exons_gte"/>
        <paramRef ref="geneParams.num_exons_lte"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
             SELECT distinct ga.source_id, '@PROJECT_ID@' as project_id
             FROM apidb.geneattributes ga, dots.nasequence ns
             WHERE ns.taxon_id IN ($$organism$$)
             AND ga.sequence_id = ns.source_id
             AND exon_count  >= $$num_exons_gte$$ 
             And exon_count <= $$num_exons_lte$$
            ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByExonCount" 
	   includeProjects="EuPathDB"
       isCacheable='true' 
       processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
       <paramRef ref="geneParams.num_exons_gte"/>
       <paramRef ref="geneParams.num_exons_lte"/>

       <wsColumn name="source_id" width="32" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Ortholog pattern -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByOrthologPattern" excludeProjects="EuPathDB"
          isCacheable="true">

        <testParamValues includeProjects="CryptoDB">
          <paramValue name="included_species">Alveolates</paramValue>
          <paramValue name="excluded_species">Bacteria</paramValue>
          <paramValue name="phyletic_indent_map">Archaea</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

        <testParamValues includeProjects="PlasmoDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Plasmodium falciparum</paramValue>
        </testParamValues>

        <testParamValues includeProjects="GiardiaDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Giardia Assemblage A isolate WB</paramValue>
        </testParamValues>

        <testParamValues includeProjects="TriTrypDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Leishmania major</paramValue>
        </testParamValues>

        <testParamValues includeProjects="ToxoDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Toxoplasma gondii</paramValue>
        </testParamValues>

        <testParamValues includeProjects="TrichDB">
          <paramValue name="included_species">fru</paramValue>
          <paramValue name="excluded_species">Fungi</paramValue>
          <paramValue name="organism">Trichomonas vaginalis</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.profile_pattern"/>
        <paramRef ref="geneParams.included_species"/>
        <paramRef ref="geneParams.excluded_species"/>
        <paramRef ref="geneParams.phyletic_indent_map"/>
        <paramRef ref="geneParams.phyletic_term_map"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql excludeProjects="ToxoDB">
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
            FROM apidb.PhylogeneticProfile pp, apidb.geneattributes gf, dots.NaSequence ns
            WHERE pp.profile_string LIKE $$profile_pattern$$
              AND pp.source_id = gf.source_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
            ORDER BY ns.taxon_id, gf.source_id
           ]]>
       </sql>
        <sql includeProjects="ToxoDB">
            <![CDATA[
            SELECT source_id, project_id, taxon_id FROM (SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
            FROM apidb.PhylogeneticProfile pp, apidb.geneattributes gf, dots.NaSequence ns
            WHERE pp.profile_string LIKE $$profile_pattern$$
              AND pp.source_id = gf.source_id
              AND gf.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)            
            UNION
            SELECT DISTINCT ga2.source_id, '@PROJECT_ID@' as project_id, ns.taxon_id
            FROM apidb.PhylogeneticProfile pp, dots.NaSequence ns, apidb.GeneAttributes ga1, apidb.GeneAttributes ga2
            WHERE pp.profile_string LIKE $$profile_pattern$$
              AND pp.source_id = ga1.source_id
              AND ga1.gene_id = ga2.gene_id
              AND ga1.gene_id IS NOT NULL
              AND ga1.na_sequence_id = ns.na_sequence_id
              AND ns.taxon_id in ($$organism$$)
            )
            ORDER BY taxon_id, source_id
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByOrthologPattern" includeProjects="EuPathDB"
             isCacheable='true'
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues>
          <paramValue name="included_species">Alveolates</paramValue>
          <paramValue name="excluded_species">Bacteria</paramValue>
          <paramValue name="phyletic_indent_map">Archaea</paramValue>
          <paramValue name="phyletic_term_map">rnor</paramValue>
        </testParamValues>

	<paramRef ref="geneParams.profile_pattern" quote="false"/>
	<paramRef ref="geneParams.included_species"  quote="false"/>
	<paramRef ref="geneParams.excluded_species"  quote="false"/>
	<paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"  quote="false"/>
	<paramRef ref="geneParams.phyletic_indent_map"  quote="false"/>
	<paramRef ref="geneParams.phyletic_term_map"  quote="false"/>
	<wsColumn name="source_id" width="32" wsName="source_id"/>
	<wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Metabolic Pathway -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByMetabolicPathway" includeProjects="ToxoDB,PlasmoDB" isCacheable="true">
        <paramRef ref="geneParams.metabolic_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="met_pathways"/>
        <sql includeProjects="PlasmoDB">
            <![CDATA[
              select * from (
              SELECT gf.source_id, '@PROJECT_ID@' as project_id,
apidb.tab_to_string(CAST(COLLECT(distinct decode(dr.lowercase_secondary_identifier, null, dr.primary_identifier,
                           dr.lowercase_secondary_identifier)) AS apidb.varchartab), ', ') as met_pathways
            FROM apidb.geneattributes gf, dots.DbRefNaFeature drnf, sres.DbRef dr,
              (SELECT idrnf.na_feature_id
               FROM dots.DbRefNaFeature idrnf, sres.DbRef idr
               WHERE idr.primary_identifier = $$metabolic_pathway$$
                 AND idrnf.db_ref_id = idr.db_ref_id) internal
            WHERE internal.na_feature_id = drnf.na_feature_id
            AND gf.na_feature_id = drnf.na_feature_id
            AND drnf.db_ref_id = dr.db_ref_id
            group by gf.source_id
            )
           ]]>
        </sql>

        <sql includeProjects="ToxoDB">
            <![CDATA[
              select * from (
              SELECT gf.source_id, '@PROJECT_ID@' as project_id,
              apidb.tab_to_string(CAST(COLLECT(distinct decode(dr.lowercase_secondary_identifier, null, dr.primary_identifier,
                           dr.lowercase_secondary_identifier)) AS apidb.varchartab), ', ') as met_pathways
              FROM apidb.geneattributes gf, dots.Transcript t,
                   dots.DbRefaaFeature draf, sres.DbRef dr,
                   dots.TranslatedAaFeature taf,
               (SELECT idraf.aa_feature_id
                FROM dots.DbRefaaFeature idraf, sres.DbRef idr
                WHERE 
                idr.primary_identifier = $$metabolic_pathway$$
                AND  idraf.db_ref_id = idr.db_ref_id) internal
            WHERE internal.aa_feature_id = draf.aa_feature_id
            AND gf.na_feature_id = t.parent_id
            AND t.na_feature_id = taf.na_feature_id
            AND taf.aa_feature_id = draf.aa_feature_id
            AND draf.db_ref_id = dr.db_ref_id
            GROUP BY gf.source_id
            )
           ]]>
        </sql>
    </sqlQuery>

	<processQuery name="GenesByMetabolicPathway" includeProjects="EuPathDB"
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf"/>
	        <paramRef ref="geneParams.metabolic_pathway" quote="false"/>
	        <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
	        <wsColumn name="met_pathways" width="1000" wsName="met_pathways"/>
	</processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Taxon (Species) -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTaxon" excludeProjects="EuPathDB" isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
                FROM apidb.geneattributes gf, dots.nasequence ens
                WHERE gf.na_sequence_id = ens.na_sequence_id
                   and ens.taxon_id in ($$organism$$)
                ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByTaxon" includeProjects="EuPathDB"
           processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Epitopes -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithEpitopes" includeProjects="CryptoDB,ToxoDB,PlasmoDB,GiardiaDB,TriTrypDB"
           isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEpitopes"/>
        <paramRef ref="geneParams.epitope_confidence"/>
        <column name="source_id" />
        <column name="project_id"/>
        <column name="confidence" />
        <column name="count" />
        <sql>
            <![CDATA[
        SELECT gf.source_id, '@PROJECT_ID@' as project_id, count(ef.source_id) AS count,
           DECODE(
             MAX(
               DECODE(ef.type, 'Not Full Set Not on Blast Hit', 1,
                      'Not Full Set On Blast Hit', 2,
                      'Full Set Not on Blast Hit', 2,
                      'Full Set On Blast Hit', 3,
                       4)),
               1, 'Low',
               2, 'Medium',
               3, 'High',
               4, 'unknown epitope type') AS confidence
        FROM dots.TranslatedAaSequence tas, dots.EpitopeFeature ef,
             dots.AaLocation al, sres.ExternalDatabaseRelease edr,
             sres.ExternalDatabase ed, apidb.geneattributes gf,
             dots.TranslatedAaFeature taf, dots.Transcript t,
             dots.MotifAaSequence mas, dots.NaSequence ens
        WHERE tas.aa_sequence_id = ef.aa_sequence_id
          AND ef.aa_feature_id = al.aa_feature_id
          AND ef.motif_aa_sequence_id = mas.aa_sequence_id
          AND tas.aa_sequence_id = taf.aa_sequence_id
          AND taf.na_feature_id = t.na_feature_id
          AND t.parent_id = gf.na_feature_id
          AND gf.na_sequence_id = ens.na_sequence_id
          AND ens.taxon_id in ($$organism$$)
          AND ef.external_database_release_id
              = edr.external_database_release_id
          AND edr.external_database_id = ed.external_database_id
          AND ed.name = 'Links to IEDB epitopes'
          AND ef.type IN ($$epitope_confidence$$)
        GROUP BY gf.source_id
        ORDER BY gf.source_id
           ]]>
        </sql>
    </sqlQuery>   

    <processQuery name="GenesWithEpitopes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
           isCacheable='true'>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withEpitopes" quote="false"/>
        <paramRef ref="geneParams.epitope_confidence" quote="false"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id"/>
        <wsColumn name="confidence" />
        <wsColumn name="count" />
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Mass Spec -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!-- TODO: add Mass spec query for Trypdb -->
    <sqlQuery name="GenesByMassSpec" excludeProjects="EuPathDB,TrichDB" 
            isCacheable='true'>

        <testParamValues includeProjects="ToxoDB">
          <paramValue name="ms_assay">Wastling 1-D SDS PAGE</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TriTrypDB">
          <paramValue name="ms_assay">Tcruzi Proteomics-Epimastigote</paramValue>
        </testParamValues>
        <testParamValues includeProjects="PlasmoDB">
          <paramValue name="ms_assay">Merozoite</paramValue>
        </testParamValues>
        <testParamValues includeProjects="CryptoDB">
          <paramValue name="ms_assay">Wastling MassSpec 1D Gel LC-MS/MS</paramValue>
        </testParamValues>
        <testParamValues includeProjects="GiardiaDB">
          <paramValue name="ms_assay">DTASelect-filter_032108_Proteomics</paramValue>
        </testParamValues>

       <!-- <paramRef ref="organismParams.organism" queryRef="organismVQ.cp-tg-pb" excludeProjects="TriTrypDB,PlasmoDB"/> -->
        <paramRef ref="geneParams.ms_assay"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" columnType="number" width="12" />
         
     <!--   <sqlParamValue name="restrainOrganism" excludeProjects="TriTrypDB,PlasmoDB">
                <![CDATA[
                   and nas.taxon_id in ($$organism$$)
                ]]>
       </sqlParamValue>
       <sqlParamValue name="restrainOrganism" includeProjects="TriTrypDB,PlasmoDB" /> -->


        <sql>
            <![CDATA[
          select distinct ga.source_id,'@PROJECT_ID@' as project_id, seq.sum_sequence_count, spec.sum_spectrum_count
          from apidb.massspecsummary mss,
                dots.translatedaafeature taaf, dots.transcript t, apidb.geneattributes ga,
          (select intseq.aa_sequence_id,count(*) as sum_sequence_count
             from (select msf.aa_sequence_id, count(*) as sum_seq_ct
              from dots.massspecfeature msf,
                   dots.aalocation aal,
                   sres.externaldatabase ed,
                   sres.externaldatabaserelease edr
              where msf.aa_feature_id = aal.aa_feature_id
                and msf.external_database_release_id = edr.external_database_release_id
                and edr.external_database_id = ed.external_database_id
                and ed.name in ($$ms_assay$$)
              group by msf.aa_sequence_id,aal.start_min,aal.end_max ) intseq
              group by intseq.aa_sequence_id
              having count(*) >= $$min_sequence_count$$
          ) seq,
          (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
              from apidb.massspecsummary mss,
                   sres.externaldatabase ed,
                   sres.externaldatabaserelease edr
              where mss.external_database_release_id = edr.external_database_release_id
                and edr.external_database_id = ed.external_database_id
                and ed.name in ($$ms_assay$$)
              group by mss.aa_sequence_id
              having sum(spectrum_count) >= $$min_spectrum_count$$
          ) spec,
          dots.nasequence nas
          where mss.aa_sequence_id = taaf.aa_sequence_id
          and taaf.na_feature_id = t.na_feature_id
          and t.parent_id = ga.na_feature_id
          and ga.na_sequence_id = nas.na_sequence_id
          and mss.aa_sequence_id = seq.aa_sequence_id
          and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
 
    


    </sqlQuery>   

    <processQuery name="GenesByMassSpec" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
            isCacheable='true'>
        <testParamValues>
          <paramValue name="ms_assay">Wastling 1-D SDS PAGE</paramValue>
        </testParamValues>

<!--        <paramRef ref="organismParams.organism" queryRef="organismVQ.cp-tg-pb"/> -->
        <paramRef ref="geneParams.ms_assay" quote="false"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id" />
        <wsColumn name="sum_sequence_count" />
        <wsColumn name="sum_spectrum_count" />
    </processQuery>

<!-- this query has been unified with the P. Bergheii generic mass spec query GenesByMassSpec

    <sqlQuery name="GenesByMassSpecPf" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.mass_spec_stage_sample_pf"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="sum_sequence_count"/>
        <column name="sum_spectrum_count"/>
        <sql>
            <![CDATA[
              SELECT source_id,project_id,sum(sequence_count) as sum_sequence_count,sum(spectrum_count) as sum_spectrum_count from (
                SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id,mss.number_of_spans as sequence_count,mss.spectrum_count as spectrum_count
                FROM apidb.MassSpecSummary mss, dots.transcript t,
                     dots.genefeature gf, dots.translatedAAFeature taf
                WHERE mss.developmental_stage in ($$mass_spec_stage_sample_pf$$)
                  AND taf.aa_sequence_id = mss.aa_sequence_id
                  AND t.na_feature_id = taf.na_feature_id
                  AND gf.na_feature_id = t.parent_id
               UNION
                SELECT gf.source_id, '@PROJECT_ID@' as project_id,mss.number_of_spans as sequence_count,mss.spectrum_count as spectrum_count
                FROM apidb.MassSpecSummary mss, dots.transcript t,
                     dots.genefeature gf, dots.translatedAAFeature taf,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                WHERE mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$mass_spec_stage_sample_pf$$)
                  AND taf.aa_sequence_id = mss.aa_sequence_id
                  AND t.na_feature_id = taf.na_feature_id
                  AND gf.na_feature_id = t.parent_id
             )
            group by source_id,project_id
            having sum(sequence_count) >= $$min_sequence_count$$
                /*  AND sum(spectrum_count) >= $$min_spectrum_count$$ */
           ]]>
       </sql>
    </sqlQuery> 

    <processQuery name="GenesByMassSpecPf" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
            isCacheable='true'>
        <paramRef ref="geneParams.mass_spec_stage_sample_pf" quote="false"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id" />
        <wsColumn name="sum_sequence_count" />
        <wsColumn name="sum_spectrum_count" />
    </processQuery>
-->

<!--

    <processQuery name="GenesByMassSpec2" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
            isCacheable='true'>
        <paramRef ref="geneParams.mass_spec_stage"/>
        <paramRef ref="sharedParams.min_seq_coverage"/>
        <paramRef ref="sharedParams.min_span_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id" />
    </processQuery>

    <sqlQuery name="GenesByMassSpec2" includeProjects="PlasmoDB" 
            isCacheable='true'>
        <paramRef ref="geneParams.ms_assay_3"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />

        <sql includeProjects="PlasmoDB">
            <![CDATA[
            select distinct gf.source_id,'@PROJECT_ID@' as project_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay_3$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay_3$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec,
            dots.nasequence nas
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
            and gf.na_sequence_id = nas.na_sequence_id
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
 
    
    </sqlQuery>   

-->



<!-- This query has been unified with the generic P Berghei  mass spec query GenesByMassSpec

    <sqlQuery name="GenesByMassSpec4" includeProjects="PlasmoDB" 
            isCacheable='true'>
        <paramRef ref="geneParams.ms_assay_4"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="source_id" />
        <column name="project_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />

        <sql includeProjects="PlasmoDB">
            <![CDATA[
            select distinct gf.source_id,'@PROJECT_ID@' as project_id, seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, 
                 dots.translatedaafeature taaf, dots.transcript t, dots.genefeature gf,
		 sres.externalDatabase ed, sres.externalDatabaseRelease edr,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay_4$$)
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ed.name in ($$ms_assay_4$$)
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec,
            dots.nasequence nas
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = t.na_feature_id
            and t.parent_id = gf.na_feature_id
            and gf.na_sequence_id = nas.na_sequence_id
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
           ]]>
       </sql>
 
    
    </sqlQuery>   

    <processQuery name="GenesByMassSpec4" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
            isCacheable='true'>
        <paramRef ref="geneParams.ms_assay_4" quote="false"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id" />
        <wsColumn name="sum_sequence_count" />
        <wsColumn name="sum_spectrum_count" />
    </processQuery>
-->

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesOrthologousToAGivenGene   COULD HAVE SQL ERRORS FOR APIDB -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesOrthologousToAGivenGene" includeProjects="CryptoDB,PlasmoDB,ToxoDB,TriTrypDB,EuPathDB"
              isCacheable="true">

        <testParamValues includeProjects="PlasmoDB">
          <paramValue name="single_gene_id">PVX_092275</paramValue>
        </testParamValues>

        <testParamValues includeProjects="CryptoDB">
          <paramValue name="single_gene_id">Chro.70036</paramValue>
        </testParamValues>


        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes" excludeProjects="EuPathDB"/>
        <paramRef ref="organismParams.localorganism"  includeProjects="EuPathDB"/>
        <paramRef ref="geneParams.single_gene_id"/>
        <column name="project_id"/>
        <column name="source_id"/>

        <sql excludeProjects="EuPathDB">
            <![CDATA[
                SELECT gattr.source_id, project_id
                FROM apidb.geneattributes gattr, dots.nasequence nas
                WHERE orthomcl_name in (
                  SELECT orthomcl_name 
                  FROM   apidb.geneAttributes ga, apidb.geneid gi 
                  WHERE  gi.id = lower($$single_gene_id$$)
                  AND    ga.source_id = gi.gene  ) 
                AND gattr.na_sequence_id = nas.na_sequence_id
                AND nas.taxon_id IN ($$organism$$)
                ORDER BY project_id, source_id
           ]]>
       </sql>

       <sql includeProjects="EuPathDB">
       <![CDATA[
                SELECT gattr.source_id, project_id
                FROM apidb.geneattributes gattr
                WHERE orthomcl_name in (
                  SELECT orthomcl_name 
                  FROM   apidb.geneAttributes ga, apidb.geneid gi 
                  WHERE  gi.id = lower($$single_gene_id$$)
                  AND    ga.source_id = gi.gene  ) 
                AND gattr.organism IN ($$localorganism$$)
                ORDER BY project_id, source_id
           ]]>
       </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Location -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

 <!-- TODO:  wdkSanityTest needs to handle dependent params -->
    <sqlQuery name="GenesByLocation" excludeProjects="EuPathDB"
              isCacheable="true" doNotTest="true">

        <testParamValues includeProjects="PlasmoDB">
          <paramValue name="sequenceId">Pf3D7_05</paramValue>
        </testParamValues>
        <testParamValues includeProjects="CryptoDB">
          <paramValue name="sequenceId">AAEE01000001</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TriTrypDB">
          <paramValue name="sequenceId">LbrM.chr20.1</paramValue>
        </testParamValues>
        <testParamValues includeProjects="ToxoDB">
          <paramValue name="sequenceId">TGME49_chrII</paramValue>
        </testParamValues>

        <paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes" multiPick="false" includeProjects="TriTrypDB" default="Trypanosoma brucei"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes" multiPick="false" includeProjects="ToxoDB" default="Toxoplasma gondii"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes" multiPick="false" includeProjects="PlasmoDB" default="Plasmodium vivax"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes" multiPick="false" includeProjects="CryptoDB" quote="true" />

        <paramRef ref="sharedParams.chromosomeOptional" includeProjects="PlasmoDB,ToxoDB,CryptoDB,TriTrypDB"/>
        <paramRef ref="sharedParams.sequenceId"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dynamic_location"/>

        <sql includeProjects="PlasmoDB,CryptoDB">
            <![CDATA[
            SELECT distinct gatr.source_id as source_id, '@PROJECT_ID@' as project_id,
              fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
            FROM apidb.featurelocation fl,apidb.SEQUENCEATTRIBUTES satr,apidb.GENEATTRIBUTES gatr
            WHERE ((satr.ORGANISM like  $$organism$$ AND satr.CHROMOSOME like $$chromosomeOptional$$ )
                   OR lower(satr.source_id) = lower($$sequenceId$$))
              AND fl.NA_SEQUENCE_ID = satr.NA_SEQUENCE_ID
              AND fl.NA_FEATURE_ID = gatr.NA_FEATURE_ID
              AND fl.end_max >= REGEXP_REPLACE('$$start_point$$', ',| ','')
              AND (fl.start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
           ]]>
       </sql>

        <sql includeProjects="ToxoDB">
            <![CDATA[
            SELECT DISTINCT
              fl.feature_source_id as source_id, '@PROJECT_ID@' as project_id,
              fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
            FROM apidb.FeatureLocation fl, apidb.SequenceAttributes satr, dots.NaSequence seq
            WHERE satr.na_sequence_id = seq.na_sequence_id
              AND ((seq.taxon_id in ($$organism$$) AND satr.CHROMOSOME like $$chromosomeOptional$$ )
                   OR lower(satr.source_id) = lower($$sequenceId$$))
              AND fl.feature_type = 'GeneFeature'
              AND fl.na_sequence_id = satr.na_sequence_id
              AND fl.end_max >= REGEXP_REPLACE('$$start_point$$', ',| ','')
              AND (fl.start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
           ]]>
       </sql>

        <sql includeProjects="TriTrypDB">
            <![CDATA[
            SELECT distinct gatr.source_id as source_id, '@PROJECT_ID@' as project_id,
              fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
            FROM apidb.featurelocation fl,apidb.SEQUENCEATTRIBUTES satr,apidb.GENEATTRIBUTES gatr
            WHERE ((gatr.species like  $$organism$$ AND gatr.chromosome_order_num =$$chromosomeOptional$$ )
                   OR lower(satr.source_id) = lower($$sequenceId$$))
              AND fl.NA_SEQUENCE_ID = satr.NA_SEQUENCE_ID
              AND fl.NA_FEATURE_ID = gatr.NA_FEATURE_ID
              AND fl.end_max >= REGEXP_REPLACE('$$start_point$$', ',| ','')
              AND (fl.start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
           ]]>
       </sql>

        <sql includeProjects="TrichDB,GiardiaDB">
            <![CDATA[
            SELECT distinct fl.feature_source_id as source_id, '@PROJECT_ID@' as project_id,
              fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
            FROM apidb.featurelocation fl
            WHERE lower(fl.sequence_source_id) = lower($$sequenceId$$)
              AND fl.feature_type = 'GeneFeature'
              AND fl.end_max >= REGEXP_REPLACE('$$start_point$$', ',| ','') 
              AND (fl.start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
           ]]>
       </sql>
    </sqlQuery>

	<processQuery name="GenesByLocation" includeProjects="EuPathDB" 
                    isCacheable='true' doNotTest="true"
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                       <!--<paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomes"/>-->
                       <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	               <paramRef ref="sharedParams.chromosomeOptional" quote="false"/>
	               <paramRef ref="sharedParams.sequenceId" quote="false"/>
                       <paramRef ref="sharedParams.start_point"/>
                       <paramRef ref="sharedParams.end_point"/>
	               <wsColumn name="source_id" width="32" wsName="source_id"/>
	               <wsColumn name="project_id" width="32" wsName="project_id"/>
                       <wsColumn name="dynamic_location" width="100" wsName="dynamic_location"/>
                
	</processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Genes By Snps -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySnps" includeProjects="PlasmoDB,ToxoDB,CryptoDB"
              isCacheable="true">

        <testParamValues includeProjects="PlasmoDB">
            <paramValue name="snp_strain_m">Pf-7G8</paramValue>
        </testParamValues>
 
       <testParamValues includeProjects="CryptoDB">
            <paramValue name="snp_strain_m">Cp-MD</paramValue>
        </testParamValues> 	  

        <testParamValues includeProjects="ToxoDB">
            <paramValue name="snp_strain_m">Tg-GT1 (type I)</paramValue>
        </testParamValues>

        <paramRef ref="sharedParams.snp_strain_a"/>
        <paramRef ref="sharedParams.snp_strain_m" multiPick="false"/>
        <paramRef ref="geneParams.snp_stat" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density_upper" groupRef="paramGroups.advancedParams"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="cds_snp_density"/>
        <column name="dn_ds_ratio"/>
        <column name="num_synonymous"/>
        <column name="num_non_synonymous"/>
        <column name="num_noncoding"/>
        <column name="num_nonsense"/>
        <column name="total_snps"/>
        <sql>
            <![CDATA[
              SELECT source_id, '@PROJECT_ID@' as project_id,
	           round(non_synonymous / CASE synonymous
	                      WHEN 0 THEN 1
				  ELSE synonymous end, 2) as dn_ds_ratio,
              non_synonymous as num_non_synonymous,synonymous as num_synonymous,
              non_coding as num_noncoding, stop as num_nonsense,
              cds_length,round(((non_synonymous + synonymous) / cds_length * 1000),2) as cds_snp_density,
              total as total_snps
	      FROM apidb.snpsummary
	      WHERE ((lower(strain_a) = $$snp_strain_a$$ and lower(strain_b) = $$snp_strain_m$$ )
                    or  (lower(strain_a) = $$snp_strain_m$$ and lower(strain_b) = $$snp_strain_a$$))
	      AND non_synonymous / CASE synonymous
	                          WHEN 0 THEN 1
				  ELSE synonymous end >= $$dn_ds_ratio_lower$$
	      AND non_synonymous / CASE synonymous
	                          WHEN 0 THEN 1
				  ELSE synonymous end <= $$dn_ds_ratio_upper$$
              AND $$snp_stat$$ >= $$occurrences_lower$$
	      AND $$snp_stat$$ <= $$occurrences_upper$$
              AND (non_synonymous + synonymous) / cds_length * 1000 >= $$snp_density_lower$$
              AND (non_synonymous + synonymous) / cds_length * 1000 <= $$snp_density_upper$$
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesBySnps" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB"
              isCacheable="true">
        <testParamValues>
            <paramValue name="snp_strain_m">Cp-MD</paramValue>
        </testParamValues>

        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <paramRef ref="sharedParams.snp_strain_a" quote="false"/>
        <paramRef ref="sharedParams.snp_strain_m" multiPick="false"  quote="false"/>
        <paramRef ref="geneParams.snp_stat" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.occurrences_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.dn_ds_ratio_upper" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density_lower" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="geneParams.snp_density_upper" groupRef="paramGroups.advancedParams"/>
        <wsColumn name="project_id"/>
        <wsColumn name="source_id"/>
        <wsColumn name="cds_snp_density"/>
        <wsColumn name="dn_ds_ratio"/>
        <wsColumn name="num_synonymous"/>
        <wsColumn name="num_non_synonymous"/>
        <wsColumn name="num_noncoding"/>
        <wsColumn name="num_nonsense"/>
        <wsColumn name="total_snps"/>
   </processQuery>
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- SecondaryStructure -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySecondaryStructure" includeProjects="GiardiaDB,TrichDB,PlasmoDB,TriTrypDB,CryptoDB"
            isCacheable="true">
        <paramRef ref="geneParams.min_coil"/>
        <paramRef ref="geneParams.max_coil"/>
        <paramRef ref="geneParams.min_strand"/>
        <paramRef ref="geneParams.max_strand"/>
        <paramRef ref="geneParams.min_helix"/>
        <paramRef ref="geneParams.max_helix"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="percent_coil"/>
        <column name="percent_strand"/>
        <column name="percent_helix"/>
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, c.percentage as percent_coil,
                e.percentage as percent_strand, h.percentage as percent_helix
            FROM dots.SecondaryStructure ss, dots.SecondaryStructureCall c, dots.SecondaryStructureCall e,
                 dots.SecondaryStructureCall h, apidb.geneattributes gf,dots.transcript t, 
                 dots.translatedaafeature tf,dots.nasequence s
            WHERE s.na_sequence_id = gf.na_sequence_id
              AND gf.na_feature_id = t.parent_id
              AND t.na_feature_id = tf.na_feature_id
              AND tf.aa_sequence_id = ss.aa_sequence_id
              AND ss.secondary_structure_id = c.secondary_structure_id
              AND ss.secondary_structure_id = e.secondary_structure_id
              AND ss.secondary_structure_id = h.secondary_structure_id
              AND c.structure_type = 'C'
              AND e.structure_type = 'E'
              AND h.structure_type = 'H'
              AND c.percentage between $$min_coil$$ and $$max_coil$$
              AND e.percentage between $$min_strand$$ and $$max_strand$$
              AND h.percentage between $$min_helix$$ and $$max_helix$$
              AND s.taxon_id IN ($$organism$$)
            ]]>
       </sql>
    </sqlQuery>


	<processQuery name="GenesBySecondaryStructure"
	    includeProjects="EuPathDB"        
		isCacheable="true" 
		processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoTrichGiardiaGenes"/>
	        <paramRef ref="geneParams.min_coil"/>
	        <paramRef ref="geneParams.max_coil"/>
	        <paramRef ref="geneParams.min_strand"/>
	        <paramRef ref="geneParams.max_strand"/>
	        <paramRef ref="geneParams.min_helix"/>
	        <paramRef ref="geneParams.max_helix"/>
	        <wsColumn name="source_id" width="32" wsName="source_id"/>
	        <wsColumn name="project_id" width="32" wsName="project_id"/>
			<wsColumn name="percent_coil" width="32" wsName="percent_coil"/>
			<wsColumn name="percent_strand" width="32" wsName="percent_strand"/>
			<wsColumn name="percent_helix" width="32" wsName="percent_helix"/>
	</processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Interpro -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

 <!-- TODO:  wdkSanityTest needs to handle dependent params -->
    <sqlQuery name="GenesByInterproDomain" excludeProjects="EuPathDB"  
			isCacheable="true" doNotTest="true">

        <testParamValues includeProjects="CryptoDB,PlasmoDB,ToxoDB,GiardiaDB,TrichDB">
           <paramValue name="domain_database">PRODOM</paramValue>
           <paramValue name="domain_accession">PD001005: ISOMERASE TRIOSEPHOSPHATE TIM BIOSYNTHESIS GLUCONEOGENESIS PENTOSE GLYCOLYSIS SHUNT ACID FATTY</paramValue>
        </testParamValues>
        <!--TODO-domain accession value is not defined here for PD000018-->
        <testParamValues includeProjects="TriTrypDB">
           <paramValue name="domain_database">PRODOM</paramValue>
           <paramValue name="domain_accession">PD000018:</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.domain_database"/>
        <paramRef ref="geneParams.domain_accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="e_value"/>
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, to_char(avg(df.e_value),'9.9EEEE') as e_value
            FROM dots.DomainFeature df,dots.translatedaasequence tas,
                 apidb.geneattributes gf, dots.transcript t, dots.TranslatedAAFeature taf,
                 dots.DbRefAaFeature draf, sres.DbRef dr
            WHERE tas.aa_sequence_id = df.aa_sequence_id
              AND df.aa_feature_id = draf.aa_feature_id
              AND draf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = $$domain_database$$
              AND dr.primary_identifier
                  = substr($$domain_accession$$, 1, instr($$domain_accession$$||' :', ' :')-1)
              AND tas.taxon_id IN ($$organism$$)
              AND tas.aa_sequence_id = taf.aa_sequence_id
              AND taf.na_feature_id = t.na_feature_id
              AND gf.na_feature_id = t.parent_id
              GROUP BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>

	 <processQuery name="GenesByInterproDomain" includeProjects="EuPathDB" doNotTest="true"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
                      <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
	              <paramRef ref="geneParams.domain_database" quote="false"/>
	              <paramRef ref="geneParams.domain_accession"  quote="false"/>
	              <wsColumn name="e_value" width="12"/>
	              <wsColumn name="project_id" width="32" wsName="project_id"/>
	              <wsColumn name="source_id" width="32" wsName="source_id"/>
	 </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- SageTags -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySageTag" includeProjects="PlasmoDB,ToxoDB,GiardiaDB" 
              isCacheable="true">
        <testParamValues includeProjects="PlasmoDB">
           <paramValue name="sage_tag_library">Transcriptional profile of P.falciparum by Serial analysis of gene expression_CQlibrary</paramValue>
        </testParamValues>
       <testParamValues includeProjects="ToxoDB">
           <paramValue name="sage_tag_library">T. gondii 3p SAGE tag frequencies_sp</paramValue>
        </testParamValues>
       <testParamValues includeProjects="GiardiaDB">
           <paramValue name="sage_tag_library">Characterization of the Giardia lamblia Transcriptome_S1 Excystation</paramValue>
        </testParamValues>

       <paramRef ref="geneParams.sage_tag_library"/>
       <paramRef ref="geneParams.st_max_five_prime_distance"/>
       <paramRef ref="geneParams.st_max_three_prime_distance"/>
       <paramRef ref="geneParams.st_min_tag_count"/>
       <paramRef ref="geneParams.st_max_occurrences"/>
       <paramRef ref="geneParams.sense_antisense"/>
       <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.withSageTags"
                 includeProjects="GiardiaDB,ToxoDB"/ --> 
       <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/ --> 
       <column name="project_id"/> 
       <column name="source_id" />
       <column name="sense_count" />
       <column name="antisense_count" />
       <sql>
            <![CDATA[
               select gene_source_id as source_id, 
                      '@PROJECT_ID@' as project_id,
                      round(sum(sense_count),1) as sense_count,
                      round(sum(antisense_count),1) as antisense_count
               from 
                 (select stg.gene_source_id, stg.tag_source_id,
                         stg.sense_count, stg.antisense_count
                  from apidb.SageTagGene stg
                  where stg.analysis_id in ($$sage_tag_library$$)
                  and stg.occurrence <= $$st_max_occurrences$$
                  and ((stg.direction = '5' and stg.distance <= $$st_max_five_prime_distance$$)
                     OR (stg.direction = '3' and stg.distance <= $$st_max_three_prime_distance$$))
                  group by stg.gene_source_id, stg.tag_source_id, stg.sense_count, stg.antisense_count
               ) 
               group by gene_source_id having sum($$sense_antisense$$_count) >= $$st_min_tag_count$$ 
            ]]>
          </sql>
    </sqlQuery>

	 <processQuery name="GenesBySageTag" includeProjects="EuPathDB"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
            <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf-gl" includeProjects="EuPathDB"/ -->
        <testParamValues includeProjects="EuPathDB">
           <paramValue name="sage_tag_library">Transcriptional profile of P.falciparum by Serial analysis of gene expression_CQlibrary</paramValue>
        </testParamValues>
                <paramRef ref="geneParams.sage_tag_library" quote="false"/>
                <paramRef ref="geneParams.st_max_five_prime_distance"/>
                <paramRef ref="geneParams.st_max_three_prime_distance"/>
                <paramRef ref="geneParams.st_min_tag_count"/>
                <paramRef ref="geneParams.st_max_occurrences"/>
                <paramRef ref="geneParams.sense_antisense"/>
                <wsColumn name="project_id" width="32" wsName="project_id"/> 
                <wsColumn name="source_id"  width="32" wsName="source_id"/>
                <wsColumn name="sense_count" />
                <wsColumn name="antisense_count" />
<!--
                <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes" includeProjects="GiardiaDB,ToxoDB"/> 
                <paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/>
-->
	 </processQuery>

    <sqlQuery name="GenesBySageTagRStat" doNotTest="true" includeProjects="PlasmoDB,ToxoDB,GiardiaDB" isCacheable="true">
      <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.withSageTags"
                 includeProjects="GiardiaDB,ToxoDB"/ --> 
       <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.pf" includeProjects="PlasmoDB"/ --> 
       <paramRef ref="geneParams.sage_tag_library_name"/>
       <paramRef ref="geneParams.sage_tag_min_r"/>
       <paramRef ref="geneParams.st_max_five_prime_distance"/>
       <paramRef ref="geneParams.st_max_three_prime_distance"/>
       <column name="project_id"/> 
       <column name="source_id" />
       <column name="R" />
       <sql>
            <![CDATA[
       select gene_source_id as source_id, 
              '@PROJECT_ID@' as project_id,
              to_char(sum(xij * log(10, (xij/(Ni * fj)))), '99999D0') as R
       from (
         select g.gene_source_id, aa.library_name, library_count.n as ni, f.frequency as fj, sum(aa.raw_count) as xij
         from apidb.SAGETAGANALYSISATTRIBUTES aa, 
              apidb.SAGETAGATTRIBUTES a,
              (select distinct gene_source_id, tag_feature_id, antisense 
               from apidb.SAGETAGGENE 
               where ((direction = '5' and distance <= $$st_max_five_prime_distance$$) OR (direction = '3' and distance <= $$st_max_three_prime_distance$$))
               ) g,
              (select g.gene_source_id, sum(aa.raw_count) / max(n.n) as frequency
               from apidb.SAGETAGANALYSISATTRIBUTES aa, 
               apidb.SAGETAGATTRIBUTES a,
               (select distinct gene_source_id, tag_feature_id, antisense 
                from apidb.SAGETAGGENE
                where ((direction = '5' and distance <= $$st_max_five_prime_distance$$) OR (direction = '3' and distance <= $$st_max_three_prime_distance$$))
                ) g,
               (select sum(max(total_raw_count)) as n
                from apidb.SAGETAGANALYSISATTRIBUTES
                where library_name in ($$sage_tag_library_name$$)
                group by library_name) n
               where g.tag_feature_id = a.na_feature_id
                and g.antisense = 0
                and aa.library_name in ($$sage_tag_library_name$$)
                and aa.composite_element_id = a.composite_element_id
               group by g.gene_source_id) f,
              (select library_name, max(total_raw_count) as n
               from apidb.SAGETAGANALYSISATTRIBUTES
               where library_name in ($$sage_tag_library_name$$)
               group by library_name) library_count
         where g.tag_feature_id = a.na_feature_id
          and g.antisense = 0
          and aa.composite_element_id = a.composite_element_id
          and g.gene_source_id = f.gene_source_id
          and aa.library_name = library_count.library_name
         group by g.gene_source_id, aa.library_name, library_count.n, f.frequency
         )
       group by gene_source_id
       having sum(xij * log(10, (xij/(Ni * fj)))) >  $$sage_tag_min_r$$
            ]]>
          </sql>
    </sqlQuery>



    <processQuery name="GenesBySageTagRStat" includeProjects="EuPathDB" doNotTest="true"
			processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <!-- paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf-gl"/ --> 
        <paramRef ref="geneParams.sage_tag_library_name" quote="false"/>
        <paramRef ref="geneParams.sage_tag_min_r"/>
        <paramRef ref="geneParams.st_max_five_prime_distance"/>
        <paramRef ref="geneParams.st_max_three_prime_distance"/>
   
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="R" />

    </processQuery>



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ESTOverlap -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByESTOverlap" excludeProjects="EuPathDB" isCacheable="true">

        <testParamValues includeProjects="ToxoDB">
           <paramValue name="libraryIdGenes">TgME49 3 day invitro bradyzoite</paramValue>
        </testParamValues>
        <testParamValues includeProjects="TriTrypDB">
           <paramValue name="libraryIdGenes">TcAM (amastigote-like)</paramValue>
        </testParamValues>

       <paramRef ref="sharedParams.libraryIdGenes"/>
       <paramRef ref="sharedParams.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.max_number_best_alignments" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="sharedParams.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
       <paramRef ref="geneParams.min_number_est_aligned" groupRef="paramGroups.advancedParams"/>

       <column name="project_id"/>
       <column name="source_id" />
       <column name="number_of_ests" />

       <sql excludeProjects="CryptoDB">
            <![CDATA[
            SELECT s.gene as source_id, '@PROJECT_ID@' as project_id, count(*) as number_of_ests
            FROM apidb.EstAlignmentGeneSummary s, apidb.estattributes e
            WHERE s.est_gene_overlap_length >= $$bp_overlap_gte$$
            AND s.is_consistent in ($$high_confidence_only$$)
            AND s.is_best_alignment in ($$best_alignment_only$$)
            AND s.percent_identity >= $$min_percent_identity$$
            AND s.percent_est_bases_aligned >= $$min_percent_est_aligned$$
            AND s.library_id in ($$libraryIdGenes$$)
            AND e.source_id = s.accession
            AND e.best_alignment_count <= $$max_number_best_alignments$$
            GROUP by s.gene
            HAVING count(*) >= $$min_number_est_aligned$$
            ]]>
          </sql>
       <sql includeProjects="CryptoDB">
           <!-- 
             AA555437 has a gap that spans a huge portion of AAEE01000003,
             causing several genes to be erroneously returned as having overlap
           -->
            <![CDATA[
            SELECT s.gene as source_id, '@PROJECT_ID@' as project_id, count(*) as number_of_ests
            FROM apidb.EstAlignmentGeneSummary s, apidb.estattributes e
            WHERE s.est_gene_overlap_length >= $$bp_overlap_gte$$
            AND s.is_consistent in ($$high_confidence_only$$)
            AND s.is_best_alignment in ($$best_alignment_only$$)
            AND s.percent_identity >= $$min_percent_identity$$
            AND s.percent_est_bases_aligned >= $$min_percent_est_aligned$$
            AND s.library_id in ($$libraryIdGenes$$)
            AND e.source_id = s.accession
            AND e.best_alignment_count <= $$max_number_best_alignments$$
            AND s.accession != 'AA555437'
            GROUP by s.gene
           HAVING count(*) >= $$min_number_est_aligned$$
            ]]>
          </sql>
    </sqlQuery>


    <processQuery name="GenesByESTOverlap" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <!--    <paramRef ref="organismParams.organism" queryRef="organismVQ.withESTsAndGenes"/> -->
	       <paramRef ref="sharedParams.libraryIdGenes"/>
            <paramRef ref="sharedParams.max_number_best_alignments" groupRef="paramGroups.advancedParams"/>
            <paramRef ref="geneParams.min_number_est_aligned" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.bp_overlap_gte" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
	       <paramRef ref="sharedParams.min_percent_est_aligned" groupRef="paramGroups.advancedParams"/>
	       <wsColumn name="source_id" width="32" wsName="source_id"/>
	     <wsColumn name="project_id" width="32" wsName="project_id"/>
	<wsColumn name="number_of_ests" width="32" wsName="number_of_ests"/>

    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Dont Care - fake query for internal use -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="DontCare" doNotTest="true" isCacheable="true">
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            select source_id, project_id
            from apidb.geneattributes
            where source_id = 'life_is_sweet' 
        </sql>
    </sqlQuery>
    
    <sqlQuery name="DontCarePlasmoExpression" doNotTest="true" includeProjects="EuPathDB,PlasmoDB" isCacheable="true">
        <paramRef ref="geneParams.extraerythrocytic_stages"/>
        <paramRef ref="geneParams.intraerythrocytic_stages" quote="false"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            select '' as source_id, '' as project_id, '' as max_percentile, '' as min_percentile from dual
        </sql>
    </sqlQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Query that retrieves all genes by organism -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GeneDumpQuery" isCacheable="true" excludeProjects="EuPathDB">
        <paramRef ref="organismParams.gff_organism" queryRef="organismVQ.withGenesGFF"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
                SELECT gf.source_id AS source_id,
                       '@PROJECT_ID@' as project_id
                FROM apidb.geneattributes gf, 
                     dots.NaSequence ns, 
                     apidb.GeneAttributes ga
                WHERE gf.na_sequence_id = ns.na_sequence_id
                  AND ns.taxon_id IN ($$gff_organism$$)
                  AND gf.source_id = ga.source_id
                  AND ga.project_id = '@PROJECT_ID@'
            ]]>
        </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--  plasmoDB 4.4 dataset-->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPlasmoDbDataset" doNotTest="true" includeProjects="PlasmoDB"
                 isCacheable="true">
        <paramRef ref="geneParams.plasmodb_4-4_dataset"/>
        <column name="project_id"/>
        <column name="source_id"  />
        <sql>
            <!-- keep order or genes but remove duplicates -->
            <![CDATA[
                SELECT imported.source_id, '@PROJECT_ID@' as project_id FROM (
                    SELECT ga.gene AS source_id, min(c.i) AS i
                    FROM cache$$plasmodb_4-4_dataset$$@apidb.cbilprod c,
                         apidb.plasmodb_genes@apidb.cbilprod pg,
                         apidb.GeneAlias ga
                    WHERE c.na_feature_id = pg.na_feature_id
                      AND lower(pg.source_id) = ga.alias
                    GROUP BY ga.gene) imported
                ORDER BY i
           ]]>
       </sql>
    </sqlQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Y2H Protein protein interaction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByProteinProteinInteraction" includeProjects="PlasmoDB"
         isCacheable="true">
        <paramRef ref="geneParams.single_gene_id" default="PFL0275w"/>
        <paramRef ref="geneParams.min_searches"/>
        <paramRef ref="geneParams.min_observed"/>
        <paramRef ref="geneParams.bait_or_prey"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="gene_source_id" />
        <column name="bait_start" />
        <column name="bait_end" />
        <column name="prey_start" />
        <column name="prey_end" />
        <column name="times_observed" />
        <column name="number_of_searches" />
        <column name="prey_number_of_baits" />
        <column name="bait_number_of_preys" />
        <column name="bait_or_prey" />
        <sql>
            <![CDATA[
            SELECT * FROM
               (SELECT pf.source_id, '@PROJECT_ID@' as project_id, pf.source_id as gene_source_id, bait_start, bait_end, prey_start, prey_end,
                       times_observed, number_of_searches,
                       (select distinct prey_number_of_baits
                         from apidb.geneinteraction igi
                         where igi.bait_gene_feature_id = pf.na_feature_id) AS prey_number_of_baits,
                       bait_number_of_preys, 'bait' as bait_or_prey
                FROM apidb.GeneId ga, apidb.geneattributes bf, apidb.geneattributes pf,
                     dots.ExternalNaSequence ens, apidb.GeneInteraction gi
                WHERE lower($$single_gene_id$$) = ga.id
                  AND ga.gene = bf.source_id
                  AND gi.number_of_searches >= $$min_searches$$
                  AND gi.times_observed >= $$min_observed$$
                  AND bf.na_feature_id = gi.bait_gene_feature_id
                  AND gi.prey_gene_feature_id = pf.na_feature_id
                  AND pf.na_sequence_id = ens.na_sequence_id
                UNION
                SELECT bf.source_id, '@PROJECT_ID@' as project_id, bf.source_id as gene_source_id, bait_start, bait_end, prey_start, prey_end,
                       times_observed, number_of_searches, prey_number_of_baits,
                       (select distinct bait_number_of_preys
                         from apidb.geneinteraction igi
                         where igi.prey_gene_feature_id = bf.na_feature_id) AS bait_number_of_preys, 'prey' as bait_or_prey
                FROM apidb.GeneId ga, apidb.geneattributes bf, apidb.geneattributes pf,
                     dots.ExternalNaSequence ens,  apidb.GeneInteraction gi
                WHERE lower($$single_gene_id$$) = ga.id
                  AND ga.gene = pf.source_id
                  AND gi.number_of_searches >= $$min_searches$$
                  AND gi.times_observed >= $$min_observed$$
                  AND bf.na_feature_id = gi.bait_gene_feature_id
                  AND gi.prey_gene_feature_id = pf.na_feature_id
                  AND bf.na_sequence_id = ens.na_sequence_id)
            WHERE ($$bait_or_prey$$ = bait_or_prey
                   OR $$bait_or_prey$$ = 'either')
           ]]>
       </sql>
    </sqlQuery>

   <processQuery name="GenesByProteinProteinInteraction" includeProjects="EuPathDB"
                        isCacheable="true" 
                        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.single_gene_id" default="PFL0275w"  quote="false"/>
        <paramRef ref="geneParams.min_searches"/>
        <paramRef ref="geneParams.min_observed"/>
        <paramRef ref="geneParams.bait_or_prey" quote="false"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="gene_source_id" width="32" wsName="gene_source_id"/>
        <wsColumn name="bait_start" width="32"/>
        <wsColumn name="bait_end" width="32"/>
        <wsColumn name="prey_start" width="32"/>
        <wsColumn name="prey_end" width="32"/>
        <wsColumn name="times_observed" width="32"/>
        <wsColumn name="number_of_searches" width="32"/>
        <wsColumn name="prey_number_of_baits" width="32"/>
        <wsColumn name="bait_number_of_preys" width="32"/>
        <wsColumn name="bait_or_prey" width="32"/>
     </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Expression Timing -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTimeSeriesFoldChangeBradyRoos" includeProjects="ToxoDB" 
              isCacheable="true">

      <testParamValues>
	<paramValue name="ts_fc_one_pd">112</paramValue>
	<paramValue name="ts_fc_two_pd">108</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_profile_two_pd"/>
        <paramRef ref="geneParams.ts_fc_two_pd"/>
        <!-- paramRef ref="geneParams.ts_fc_profile_one_pd"/ -->
        <paramRef ref="geneParams.ts_fc_one_pd"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_one_pd$$)
 and pen.profile_set_id = $$ts_fc_profile_two_pd$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_two_pd$$)
 and pen.profile_set_id = $$ts_fc_profile_two_pd$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByTimeSeriesFoldChangeBradyRoos" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="ts_fc_one_pd">112</paramValue>
	<paramValue name="ts_fc_two_pd">108</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_profile_two_pd"/>
        <paramRef ref="geneParams.ts_fc_two_pd" quote="false"/>
        <!-- paramRef ref="geneParams.ts_fc_profile_one_pd"/ -->
        <paramRef ref="geneParams.ts_fc_one_pd" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <wsColumn name="project_id" wsName="project_id"/>
        <wsColumn name="source_id" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>


    <sqlQuery name="GenesByTimeSeriesFoldChangeBradyFl" includeProjects="ToxoDB" 
              isCacheable="true">

      <testParamValues>
	<paramValue name="ts_fc_one_fl">144</paramValue>
	<paramValue name="ts_fc_two_fl">146</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_profile_two_fl"/>
        <paramRef ref="geneParams.ts_fc_two_fl"/>
        <!-- paramRef ref="geneParams.ts_fc_profile_one_fl"/ -->
        <paramRef ref="geneParams.ts_fc_one_fl"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_one_fl$$)
 and pen.profile_set_id = $$ts_fc_profile_two_fl$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_two_fl$$)
 and pen.profile_set_id = $$ts_fc_profile_two_fl$$
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByTimeSeriesFoldChangeBradyFl" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="ts_fc_one_fl">144</paramValue>
	<paramValue name="ts_fc_two_fl">146</paramValue>
      </testParamValues>

        <paramRef ref="geneParams.ts_fc_profile_two_fl"/>
        <paramRef ref="geneParams.ts_fc_two_fl" quote="false"/>
        <paramRef ref="geneParams.ts_fc_profile_one_fl"/>
        <paramRef ref="geneParams.ts_fc_one_fl" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <wsColumn name="project_id" wsName="project_id"/>
        <wsColumn name="source_id" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>


    <sqlQuery name="GenesByTimeSeriesFoldChangeBradyBoothroyd" includeProjects="ToxoDB" 
              isCacheable="true">
        <paramRef ref="geneParams.ts_fc_two_matt"/>
        <paramRef ref="geneParams.ts_fc_one_matt"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="fold_change"/>
        <column name="avg_group_one"/>
        <column name="avg_group_two"/>
      <sql includeProjects="ToxoDB">
          <![CDATA[
 select one.source_id, '@PROJECT_ID@' as project_id,
                   round((CASE WHEN power(2, one.average) / power(2,two.average) >= 1
                                 THEN power(2, one.average) / power(2,two.average)
                           ELSE -1 / (power(2,one.average) / power(2,two.average))
                   END),1) as fold_change,
        round(one.average,2) as avg_group_one,
        round(two.average,2) as avg_group_two
 from (
 select p.source_id, avg(pe.value) as average
 from  apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_one_matt$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) one,
 (
 select p.source_id, avg(pe.value) as average
 from apidb.profileelementname pen, apidb.profile p, apidb.profileelement pe
 where pen.profile_element_name_id in ($$ts_fc_two_matt$$)
 and p.profile_set_id = pen.profile_set_id
 and pe.profile_id = p.profile_id
 and pe.element_order = pen.element_order
 group by p.source_id ) two
 where one.source_id = two.source_id
 and  $$regulated_dir$$ (
               case when one.average >= two.average
                   then power(2,one.average) / power(2,two.average)
                   else -( power(2,two.average) / power(2,one.average))
                   end ) >= $$fold_change$$
          ]]>
      </sql>

    </sqlQuery>

    <processQuery name="GenesByTimeSeriesFoldChangeBradyBoothroyd" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.ts_fc_two_matt" quote="false"/>
        <paramRef ref="geneParams.ts_fc_one_matt" quote="false"/>
        <paramRef ref="geneParams.fold_change"/>
        <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <wsColumn name="project_id" wsName="project_id"/>
        <wsColumn name="source_id" wsName="source_id"/>
        <wsColumn name="fold_change" wsName="fold_change"/>
        <wsColumn name="avg_group_one" wsName="avg_group_one"/>
        <wsColumn name="avg_group_two" wsName="avg_group_two"/>
    </processQuery>




    <sqlQuery name="GenesByExpressionTiming" includeProjects="TriTrypDB" 
              isCacheable="true">

        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.maxExprHour"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
        <paramRef ref="geneParams.profileSet"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <column name="num_replicates"/> 
        <sql>
          <![CDATA[
          SELECT iq.source_id, to_char(max(iq.max_fc), '999.99') as max_fc,
                 count(*) as num_replicates, '@PROJECT_ID@' as project_id
          from (
          SELECT gf.source_id, prs.name, max(pr.ind_ratio) as max_fc
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR pr.time_of_max_expr in ($$maxExprHour$$))
          AND ($$minOrMax$$ = 'max'
                 OR pr.time_of_min_expr in ($$maxExprHour$$))
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$ / 100
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          AND prs.name like case when $$profileSet$$ = '2' then 'Linfantum promastigote time-course biorep0%' else $$profileSet$$ end
          group BY gf.source_id,prs.name) iq
          group by iq.source_id
          having count(*) >= case when $$profileSet$$ = '2' then 2 else 1 end
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues>
            <paramValue name="profileSet">Both replicate 1 and replicate 2</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.minOrMax" quote="false"/>
        <paramRef ref="geneParams.maxExprHour"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
<!--        <paramRef ref="geneParams.minExprHour"/>
        <paramRef ref="geneParams.minPlusMinusHours"/> -->
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
         <paramRef ref="geneParams.profileSet" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
          <wsColumn name="max_fc" width="32" wsName="max_fc"/>
          <wsColumn name="num_replicates" width="32" wsName="max_fc"/>
    </processQuery>


    <sqlQuery name="GenesByFalcExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true">

        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.maxExprHourFalc"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
        <paramRef ref="geneParams.profileSetFalc"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <sql>
          <![CDATA[
          SELECT iq.source_id, to_char(max(iq.max_fc), '999.99') as max_fc, 
                 count(*) as num_replicates, '@PROJECT_ID@' as project_id
          FROM (
          SELECT gf.source_id, prs.name, max(pr.ind_ratio) as max_fc
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR abs($$maxExprHourFalc$$ - pr.equiv_max) <= $$maxPlusMinusHours$$)
          AND ($$minOrMax$$ = 'max'
                 OR abs($$maxExprHourFalc$$ - pr.equiv_min) <= $$maxPlusMinusHours$$)
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$ / 100
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          AND prs.name like case when $$profileSetFalc$$ = '3' then 'DeRisi % Smoothed Averaged' else $$profileSetFalc$$ end
          group BY gf.source_id,prs.name) iq
          group by iq.source_id
          having count(*) >= case when $$profileSetFalc$$ = '3' then 3 else 1 end
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByFalcExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

        <paramRef ref="geneParams.minOrMax" quote="false"/>
        <paramRef ref="geneParams.maxExprHourFalc"/>
        <paramRef ref="geneParams.maxPlusMinusHours"/>
<!--        <paramRef ref="geneParams.minExprHour"/>
        <paramRef ref="geneParams.minPlusMinusHours"/> -->
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
         <paramRef ref="geneParams.profileSetFalc" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
          <wsColumn name="max_fc" width="32" wsName="max_fc"/>
          <wsColumn name="num_replicates" width="32" wsName="max_fc"/>
    </processQuery>

    <sqlQuery name="GenesByVivaxExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true">
        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.exprHourVivax"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
        <paramRef ref="geneParams.profileSetVivax"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <column name="num_replicates"/> 
        <sql>
          <![CDATA[
          SELECT iq.source_id, to_char(max(iq.max_fc), '99999.99') as max_fc,
                 count(*) as num_replicates, '@PROJECT_ID@' as project_id
          from (
          SELECT gf.source_id, prs.name, max(pr.ind_ratio) as max_fc
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR pr.time_of_max_expr in ($$exprHourVivax$$))
          AND ($$minOrMax$$ = 'max'
                 OR pr.time_of_min_expr in ($$exprHourVivax$$))
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          AND prs.name like case when $$profileSetVivax$$ = '3' then 'ZB Pvivax time series normalized_averaged %' else $$profileSetVivax$$ end
          group BY gf.source_id,prs.name) iq
          group by iq.source_id
          having count(*) >= case when $$profileSetVivax$$ = '3' then 3 else 1 end
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByVivaxExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.minOrMax" quote="false"/>
        <paramRef ref="geneParams.exprHourVivax"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
        <paramRef ref="geneParams.profileSetVivax" quote="false"/>
	<wsColumn name="source_id" width="32" wsName="source_id"/>
	<wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="max_fc" width="32" wsName="max_fc"/>
        <wsColumn name="num_replicates" width="32" wsName="max_fc"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- RNA Seq Expression Timing -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByRNASeqExpressionTiming" includeProjects="PlasmoDB" 
              isCacheable="true">
        <paramRef ref="geneParams.minOrMax"/>
        <paramRef ref="geneParams.exprHourRNASeq"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/> 
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_fc"/>
        <column name="num_replicates"/> 
        <sql>
          <![CDATA[
          SELECT iq.source_id, to_char(max(iq.max_fc), '99999.99') as max_fc,
                 count(*) as num_replicates, '@PROJECT_ID@' as project_id
          from (
          SELECT gf.source_id, prs.name, max(pr.ind_ratio) as max_fc
          FROM apidb.profile pr, apidb.profileset prs,
               dots.nafeature gf
          WHERE ($$minOrMax$$ = 'min'
                 OR pr.time_of_max_expr in ($$exprHourRNASeq$$))
          AND ($$minOrMax$$ = 'max'
                 OR pr.time_of_min_expr in ($$exprHourRNASeq$$))
          AND pr.ind_ratio >= $$inductionFold$$
          AND pr.max_percentile >= $$expressionPct$$
          AND pr.source_id = gf.source_id
          AND pr.profile_set_id = prs.profile_set_id
          AND prs.name = 'P.falciparum RNA Sequence Profiles'
          group BY gf.source_id,prs.name) iq
          group by iq.source_id
          ]]>
      </sql>
    </sqlQuery>

    <processQuery name="GenesByRNASeqExpressionTiming" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.minOrMax" quote="false"/>
        <paramRef ref="geneParams.exprHourRNASeq"/>
        <paramRef ref="geneParams.inductionFold"/>
        <paramRef ref="geneParams.expressionPct"/>
	<wsColumn name="source_id" width="32" wsName="source_id"/>
	<wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="max_fc" width="32" wsName="max_fc"/>
        <wsColumn name="num_replicates" width="32" wsName="max_fc"/>
    </processQuery>

             
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Expression profile similarity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <processQuery name="GenesByProfileSimilarity" includeProjects="PlasmoDB"  
             processName="org.apidb.apicomplexa.wsfplugin.profile.ProfileSimilarityPlugin">
       <paramRef ref="geneParams.ProfileGeneId"  quote="false"/>
       <paramRef ref="geneParams.ProfileDistanceMethod"  quote="false"/>
       <paramRef ref="geneParams.ProfileNumToReturn"/>
       <paramRef ref="geneParams.ProfileProfileSet"  quote="false"/>
       <paramRef ref="geneParams.ProfileSearchGoal"  quote="false"/>
       <paramRef ref="geneParams.ProfileTimeShift"/>
       <paramRef ref="geneParams.ProfileScaleData"/>
       <paramRef ref="geneParams.ProfileMinShift"/>
       <paramRef ref="geneParams.ProfileMaxShift"/>
       <wsColumn name="source_id" width="50" wsName="GeneID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="distance" wsName="Distance" width="50"/>
       <wsColumn name="time_shift" wsName="Shift" width="50"/>
       <wsColumn name="query_source_id" wsName="QueryGeneId" width="50"/>
    </processQuery>

    <processQuery name="GenesByProfileSimilarity" includeProjects="EuPathDB"  
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
       <paramRef ref="geneParams.ProfileGeneId"/>
       <paramRef ref="geneParams.ProfileDistanceMethod" quote="false"/>
       <paramRef ref="geneParams.ProfileNumToReturn"/>
       <paramRef ref="geneParams.ProfileProfileSet" quote="false"/>
       <paramRef ref="geneParams.ProfileSearchGoal" quote="false"/>
       <paramRef ref="geneParams.ProfileTimeShift"/>
       <paramRef ref="geneParams.ProfileScaleData"/>
       <paramRef ref="geneParams.ProfileMinShift"/>
       <paramRef ref="geneParams.ProfileMaxShift"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="distance" wsName="distance" width="50"/>
       <wsColumn name="time_shift" wsName="time_shift" width="50"/>
       <wsColumn name="query_source_id" wsName="query_source_id" width="50"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByPhyleticProfile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPhyleticProfile" doNotTest="true" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids" default="PY03942"/>
        <paramRef ref="geneParams.min_mutual_information_score"/>
        <paramRef ref="geneParams.include_only_queries"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
        <column name="project_id"/>
        <column name="source_id" />
        <column name="query_ids" />
        <column name="mutual_information_scores" />
        <column name="num_queries" />
        <sql>
            <![CDATA[
                select * from (
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, count(*) as num_queries,
                    apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids,
                    apidb.tab_to_string(CAST(COLLECT(to_char(mis.mutual_information_score/10000)) AS apidb.varchartab), ', ') AS mutual_information_scores
                FROM apidb.geneattributes gf1, dots.PhylogeneticProfile pp1,
                     dots.MutualInformationScore mis, dots.PhylogeneticProfile pp2,
                     apidb.geneattributes gf2,@WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ ds, apidb.GeneId gi
                WHERE $$include_only_queries$$ = 'no'
                  AND gf1.source_id = gi.gene
                  AND gi.id = lower(ds.dataset_value)
                  AND ds.dataset_id = $$ds_gene_ids$$
                  AND gf1.na_feature_id = pp1.na_feature_id
                  AND ((pp1.phylogenetic_profile_id = mis.primary_profile_id
                  AND mis.secondary_profile_id = pp2.phylogenetic_profile_id)
                    OR (pp1.phylogenetic_profile_id = mis.secondary_profile_id
                  AND mis.primary_profile_id = pp2.phylogenetic_profile_id))
                  and mis.mutual_information_score/1000 >= $$min_mutual_information_score$$
                  AND pp2.na_feature_id = gf2.na_feature_id
                  AND gf2.source_id != gf1.source_id
                  group  by gf2.source_id
                  having count(*) >= $$min_num_query_matches$$
             UNION
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, count(*) as num_queries,
                    apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                    apidb.tab_to_string(CAST(COLLECT(to_char(mis.mutual_information_score/10000)) AS apidb.varchartab), ', ') AS mutual_information_scores
                FROM apidb.geneattributes gf1, dots.PhylogeneticProfile pp1,
                     dots.MutualInformationScore mis, dots.PhylogeneticProfile pp2,
                     apidb.geneattributes gf2,@WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ ds, apidb.GeneId gi
                WHERE $$include_only_queries$$ = 'yes'
                  AND gf1.source_id = gi.gene
                  AND gi.id = lower(ds.dataset_value)
                  AND ds.dataset_id = $$ds_gene_ids$$
                  AND gf1.na_feature_id = pp1.na_feature_id
                  AND ((pp1.phylogenetic_profile_id = mis.primary_profile_id
                  AND mis.secondary_profile_id = pp2.phylogenetic_profile_id)
                    OR (pp1.phylogenetic_profile_id = mis.secondary_profile_id
                  AND mis.primary_profile_id = pp2.phylogenetic_profile_id))
                  and mis.mutual_information_score/1000 >= $$min_mutual_information_score$$
                  AND pp2.na_feature_id = gf2.na_feature_id
                  AND gf2.source_id in (select intds.dataset_value as gene_id 
                      from @WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ intds
                      where intds.dataset_id = $$ds_gene_ids$$) 
                  AND gf2.source_id != gf1.source_id
                  group  by gf2.source_id
                  having count(*) >= $$min_num_query_matches$$
                )
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByPhyleticProfile" includeProjects="EuPathDB" doNotTest="true"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids" default="PY03942" quote="false"/>
 <paramRef ref="sharedParams.signature"  quote="false"/>
        <paramRef ref="geneParams.min_mutual_information_score"/>
        <paramRef ref="geneParams.include_only_queries"  quote="false"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="query_ids" />
        <wsColumn name="mutual_information_scores" />
        <wsColumn name="num_queries" />
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByFunctionalInteraction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByFunctionalInteraction" doNotTest="true" includeProjects="PlasmoDB" 
              isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids" default="PF11_0344"/>
        <paramRef ref="geneParams.min_interaction"/>
        <paramRef ref="geneParams.include_only_queries"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="likelihood_scores"/>
        <column name="query_ids" />
        <column name="queries_matched"/>
        <sql>
            <![CDATA[
                select * from (
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, 
                  apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                  apidb.tab_to_string(CAST(COLLECT(to_char(rnf.value)) AS apidb.varchartab), ', ') AS likelihood_scores,
                  count(*) as queries_matched
                FROM apidb.geneattributes gf1, apidb.RelatedNaFeature rnf,
                     apidb.geneattributes gf2,@WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ ds, apidb.GeneId gi
                WHERE $$include_only_queries$$ = 'no'
                  AND gf1.source_id = gi.gene
                  AND gi.id = lower(ds.dataset_value)
                  AND ds.dataset_id = $$ds_gene_ids$$
                  AND gf1.na_feature_id = rnf.na_feature_id
                  AND rnf.associated_na_feature_id = gf2.na_feature_id
                  AND rnf.value >= $$min_interaction$$
                GROUP BY gf2.source_id
                HAVING count(*) >= $$min_num_query_matches$$
              UNION
                SELECT gf2.source_id, '@PROJECT_ID@' as project_id, 
                  apidb.tab_to_string(CAST(COLLECT(gf1.source_id) AS apidb.varchartab), ', ') AS query_ids, 
                  apidb.tab_to_string(CAST(COLLECT(to_char(rnf.value)) AS apidb.varchartab), ', ') AS likelihood_scores,
                  count(*) as queries_matched
                FROM apidb.geneattributes gf1, apidb.RelatedNaFeature rnf,
                     apidb.geneattributes gf2,@WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ ds, apidb.GeneId gi
                WHERE $$include_only_queries$$ = 'yes'
                  AND gf1.source_id = gi.gene
                  AND gi.id = lower(ds.dataset_value)
                  AND ds.dataset_id = $$ds_gene_ids$$
                  AND gf1.na_feature_id = rnf.na_feature_id
                  AND rnf.associated_na_feature_id = gf2.na_feature_id
                  AND rnf.value >= $$min_interaction$$
                  AND gf2.source_id in (select intds.dataset_value as gene_id 
                      from @WDK_ENGINE_SCHEMA@dataset_values@USER_DBLINK@ intds
                      where intds.dataset_id = $$ds_gene_ids$$)
                GROUP BY gf2.source_id
                HAVING count(*) >= $$min_num_query_matches$$
              )
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="GenesByFunctionalInteraction" includeProjects="EuPathDB" doNotTest="true"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.ds_gene_ids" default="PF11_0344" quote="false"/>
<paramRef ref="sharedParams.signature"  quote="false"/>
        <paramRef ref="geneParams.min_interaction"/>
        <paramRef ref="geneParams.include_only_queries"  quote="false"/>
        <paramRef ref="geneParams.min_num_query_matches"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="likelihood_scores"/>
        <wsColumn name="query_ids" />
        <wsColumn name="queries_matched"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByDifferentialExpression" includeProjects="ToxoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.exprnsample"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
          select '@PROJECT_ID@' as project_id, ga.source_id as source_id, 
                 to_char(d.fold_change, '999.9') as fold_change, d.confidence
          from rad.differentialexpression d, Core.tableInfo t , 
               Apidb.GeneAttributes ga, rad.analysis a 
          where ga.na_feature_id = d.row_id 
           and t.table_id = d.table_id
           and a.analysis_id = d.analysis_id
           and t.name = 'GeneFeature'
           and $$regulated_dir$$(d.fold_change) >= $$fold_change$$
           and d.confidence >= $$confidence$$
           and a.name = $$exprnsample$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByDifferentialExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.exprnsample" quote="false"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 

    <sqlQuery name="GenesByDifferentialExpressionChooseComparisons" includeProjects="ToxoDB"
          isCacheable='true'>

        <testParamValues includeProjects="ToxoDB">
            <paramValue name="lineages_b">GT1 (Type I) </paramValue>
        </testParamValues>

       <paramRef ref="geneParams.lineages_a"/>
       <paramRef ref="geneParams.lineages_b"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
          select '@PROJECT_ID@' as project_id, ga.source_id as source_id, 
                 d.confidence, to_char(d.fold_change, '999.9') as fold_change
          from Apidb.GeneAttributes ga, 
               (select r.row_id, r.confidence, 
                   case when lower(a.name) = $$lineages_a$$ || 'vs' || $$lineages_b$$
                        then r.fold_change
                        else -(r.fold_change)
                   end as fold_change
                from rad.analysis a, rad.differentialexpression r, core.tableinfo t
                where a.analysis_id = r.analysis_id
                  and r.table_id = t.table_id
                  and t.name = 'GeneFeature'
                  and (lower(a.name) = $$lineages_a$$ || 'vs' || $$lineages_b$$ 
                    or lower(a.name) = $$lineages_b$$ || 'vs' || $$lineages_a$$)
                ) d
           where ga.na_feature_id = d.row_id
             and $$regulated_dir$$(d.fold_change) >= $$fold_change$$
             and d.confidence >= $$confidence$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByDifferentialExpressionChooseComparisons" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues>
            <paramValue name="lineages_b">GT1 (Type I) </paramValue>
        </testParamValues>

       <paramRef ref="geneParams.lineages_a" quote="false"/>
       <paramRef ref="geneParams.lineages_b" quote="false"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GiardiaGenesByDifferentialExpression" includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.gl_exprnsample"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
            <![CDATA[
            select g.source_id,  '@PROJECT_ID@' as project_id, 
                   avg(round(de.fold_change, 2)) as fold_change,
                   max(round(de.confidence, 2)) as confidence
            from rad.DIFFERENTIALEXPRESSION de, Core.TABLEINFO ti, 
                 rad.COMPOSITEELEMENTNASEQUENCE cs, dots.TRANSCRIPT t, 
                 apidb.geneattributes g, rad.analysis a
            where ti.name = 'ShortOligoFamily'
              and de.table_id = ti.table_id
              and de.row_id = cs.composite_element_id
              and cs.na_sequence_id = t.na_sequence_id
              and t.parent_id = g.na_feature_id
              and de.analysis_id = a.analysis_id
              and a.name = $$gl_exprnsample$$
              AND de.confidence >= $$confidence$$
              AND ($$regulated_dir$$ (de.fold_change) >= $$fold_change$$)
             group by g.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GiardiaGenesByDifferentialExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.gl_exprnsample"  quote="false"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Generic Expression Percentile Query -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpressionPercentileProfile"  includeProjects="GiardiaDB"
          isCacheable='true'>
       <paramRef ref="geneParams.expressionPercentileSamples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select distinct source_id, '@PROJECT_ID@' as project_id
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and ps.name || '|' || pen.name in ( $$expressionPercentileSamples$$ )
            and pe.value BETWEEN $$min_expression_percentile$$
              and $$max_expression_percentile$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpressionPercentileProfile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.expressionPercentileSamples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>   



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- ToxoGenesByExpressionPercentile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ToxoGenesByExpressionPercentile" includeProjects="ToxoDB"
          isCacheable='true'>

      <testParamValues>
	<paramValue name="toxo_expr_sample">GT1(Type I)</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.toxo_expr_studies"/>
       <paramRef ref="geneParams.toxo_expr_sample"/>
       <paramRef ref="geneParams.percentile"/>
       <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
	     SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                    max(to_char(ep.percentile,'999.99')) as percentile
               FROM Rad.Analysis a, Rad.ExpressionProfile ep, Core.tableInfo t, 
                    Rad.Protocol p, ApiDb.GeneAttributes ga
              WHERE p.name = '$$toxo_expr_studies$$'
	        AND t.table_id = ep.table_id
                AND t.name = 'GeneFeature'
                AND a.protocol_id = p.protocol_id
                AND ep.analysis_id = a.analysis_id
                AND a.name = $$toxo_expr_sample$$
                AND ga.na_feature_id = ep.row_id 
                AND ep.percentile >= $$percentile$$
             GROUP BY ga.source_id
             ORDER BY ga.source_id
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="ToxoGenesByExpressionPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="toxo_expr_sample">GT1(Type I)</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.toxo_expr_studies"  quote="false"/>
       <paramRef ref="geneParams.toxo_expr_sample"  quote="false"/>
       <paramRef ref="geneParams.percentile"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="percentile" width="32" />
    </processQuery>   

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByIntraerythrocyticExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByIntraerythrocyticExpression" includeProjects="PlasmoDB" 
           isCacheable="true">
        <paramRef ref="geneParams.synchronization"/>
        <paramRef ref="geneParams.intraerythrocytic_stages"/> 
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[
            SELECT e.source_id, '@PROJECT_ID@' as project_id, MAX(e.value) AS max_percentile,
                   MIN(e.value) AS min_percentile
            FROM apidb.Expression e
            WHERE e.element_order in ($$intraerythrocytic_stages$$)
              AND e.profile_set_name in ($$synchronization$$)
              AND e.value >= $$min_expression_percentile$$ / 100
              AND e.value <= $$max_expression_percentile$$ / 100
            GROUP BY e.source_id
            ORDER BY e.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByIntraerythrocyticExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.synchronization"  quote="false"/>
        <paramRef ref="geneParams.intraerythrocytic_stages" quote="false"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExtraerythrocyticExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExtraerythrocyticExpression"  includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.extraerythrocytic_stages"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[
            SELECT e.source_id, '@PROJECT_ID@' as project_id, MAX(e.value) AS max_percentile,
                   MIN(e.value) AS min_percentile
            FROM apidb.Expression e
            WHERE e.profile_set_name in ('winzeler_cc_sorbPct', 'winzeler_cc_sporPct')
              AND e.element_name in ($$extraerythrocytic_stages$$)
              AND e.value >= $$min_expression_percentile$$ / 100
              AND e.value <= $$max_expression_percentile$$ / 100
            GROUP BY e.source_id
            ORDER BY e.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByExtraerythrocyticExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.extraerythrocytic_stages"  quote="false"/>
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpression" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="max_percentile"/>
        <column name="min_percentile"/>
        <sql>
            <![CDATA[

            SELECT e.source_id, '@PROJECT_ID@' as project_id, MAX(e.value) AS max_percentile,
                   MIN(e.value) AS min_percentile
            FROM apidb.Expression e
            WHERE e.profile_set_name
                  in ('winzeler_cc_sorbPct', 'winzeler_cc_tempPct',
                      'winzeler_cc_sporPct')
              AND e.value >= $$min_expression_percentile$$ / 100
              AND e.value <= $$max_expression_percentile$$ / 100
            GROUP BY e.source_id
            ORDER BY e.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.min_expression_percentile"/>
        <paramRef ref="geneParams.max_expression_percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="max_percentile"/>
        <wsColumn name="min_percentile"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDifferentialMeanExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByDifferentialMeanExpression" includeProjects="PlasmoDB"
          isCacheable='true'>

      <testParamValues includeProjects="PlasmoDB">
	<paramValue name="diffMeanExpr_comparitor">3D7 SIR2 KO 24hr</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.diffMeanExpr_reference"/>
       <paramRef ref="geneParams.diffMeanExpr_comparitor" default="3D7 SIR2 KO 24hr"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
       <paramRef ref="geneParams.fold_change"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql includeProjects="PlasmoDB">
        <![CDATA[
           SELECT ga.gene as source_id, '@PROJECT_ID@' as project_id, 
                   round((CASE WHEN avg(ep1.mean)/avg(ep2.mean) >= 1
                   THEN avg(ep1.mean)/avg(ep2.mean)
                   ELSE -1/(avg(ep1.mean)/avg(ep2.mean))
                   END),1) as fold_change
            FROM Rad.AnalysisInput ai1, Rad.Analysis a1, 
                 Rad.ExpressionProfile ep1,  
                 Rad.AnalysisInput ai2, Rad.Analysis a2,
                 Rad.ExpressionProfile ep2, 
                 Rad.Protocol p, Rad.ShortOligoFamily sof,
                 ApiDB.GeneAlias ga
            WHERE p.name = 'R Expression Statistics'
             AND ai1.logical_group_id = $$diffMeanExpr_reference$$
             AND a1.analysis_id = ai1.analysis_id
             AND a1.protocol_id = p.protocol_id
             AND ep1.analysis_id = a1.analysis_id
             AND sof.composite_element_id = ep1.row_id
             AND ai2.logical_group_id = $$diffMeanExpr_comparitor$$
             AND a2.analysis_id = ai2.analysis_id
             AND a2.protocol_id = p.protocol_id
             AND ep2.analysis_id = a2.analysis_id
             AND sof.composite_element_id = ep2.row_id
             AND sof.source_id is not null
             AND ga.alias = sof.source_id
             having $$regulated_dir$$ (
              case when avg(ep1.mean) >= avg(ep2.mean)
                   then avg(ep1.mean)/avg(ep2.mean)
                   else -(avg(ep2.mean)/avg(ep1.mean))
                   end ) >= $$fold_change$$
             GROUP BY ga.gene
             ORDER BY ga.gene
            ]]>
       </sql>
    </sqlQuery>    

    <processQuery name="GenesByDifferentialMeanExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues includeProjects="EuPathDB">
            <paramValue name="diffMeanExpr_comparitor">W2mef EBA175 KO (late T)</paramValue>
        </testParamValues>
       <paramRef ref="geneParams.diffMeanExpr_reference" quote="false"/>
       <paramRef ref="geneParams.diffMeanExpr_comparitor" quote="false"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="fold_change" />
    </processQuery> 

    <sqlQuery name="ToxoGenesByDifferentialMeanExpression" includeProjects="ToxoDB"
          isCacheable='true'>

      <testParamValues>
	<paramValue name="diffMeanExpr_toxo_comparitor">GT1-Compound1</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.diffMeanExpr_toxo_reference"/>
       <paramRef ref="geneParams.diffMeanExpr_toxo_comparitor"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
       <paramRef ref="geneParams.fold_change"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql>
	 <![CDATA[
          SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                 to_char((CASE WHEN avg(ep1.mean)/avg(ep2.mean) >= 1
                 THEN avg(power(2,ep1.mean))/avg(power(2,ep2.mean))
                 ELSE -1/(avg(power(2,ep1.mean))/avg(power(2,ep2.mean)))
                 END),999.9) as fold_change
            FROM Rad.Analysis a1, Rad.ExpressionProfile ep1,
                 Rad.Analysis a2, Rad.ExpressionProfile ep2, 
                 Rad.Protocol p, ApiDB.GeneAttributes ga
           WHERE p.name = 'Toxo_Strain_Gene_Expressions'  --protocol_id=281
             AND a1.protocol_id = p.protocol_id
             AND ep1.analysis_id = a1.analysis_id
	     AND a1.name = $$diffMeanExpr_toxo_reference$$
	     AND ga.na_feature_id = ep1.row_id
             AND a2.protocol_id = p.protocol_id
             AND ep2.analysis_id = a2.analysis_id
	     AND a2.name = $$diffMeanExpr_toxo_comparitor$$
	     AND ga.na_feature_id = ep2.row_id
             HAVING $$regulated_dir$$ (
              CASE WHEN avg(ep1.mean) >= avg(ep2.mean)
                   THEN avg(power(2,ep1.mean))/avg(power(2,ep2.mean))
                   ELSE -(avg(power(2,ep2.mean))/avg(power(2,ep1.mean)))
                   END ) >= $$fold_change$$
             GROUP BY ga.source_id
             ORDER BY ga.source_id
            ]]>
          </sql>
    </sqlQuery>    

    <processQuery name="ToxoGenesByDifferentialMeanExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

      <testParamValues>
	<paramValue name="diffMeanExpr_toxo_comparitor">GT1-Compound1</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.diffMeanExpr_toxo_reference" quote="false"/>
       <paramRef ref="geneParams.diffMeanExpr_toxo_comparitor" quote="false"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
	  <wsColumn name="fold_change" width="32" wsName="fold_change"/>
    </processQuery> 

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExpressionPercentileA -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExpressionPercentileA" includeProjects="PlasmoDB" isCacheable="true"> 
       <paramRef ref="geneParams.cowmanSample"/>
       <paramRef ref="geneParams.percentile"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="percentile" />
       <sql>
            <![CDATA[
	    SELECT 
                 ga.gene as source_id, '@PROJECT_ID@' as project_id, 
                 max(to_char(de.percentile,'99.99')) as percentile
            FROM RAD.ExpressionProfile de, Rad.ShortOligoFamily sof,
                 Rad.Analysis a, Rad.AnalysisInput aia, 
		 Rad.LogicalGroup lga,
                 Rad.Protocol p, Rad.ProtocolParam pp, Rad.AnalysisParam ap,
                 ApiDB.GeneAlias ga
            WHERE sof.source_id is not null
             AND ga.alias = sof.source_id
             AND sof.composite_element_id = de.row_id
             AND a.analysis_id = de.analysis_id
             AND a.analysis_id = aia.analysis_id
             AND aia.logical_group_id = lga.logical_group_id 
             AND a.protocol_id = p.protocol_id
             AND pp.protocol_id = p.protocol_id
             AND ap.protocol_param_id = pp.protocol_param_id
             AND ap.analysis_id = a.analysis_id
             AND p.name = 'R Expression Statistics'
             AND lga.logical_group_id = $$cowmanSample$$
             AND de.percentile >= $$percentile$$
             GROUP BY ga.gene
             ORDER BY ga.gene
            ]]>
          </sql>
    </sqlQuery>    

    <processQuery name="GenesByExpressionPercentileA" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.cowmanSample" quote="false"/>
       <paramRef ref="geneParams.percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="percentile" />
    </processQuery> 


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByDailyCorrelation -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

<!--
    <sqlQuery name="GenesByDailyCorrelation" includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.dailyAnalysis"/>
       <paramRef ref="geneParams.correlation"/>
       <paramRef ref="geneParams.correlation_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="correlation" />
       <sql>
            <![CDATA[
          SELECT g.source_id, '@PROJECT_ID@' as project_id,
	      to_char(d.float_value, '999.999') as correlation
            FROM Rad.Datatransformationresult d, Core.TableInfo t, Dots.GeneFeature g
            WHERE t.table_id = d.table_id
             AND g.na_feature_id = d.row_id
             AND t.name = 'GeneFeature'
             AND d.analysis_id = $$dailyAnalysis$$
             AND ( $$correlation_dir$$ d.float_value) >= $$correlation$$
        ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByDailyCorrelation" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="correlation" />
    </processQuery>

-->



  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByCowmanSir2 -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByCowmanSir2FoldChange" includeProjects="PlasmoDB"
          isCacheable='true'>

      <testParamValues>
	<paramValue name="cowman_sir2_comparitor">wild type - schizont</paramValue>
      </testParamValues>

       <paramRef ref="geneParams.cowman_sir2_reference"/>
       <paramRef ref="geneParams.cowman_sir2_comparitor"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
       <paramRef ref="geneParams.fold_change"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql>
	 <![CDATA[
          SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                 to_char((CASE WHEN avg(ep1.mean)/avg(ep2.mean) >= 1
                 THEN avg(power(2,ep1.mean))/avg(power(2,ep2.mean))
                 ELSE -1/(avg(power(2,ep1.mean))/avg(power(2,ep2.mean)))
                 END),999.9) as fold_change
            FROM Rad.Analysis a1, Rad.ExpressionProfile ep1,
                 Rad.Analysis a2, Rad.ExpressionProfile ep2, 
                 Rad.Protocol p, ApiDB.GeneAttributes ga
           WHERE p.name = 'R Expression Statistics'
             AND regexp_like(a1.name, '^(wild type|sir2).+(ring|schizont|trophozoite)')
             AND regexp_like(a2.name, '^(wild type|sir2).+(ring|schizont|trophozoite)')
             AND a1.protocol_id = p.protocol_id
             AND ep1.analysis_id = a1.analysis_id
	     AND a1.name = $$cowman_sir2_reference$$
	     AND ga.na_feature_id = ep1.row_id
             AND a2.protocol_id = p.protocol_id
             AND ep2.analysis_id = a2.analysis_id
	     AND a2.name = $$cowman_sir2_comparitor$$
	     AND ga.na_feature_id = ep2.row_id
             HAVING $$regulated_dir$$ (
              CASE WHEN avg(ep1.mean) >= avg(ep2.mean)
                   THEN avg(power(2,ep1.mean))/avg(power(2,ep2.mean))
                   ELSE -(avg(power(2,ep2.mean))/avg(power(2,ep1.mean)))
                   END ) >= $$fold_change$$
             GROUP BY ga.source_id
             ORDER BY ga.source_id
            ]]>
          </sql>
    </sqlQuery>    

    <processQuery name="GenesByCowmanSir2FoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

       <paramRef ref="geneParams.cowman_sir2_reference" quote="false"/>
       <paramRef ref="geneParams.cowman_sir2_comparitor" quote="false"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
	  <wsColumn name="fold_change" width="32" wsName="fold_change"/>
    </processQuery> 

    <sqlQuery name="GenesByCowmanSir2Percentile"  includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.cowmanSir2Samples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <sql>
           <!-- use CDATA because query includes angle brackets -->
            <![CDATA[
           select distinct source_id, '@PROJECT_ID@' as project_id
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ( $$cowmanSir2Samples$$ )
            and 100 * pe.value BETWEEN $$min_expression_percentile$$
              and $$max_expression_percentile$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesByCowmanSir2Percentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.cowmanSir2Samples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>   


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesBySuCQ -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySuCqPage" includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.su_cq_comparisons"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence" />
       <column name="fold_change" />
       <sql>
	 <![CDATA[
          SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                 round(de.fold_change, 2) as fold_change,
                 round(de.confidence, 2) as confidence
          from apidb.geneattributes ga, rad.differentialexpression de, core.tableinfo ti
          where ti.name = 'GeneFeature'
          and ti.table_id = de.table_id
          and ga.na_feature_id = de.row_id
          and $$regulated_dir$$ (de.fold_change) >= $$fold_change$$
          and de.confidence >= $$confidence$$
          and de.analysis_id = $$su_cq_comparisons$$
            ]]>
          </sql>
    </sqlQuery>    

    <processQuery name="GenesBySuCqPage" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.su_cq_comparisons"/>
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery> 



    <sqlQuery name="GenesBySuCqPercentile"  includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.suCqSamples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <column name="project_id"/>
       <column name="source_id" />
       <sql>
            <![CDATA[
           select distinct source_id, '@PROJECT_ID@' as project_id
           from apidb.profileset ps, apidb.profileelement pe, apidb.profileelementname pen, apidb.profile p
           where ps.profile_set_id = pen.profile_set_id
            and ps.profile_set_id = p.profile_set_id
            and pe.profile_id = p.profile_id
            and pe.element_order = pen.element_order
            and pen.profile_element_name_id in ( $$suCqSamples$$ )
            and 100 * pe.value BETWEEN $$min_expression_percentile$$
              and $$max_expression_percentile$$
            ]]>
          </sql>
    </sqlQuery>  

    <processQuery name="GenesBySuCqPercentile" includeProjects="EuPathDB"  
        displayName="By Expression Percentile" 
        isCacheable='true' 
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">      
       <paramRef ref="geneParams.suCqSamples"/>
       <paramRef ref="geneParams.min_expression_percentile" default="80"/>
       <paramRef ref="geneParams.max_expression_percentile" default="100"/>
       <wsColumn name="source_id" width="50" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>   




  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByKappeFoldChange -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByKappeFoldChange" includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.kappeAnalysis"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="fold_change" />
       <sql>
            <![CDATA[
          SELECT g.source_id, '@PROJECT_ID@' as project_id,
	      to_char(de.fold_change, '999.99') as fold_change
            FROM Rad.DifferentialExpression de, Core.TableInfo t, apidb.geneattributes g
            WHERE t.table_id = de.table_id
             AND g.na_feature_id = de.row_id
             AND t.name = 'GeneFeature'
             AND de.analysis_id = $$kappeAnalysis$$
             AND ( $$regulated_dir$$ (de.fold_change)) >= $$fold_change$$
        ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByKappeFoldChange" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
         <paramRef ref="geneParams.kappeAnalysis" quote="false"/>
         <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="fold_change" />
    </processQuery>





  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByWatersDifferentialExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByWatersDifferentialExpression" includeProjects="PlasmoDB"
          isCacheable='true'>
       <paramRef ref="geneParams.confidence" default="0.7"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false" default="down-regulated"/>
        <column name="project_id"/>
       <column name="source_id" />
       <column name="confidence"/>
       <column name="fold_change" />
       <sql>
            <![CDATA[
          SELECT ga.source_id, '@PROJECT_ID@' as project_id, 
                 round(de.fold_change, 2) as fold_change,
                 round(de.confidence, 2) as confidence
          from apidb.geneattributes ga, rad.differentialexpression de, 
               core.tableinfo ti, rad.analysis a
          where ti.name = 'GeneFeature'
          and ti.table_id = de.table_id
          and ga.na_feature_id = de.row_id
          and a.analysis_id = de.analysis_id
          and $$regulated_dir$$ (de.fold_change) >= $$fold_change$$
          and de.confidence >= $$confidence$$
          and a.name = 'DOZI KO vs. Wild Type Expression Analysis'
        ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByWatersDifferentialExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="geneParams.confidence"/>
       <paramRef ref="geneParams.fold_change"/>
       <paramRef ref="geneParams.regulated_dir" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="confidence" />
       <wsColumn name="fold_change" />
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- BergheiGenesByExpressionPercentile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="BergheiGenesByExpressionPercentile" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.waters_profilesets"/>
        <paramRef ref="geneParams.r_min_expression_percentile"/>
        <paramRef ref="geneParams.r_max_expression_percentile"/>
        <paramRef ref="geneParams.yt_min_expression_percentile"/>
        <paramRef ref="geneParams.yt_max_expression_percentile"/>
        <paramRef ref="geneParams.ys_min_expression_percentile"/>
        <paramRef ref="geneParams.ys_max_expression_percentile"/>
        <paramRef ref="geneParams.ms_min_expression_percentile"/>
        <paramRef ref="geneParams.ms_max_expression_percentile"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
        SELECT DISTINCT fred.source_id, '@PROJECT_ID@' as project_id from(
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'R'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$r_min_expression_percentile$$ / 100
              AND pe.value <= $$r_max_expression_percentile$$ / 100
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'YT'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$yt_min_expression_percentile$$ / 100
              AND pe.value <= $$yt_max_expression_percentile$$ / 100
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'YS'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$ys_min_expression_percentile$$ / 100
              AND pe.value <= $$ys_max_expression_percentile$$ / 100
          INTERSECT
            SELECT p.source_id
            FROM apidb.profileElementName pen,
                 apidb.profileSet ps,
                 apidb.profile p,
                 apidb.profileElement pe
            WHERE ps.name LIKE $$waters_profilesets$$
              AND p.profile_set_id = ps.profile_set_id
              AND pe.profile_id = p.profile_id
              AND pen.element_order = pe.element_order
              AND pen.name = 'MS'
              AND ps.profile_set_id = pen.profile_set_id
              AND pe.value >= $$ms_min_expression_percentile$$ / 100
              AND pe.value <= $$ms_max_expression_percentile$$ / 100
          ) fred
          ORDER BY fred.source_id
        ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="BergheiGenesByExpressionPercentile" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.waters_profilesets" quote="false"/>
        <paramRef ref="geneParams.r_min_expression_percentile"/>
        <paramRef ref="geneParams.r_max_expression_percentile"/>
        <paramRef ref="geneParams.yt_min_expression_percentile"/>
        <paramRef ref="geneParams.yt_max_expression_percentile"/>
        <paramRef ref="geneParams.ys_min_expression_percentile"/>
        <paramRef ref="geneParams.ys_max_expression_percentile"/>
        <paramRef ref="geneParams.ms_min_expression_percentile"/>
        <paramRef ref="geneParams.ms_max_expression_percentile"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesBySubcellularLocalization -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesBySubcellularLocalization" includeProjects="PlasmoDB"
           isCacheable="true">
        <paramRef ref="geneParams.localization"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
              SELECT DISTINCT s.source_id, '@PROJECT_ID@' as project_id
              FROM apidb.Subcellular s
              WHERE targetting_domain = $$localization$$
              ORDER BY s.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesBySubcellularLocalization" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
 <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.localization" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByProteomicsProfile -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByProteomicsProfile" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.asexual_blood_stages_value"/>
        <paramRef ref="geneParams.gametocytes_value"/>
        <paramRef ref="geneParams.ookinetes_value"/>
        <paramRef ref="geneParams.oocysts_value"/>
        <paramRef ref="geneParams.sporozoites_value"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT pb.source_id, '@PROJECT_ID@' as project_id FROM
            (SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 1 AND ('any' = $$asexual_blood_stages_value$$ OR
                                           pe.value = $$asexual_blood_stages_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 2 AND ('any' = $$gametocytes_value$$ OR
                                           pe.value = $$gametocytes_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 3 AND ('any' = $$ookinetes_value$$ OR
                                           pe.value = $$ookinetes_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 4 AND ('any' = $$oocysts_value$$ OR
                                           pe.value = $$oocysts_value$$))
            INTERSECT
            SELECT p.source_id
            FROM apidb.profileElement pe, apidb.profile p, apidb.profileset ps
            WHERE pe.profile_id = p.profile_id
            AND   p.profile_set_id = ps.profile_set_id
            AND   ps.name = 'berghei_proteomic_Sinden'
            AND (pe.element_order = 5 AND ('any' = $$sporozoites_value$$ OR
                                           pe.value = $$sporozoites_value$$))) pb
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByProteomicsProfile" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organismSite" default="Plasmodium berghei"  quote="false"/>
        <paramRef ref="geneParams.asexual_blood_stages_value" quote="false"/>
        <paramRef ref="geneParams.gametocytes_value" quote="false"/>
        <paramRef ref="geneParams.ookinetes_value" quote="false"/>
        <paramRef ref="geneParams.oocysts_value" quote="false"/>
        <paramRef ref="geneParams.sporozoites_value" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByReagents -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByReagents" includeProjects="PlasmoDB,CryptoDB,ToxoDB"
              isCacheable="true">

        <paramRef ref="geneParams.reagent_type"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
               SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
               FROM apidb.geneattributes gf,
                dots.DbRefAaFeature df,
                sres.DbRef dbr, sres.ExternalDatabaseRelease edr,
                sres.ExternalDatabase ed, dots.TranslatedAAFeature taf,
                dots.Transcript t
               WHERE ed.name in ('MR4DBxRefs','AntibodyDBxRefs')
                 AND edr.external_database_id = ed.external_database_id
                 AND dbr.external_database_release_id = edr.external_database_release_id
                 AND (LOWER(dbr.secondary_identifier) = $$reagent_type$$
                      OR $$reagent_type$$ = 'any')
                 AND df.db_ref_id = dbr.db_ref_id
                 AND taf.aa_feature_id = df.aa_feature_id
                 AND t.na_feature_id = taf.na_feature_id
                 AND gf.na_feature_id = t.parent_id

           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByReagents" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
<!--
<paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.mr4_reagent_type" quote="false"/>
-->
          <paramRef ref="geneParams.reagent_type" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByExportPrediction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByExportPrediction" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.min_exportpred_score"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="exportpred_score"/>
        <sql>
            <![CDATA[
                SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
                  max(df.score) as exportpred_score
                FROM dots.aasequence aa,dots.DomainFeature df, dots.translatedaafeature tf,
                     dots.transcript t, apidb.geneattributes gf
                WHERE  aa.taxon_id in ($$organism$$)
                   AND aa.aa_sequence_id = df.aa_sequence_id
                   AND df.algorithm_name = 'exportpred'
                   AND df.score >= $$min_exportpred_score$$
                   AND tf.aa_sequence_id = aa.aa_sequence_id
                   AND t.na_feature_id = tf.na_feature_id
                   AND gf.na_feature_id = t.parent_id
                   GROUP BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByExportPrediction" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes" includeProjects="PlasmoDB,EuPathDB"/>
        <!--<paramRef ref="organismParams.organism" queryRef="organismVQ.withTriTrypGenes" includeProjects="TriTrypDB,EuPathDB"/> -->
        <paramRef ref="geneParams.min_exportpred_score"/>	
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="exportpred_score"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByCentromereProximity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByCentromereProximity" includeProjects="PlasmoDB,ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.max_centromere_distance"/>
        <paramRef ref="sharedParams.centromere_chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dist_centromere"/>
        <sql>
            <![CDATA[
                SELECT gcd.gene AS source_id, '@PROJECT_ID@' as project_id,
                TRIM(TO_CHAR(gcd.centromere_distance,'9,999,999')) as dist_centromere
                FROM apidb.GeneCentromereDistance gcd, apidb.GeneAttributes ga
                WHERE gcd.gene = ga.source_id
                  AND gcd.centromere_distance <= $$max_centromere_distance$$
                  AND gcd.genomic_sequence in ($$centromere_chromosome$$)
                ORDER BY gcd.genomic_sequence, ga.start_min
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByCentromereProximity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf"/>
        <paramRef ref="geneParams.max_centromere_distance"  quote="false"/>
        <paramRef ref="sharedParams.chromosome" quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="dist_centromere"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByTelomereProximity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByTelomereProximity" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.distanceFromTelomere"/>
        <paramRef ref="sharedParams.chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dist_telomere"/>
        <sql>
            <![CDATA[
	    SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
            trim(to_char(LEAST(s.length - l.end_max,l.start_min),'999,999')) as dist_telomere
	    FROM apidb.GENEattributes gf, dots.NALOCATION l, dots.EXTERNALNASEQUENCE s
	    WHERE gf.na_sequence_id = s.na_sequence_id
	     AND l.na_feature_id = gf.na_feature_id
	     AND s.source_id  in ($$chromosome$$)
	     AND (l.end_max >= s.length - $$distanceFromTelomere$$
                                      OR l.start_min <= 1 + $$distanceFromTelomere$$)
	     ORDER BY s.source_id,l.end_max
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByTelomereProximity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
        <paramRef ref="geneParams.distanceFromTelomere"  quote="false"/>
        <paramRef ref="sharedParams.chromosome_telomere"  quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="dist_telomere"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByNonnuclearGenomicRegion -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByNonnuclearGenomicRegion" includeProjects="PlasmoDB,ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.nonnuclearSequence"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT distinct gf.source_id, '@PROJECT_ID@' as project_id
            FROM apidb.geneattributes gf, dots.NaSequence ens
            WHERE ens.source_id IN ($$nonnuclearSequence$$)
              AND gf.na_sequence_id = ens.na_sequence_id
              AND end_max >= REGEXP_REPLACE('$$start_point$$', ',| ','') 
              AND (start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByNonnuclearGenomicRegion" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.tg-pf"/>
        <paramRef ref="geneParams.nonnuclearSequence"  quote="false"/>
        <paramRef ref="sharedParams.start_point"  quote="false"/>
        <paramRef ref="sharedParams.end_point"  quote="false"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesWithStructurePrediction -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithStructurePrediction" includeProjects="PlasmoDB"
              isCacheable="true">
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
            FROM dots.aafeature aaf, apidb.geneattributes gf, dots.transcript t,
                 dots.DbRefaaFeature drnf,  sres.DbRef dr,
                 sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed
            WHERE gf.na_feature_id = t.parent_id
              AND t.na_feature_id = aaf.na_feature_id
              AND aaf.aa_feature_id = drnf.aa_feature_id
              AND drnf.db_ref_id = dr.db_ref_id
              AND dr.external_database_release_id = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name = 'Predicted protein structures'
            ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesWithStructurePrediction" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
<paramRef ref="organismParams.organism" queryRef="organismVQ.pf"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByPdbSimilarity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByPdbSimilarity" includeProjects="PlasmoDB,TriTrypDB,CryptoDB"
              isCacheable="true">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenes" />
        <paramRef ref="geneParams.clades"/>
        <paramRef ref="geneParams.pvalue_cutoff"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="pvalue"/>
        <sql>
            <![CDATA[
            SELECT gf.source_id, '@PROJECT_ID@' as project_id, 
                 min(to_binary_double(pvalue_mant || 'e' || pvalue_exp)) pvalue
            FROM dots.TranslatedAaFeature taf, dots.TranslatedAaSequence tas,
                 /*  join to TranslatedAaSequence seems unneccessary */
                 core.TableInfo tas_ti, dots.Similarity s,
                 core.TableInfo eas_ti, dots.ExternalAaSequence eas,
                 sres.ExternalDatabaseRelease edr, sres.ExternalDatabase ed,
                 apidb.geneattributes gf, dots.ExternalNaSequence ens,
                 dots.Transcript t
            WHERE taf.aa_sequence_id = tas.aa_sequence_id
              AND tas_ti.name = 'TranslatedAASequence'
              AND tas_ti.table_id = s.query_table_id
              AND s.query_id = tas.aa_sequence_id
              AND s.pvalue_exp < $$pvalue_cutoff$$
              AND eas_ti.name = 'ExternalAASequence'
              AND eas_ti.table_id = s.subject_table_id
              AND s.subject_id = eas.aa_sequence_id
              AND eas.external_database_release_id
                  = edr.external_database_release_id
              AND edr.external_database_id = ed.external_database_id
              AND ed.name = 'PDB protein sequences'
              AND t.na_feature_id = taf.na_feature_id
              AND gf.na_feature_id = t.parent_id
              AND gf.na_sequence_id = ens.na_sequence_id
              AND eas.taxon_id IN
                  (SELECT taxon_id from sres.taxon
                   CONNECT BY parent_id = PRIOR taxon_id
                   START WITH taxon_id IN ($$clades$$))
              AND ens.taxon_id IN ($$organism$$)
            GROUP BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByPdbSimilarity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoTrypCryptoGenes"/>
        <paramRef ref="geneParams.clades" quote="false"/>
        <paramRef ref="geneParams.pvalue_cutoff"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
          <wsColumn name="pvalue" width="32"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByProteinDbAccession -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesByProteinDbAccession" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes" includeProjects="PlasmoDB"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withTriTrypGenes" includeProjects="TriTrypDB"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT gf.source_id, '@PROJECT_ID@' as project_id
             FROM apidb.geneattributes gf, dots.DbRefNaFeature drnf,
                  sres.DbRef dr, sres.ExternalDatabaseRelease edr,
                  sres.ExternalDatabase ed, dots.ExternalNaSequence ens
             WHERE (dr.primary_identifier = $$accession$$
                    OR dr.secondary_identifier = $$accession$$)
               AND gf.na_feature_id = drnf.na_feature_id
               AND drnf.db_ref_id = dr.db_ref_id
               AND dr.external_database_release_id
                     = edr.external_database_release_id
               AND edr.external_database_id = ed.external_database_id
               AND ed.name IN ('NRDB_gb_dbXRefBySeqIdentity',
                           /*  'NRDB_pdb_dbXRefBySeqIdentity', */
                               'NRDB_ref_dbXRefBySeqIdentity',
                               'NRDB_sp_dbXRefBySeqIdentity',
                               'GenBank')
              AND gf.na_sequence_id = ens.na_sequence_id
              AND ens.taxon_id IN ($$organism$$)
            ORDER BY gf.source_id
            ]]>
       </sql>
    </sqlQuery>  


<!-- I THINK IT I NOT USED 
    <processQuery name="GenesByProteinDbAccession" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.accession"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withPlasmoGenes" includeProjects="PlasmoDB"/>
        <paramRef ref="organismParams.organism" queryRef="organismVQ.withTriTrypGenes" includeProjects="TriTrypDB"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>
-->


  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesWithProteinLowComplexity -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="GenesWithProteinLowComplexity" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.percentLowComplexity"/>
        <paramRef ref="sharedParams.chromosome"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
	    select gf.source_id, '@PROJECT_ID@' as project_id
	    from Dots.LowComplexityAAFeature lc, apidb.geneattributes gf,
	         Dots.ExternalNASequence ens, Dots.AALocation al, 
                 Dots.AASequence s, Dots.Transcript t, Dots.TranslatedAAFeature taf
            where ens.source_id in ($$chromosome$$)
            and gf.na_sequence_id = ens.na_sequence_id
            and t.parent_id = gf.na_feature_id
            and taf.na_feature_id = t.na_feature_id
            and s.aa_sequence_id = taf.aa_sequence_id
            and lc.aa_sequence_id = s.aa_sequence_id
            and al.aa_feature_id = lc.aa_feature_id
	    group by gf.source_id
	    having sum(100 *(al.end_max - al.start_min)/s.length ) > $$percentLowComplexity$$
            ORDER BY gf.source_id
           ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesWithProteinLowComplexity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.percentLowComplexity"/>
        <paramRef ref="sharedParams.chromosome"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- GenesByGametocyteExpression -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

   <!-- got rid of the unused pr_organism parameter -->

    <sqlQuery name="GenesByGametocyteExpression" includeProjects="PlasmoDB"
              isCacheable="true">
        <paramRef ref="geneParams.day_and_strain"/>
        <paramRef ref="geneParams.min_expression_percentile" default="80"/>
        <paramRef ref="geneParams.max_expression_percentile" default="100"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT p.source_id, '@PROJECT_ID@' as project_id
            FROM apidb.profile p, apidb.profileElementName pen,
                 apidb.profileElement pe
            WHERE pe.value BETWEEN $$min_expression_percentile$$ / 100
                               AND $$max_expression_percentile$$ / 100
              AND pen.profile_element_name_id IN ($$day_and_strain$$)
              AND pen.profile_set_id = p.profile_set_id
              AND p.profile_id = pe.profile_id
              AND pe.element_order = pen.element_order
            ORDER by p.source_id
            ]]>
       </sql>
    </sqlQuery>  

    <processQuery name="GenesByGametocyteExpression" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="geneParams.day_and_strain" quote="false"/>
        <paramRef ref="geneParams.min_expression_percentile" default="80"/>
        <paramRef ref="geneParams.max_expression_percentile" default="100"/>
	  <wsColumn name="source_id" width="32" wsName="source_id"/>
	  <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>

  </querySet>

  <querySet name="GeneTransforms" queryType="transform" doNotTest="true">


    <sqlQuery name="GenesByExpandResult" includeProjects="ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.gene_result"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                    SELECT DISTINCT gb.source_id, gb.project_id
                    FROM $$gene_result$$ c, apidb.geneattributes ga, apidb.geneattributes gb
                    WHERE ga.source_id = c.source_id
                    AND gb.gene_id = ga.gene_id
            ]]>
       </sql>
    </sqlQuery> 
<!--
    <sqlQuery name="GenesByExpandOrganism" includeProjects="ToxoDB"
              isCacheable="true">
        <paramRef ref="geneParams.gene_result"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
                    SELECT gb.source_id, gb.project_id
                    FROM $$gene_answer$$, apidb.geneattributes ga, apidb.geneattributes gb
                    WHERE $$gene_answer.condition$$
                    AND ga.source_id = $$gene_answer$$.source_id
                    AND gb.gene_id = ga.gene_id
                    AND gb.organism = ga.organism
            ]]>
       </sql>
    </sqlQuery> 
-->
    
  </querySet>

</wdkModel>
