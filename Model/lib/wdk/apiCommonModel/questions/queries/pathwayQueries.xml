<wdkModel>
  <querySet name="PathwayIds" queryType="id" isCacheable="false" excludeProjects="EuPathDB">

    <!-- ************************************************************ -->
    <!-- Pathway Name -->  
    <!-- ************************************************************ -->
 
    <sqlQuery name="PathwaysByPathwayID" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="ID" isCacheable="true">
        <paramRef ref="pathwayParams.metabolic_pathway_id"/>
	<paramRef ref="pathwayParams.pathway_wildcard"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT  source_id, '@PROJECT_ID@' as project_id
            FROM   sres.Pathway 
            WHERE  (pathway_id LIKE REPLACE(REPLACE(REPLACE(REPLACE($$metabolic_pathway_id$$,' ',''),'-', '%'),'*','%'),'any','%')
         OR lower(source_id) LIKE REPLACE(REPLACE(REPLACE(REPLACE(lower($$pathway_wildcard$$),' ',''),'-', '%'),'*','%'),'any','%')
         OR lower(name) LIKE REPLACE(REPLACE(REPLACE(REPLACE(lower($$pathway_wildcard$$),' ',''),'-', '%'),'*','%'),'any','%') )
               ]]>
        </sql>
    </sqlQuery>

    <processQuery name="PathwaysByPathwayID" includeProjects="EuPathDB"
          doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="pathwayParams.metabolic_pathway_id" noTranslation="true"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>   


    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- By Identifiers -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="PathwaysByIdentifierList" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="ID" isCacheable="true">
        <paramRef ref="pathwayParams.ds_pathway_id"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="identifiers"/>
        <column name="type"/>
        <sql>
            <![CDATA[
SELECT  '@PROJECT_ID@' as project_id, source_id, 
          apidb.tab_to_string(set(cast(COLLECT(identifier) AS apidb.varchartab))) as identifiers,
          apidb.tab_to_string(set(cast(COLLECT(type) AS apidb.varchartab))) as type
FROM (
-- Compounds
SELECT pc.pathway as source_id, ds.source_id AS identifier, 'compound' as type
FROM apidbtuning.pathwaycompounds pc, ($$ds_pathway_id$$) ds
WHERE ds.source_id = pc.compound
  OR   ds.source_id = pc.chebi_accession
UNION
-- Enzyme
SELECT pc.pathway as source_id, ds.source_id AS identifier, 'enzyme' as type
FROM apidbtuning.pathwaycompounds pc, ($$ds_pathway_id$$) ds
WHERE ds.source_id = pc.enzyme
UNION
-- Gene
SELECT pc.pathway as source_id, ds.source_id AS identifier, 'gene' as type
FROM sres.enzymeClass ec,dots.aaSequenceEnzymeClass asec,ApidbTuning.GeneId gi, 
     ApidbTuning.TranscriptAttributes ta, apidbtuning.pathwaycompounds pc, ($$ds_pathway_id$$) ds
WHERE lower(gi.id) = lower(ds.source_id)
AND    ta.gene_source_id = gi.gene
AND    ta.aa_sequence_id = asec.aa_sequence_id
AND    asec.enzyme_class_id = ec.enzyme_class_id
AND    pc.enzyme = ec.ec_number
UNION
-- Reaction
SELECT pc.pathway as source_id, ds.source_id AS identifier, 'reaction' as type
FROM apidbtuning.pathwaycompounds pc, ($$ds_pathway_id$$) ds
WHERE ds.source_id = pc.reaction
UNION
-- Pathways from direct pathwayNodes
SELECT p.source_id, ds.source_id AS identifier, 'pathway' as type
FROM sres.pathway p, ($$ds_pathway_id$$) ds
WHERE ds.source_id = p.source_id 
--OR ds.source_id = p.name
)
GROUP BY source_id
ORDER BY source_id
	    ]]>
        </sql>
    </sqlQuery>

    <processQuery name="PathwaysByIdentifierList" includeProjects="EuPathDB"
          doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="identifiers" width="100" wsName="identifier"/>
        <wsColumn name="type" width="100" wsName="type"/>
    </processQuery>   


    <!-- ************************************************************ -->
    <!-- Gene List -->  
    <!-- ************************************************************ -->
 
    <sqlQuery name="PathwaysByGeneList" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="ID" isCacheable="true">
        <paramRef ref="sharedParams.ds_gene_ids" default="%%defaultGeneList%%"/>
        <paramRef ref="geneParams.any_or_all_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="genes"/>
        <column name="gene_count"/>
        <sql>
            <![CDATA[
SELECT DISTINCT pc.pathway AS source_id,ta.aa_sequence_id ,'@PROJECT_ID@' AS project_id,
       count(DISTINCT ta.gene_source_id) AS gene_count,
       apidb.tab_to_string(SET(CAST(COLLECT(ta.gene_source_id) AS apidb.varchartab))) AS genes
FROM   sres.enzymeClass ec,  ($$ds_gene_ids$$) ds,
       dots.aaSequenceEnzymeClass asec,ApidbTuning.GeneId gi, ApidbTuning.TranscriptAttributes ta,
ApidbTuning.pathwayCompounds pc
WHERE ta.aa_sequence_id = asec.aa_sequence_id
AND    lower(gi.id) = lower(ds.gene_source_id)
AND    ta.gene_source_id = gi.gene
AND    asec.enzyme_class_id = ec.enzyme_class_id
AND    pc.enzyme = ec.ec_number
GROUP BY pc.pathway,ta.aa_sequence_id,asec.aa_sequence_id
HAVING (('$$any_or_all_pathway$$' = 'any') 
        OR (count(*) = (select count(*) 
                        from ApidbTuning.TranscriptAttributes ta,($$ds_gene_ids$$) ds
                        where lower (ds.gene_source_id) = lower (ta.gene_source_id) ga
                       )))
	    ]]>
        </sql>
    </sqlQuery>

    <processQuery name="PathwaysByGeneList" includeProjects="EuPathDB"
          doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="sharedParams.ds_gene_ids"  noTranslation="true"/>
        <paramRef ref="geneParams.any_or_all_pathway" quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="genes" width="100" wsName="genes"/>
        <wsColumn name="gene_count" width="20" wsName="gene_count"/>
    </processQuery>   


    <!-- ************************************************************ -->
    <!--Compound -->  
    <!-- ************************************************************ -->
 
    <sqlQuery name="PathwaysByCompounds" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="Compound" isCacheable="true">
        <paramRef ref="compoundParams.ds_pubchem_compound_id" default="C00074"/>
        <paramRef ref="compoundParams.any_or_all_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT p.pathway as source_id, '@PROJECT_ID@' as project_id
            FROM   apidbtuning.PathwayCompounds p, apidbtuning.compoundId cid, ($$ds_pubchem_compound_id$$) ds
            WHERE  p.chebi_accession = cid.compound
            AND   cid.id = ds.source_id
           GROUP BY p.pathway
           HAVING (('$$any_or_all_pathway$$' = 'any') 
                   OR (count(*) = (select count(*) 
                        FROM ($$ds_pubchem_compound_id$$) ds
                        WHERE ds.source_id IN (SELECT DISTINCT compound FROM apidbtuning.PathwayCompounds ))
               ))
               ]]>
        </sql>
    </sqlQuery>

    <processQuery name="PathwaysByCompounds" includeProjects="EuPathDB"
          doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="compoundParams.ds_pubchem_compound_id" noTranslation="true"/>
        <paramRef ref="compoundParams.any_or_all_pathway" quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>   


    <sqlQuery name="ByWeightFilter" isCacheable="true" doNotTest="true">
        <paramRef ref="pathwayParams.pathway_result"/>
        <paramRef ref="sharedParams.min_weight" default="0"/>
        <paramRef ref="sharedParams.max_weight" default="100"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="wdk_weight" />
        <sql>
            <![CDATA[
            SELECT a.source_id, a.project_id, a.wdk_weight
            FROM $$pathway_result$$ a
            WHERE a.wdk_weight >= $$min_weight$$
              AND a.wdk_weight <= $$max_weight$$
            ]]>
       </sql>
    </sqlQuery>

    <!-- ************************************************************ -->
    <!-- By Transform on Genes -->
    <!-- ************************************************************ -->

    <sqlQuery name="PathwaysByGeneIds" doNotTest="true"
              displayName="ID" isCacheable="true">
        <paramRef ref="geneParams.gene_result"/>
        <paramRef ref="geneParams.any_or_all_pathway"/>
        <paramRef ref="geneParams.use_ec_wildcard"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="genes"/>
        <column name="ecNums"/>
        <column name="enzyme_count"/>
        <column name="wdk_weight" />

        <sql>
            <![CDATA[
SELECT DISTINCT pc.pathway AS source_id , '@PROJECT_ID@' as project_id, 
       count(distinct ec.ec_number) as enzyme_count,
       apidb.tab_to_string(set(cast(COLLECT(ds.source_id) AS apidb.varchartab))) as genes, 
       apidb.tab_to_string(set(cast(COLLECT(pc.enzyme) AS apidb.varchartab))) as ecNums, 
       max(ds.wdk_weight) as wdk_weight
FROM ($$gene_result$$) ds, ApiDBTuning.PathwayCompounds pc
       sres.enzymeClass ec, dots.aaSequenceEnzymeClass asec, ApidbTuning.CompoundAttributes ca
WHERE  ds.source_id =  ga.source_id
AND   ga.aa_sequence_id = asec.aa_sequence_id
AND    asec.enzyme_class_id = ec.enzyme_class_id
AND    (  ( ec.ec_number LIKE REPLACE(pc.enzyme,'-', '%')  OR pc.enzyme LIKE REPLACE(ec.ec_number,'-', '%')  )
         $$use_ec_wildcard$$  ec.ec_number = pc.enzyme    )
GROUP BY pc.pathway
HAVING '$$any_or_all_pathway$$' = 'any' or count(*) = (select count(*) from apidbtuning.transcriptAttributes ta,($$gene_result$$) ds  where lower(ga.source_id) = lower(ds.source_id)) 
               ]]>
        </sql>
    </sqlQuery>


    <!-- ************************************************************ -->
    <!-- By Transform on Compounds -->
    <!-- ************************************************************ -->

    <sqlQuery name="PathwaysByCompoundIds" doNotTest="true"
              displayName="ID" isCacheable="true">
        <paramRef ref="compoundParams.compound_result"/>
        <paramRef ref="compoundParams.any_or_all_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="compounds"/>
        <column name="compound_count"/>
        <column name="wdk_weight" />

        <sql>
            <![CDATA[
SELECT DISTINCT pc.pathway AS source_id , '@PROJECT_ID@' as project_id, count(distinct ds.source_id) as compound_count,
       apidb.tab_to_string(set(cast(COLLECT(pc.chebi_accession) AS apidb.varchartab))) as compounds, max(ds.wdk_weight) as wdk_weight
FROM ($$compound_result$$) ds, ApiDBTuning.PathwayCompounds pc
WHERE  pc.chebi_accession = ds.source_id
GROUP BY pc.pathway
HAVING '$$any_or_all_pathway$$' = 'any' or count(*) = (select count(*) from apidbtuning.PathwayCompounds pc,($$compound_result$$) ds  where lower(pc.chebi_accession) = lower(ds.source_id)) 
               ]]>
        </sql>
    </sqlQuery>

   </querySet>

</wdkModel>
