<wdkModel>
  <querySet name="PathwayIds" queryType="id"  isCacheable="true" excludeProjects="EuPathDB">

    <!-- ************************************************************ -->
    <!-- Pathway Name -->  
    <!-- ************************************************************ -->
 
    <sqlQuery name="PathwaysByPathwayID" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="ID">
        <paramRef ref="pathwayParams.pathways_source"/>
        <paramRef ref="pathwayParams.metabolic_pathway_id"/>
	    <paramRef ref="pathwayParams.pathway_wildcard"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="pathway_source"/>
        <sql>
            <![CDATA[
            SELECT  p.source_id
            , '@PROJECT_ID@' as project_id
            , pa.pathway_source
            FROM sres.Pathway p
            , apidbtuning.pathwayattributes pa 
            , sres.externaldatabase ed
            , sres.externaldatabaserelease edr
            WHERE  (p.pathway_id LIKE REPLACE(REPLACE(REPLACE(REPLACE($$metabolic_pathway_id$$,' ',''),'-', '%'),'*','%'),'any','%')
            OR lower(p.source_id) LIKE REPLACE(REPLACE(REPLACE(REPLACE(lower($$pathway_wildcard$$),' ',''),'-', '%'),'*','%'),'any','%')
            OR lower(p.name) LIKE REPLACE(REPLACE(REPLACE(REPLACE(lower($$pathway_wildcard$$),' ',''),'-', '%'),'*','%'),'any','%') )
            AND p.pathway_id = pa.pathway_id
            AND pa.external_db_name = ed.name
            AND ed.external_database_id = edr.external_database_id
            AND (edr.external_database_release_id = $$pathways_source$$ OR $$pathways_source$$ = 1)
               ]]>
        </sql>
    </sqlQuery>

    <processQuery name="PathwaysByPathwayID" includeProjects="EuPathDB"
          doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="pathwayParams.metabolic_pathway_id" noTranslation="true"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="pathway_source" width="32" wsName="pathway_source"/>
    </processQuery>   


    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- By Identifiers -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="PathwaysByIdentifierList" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="ID">
        <paramRef ref="pathwayParams.ds_pathway_id"/>
        <paramRef ref="pathwayParams.pathways_source"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="pathway_source"/> <!-- TODO -->
        <column name="identifiers"/>
        <column name="type"/>
        <sql>
            <![CDATA[
WITH ds
AS (select pathway_source from ($$ds_pathway_id$$))
SELECT  '@PROJECT_ID@' as project_id, source_id, pathway_source,
          apidb.tab_to_string(set(cast(COLLECT(identifier) AS apidb.varchartab))) as identifiers,
          apidb.tab_to_string(set(cast(COLLECT(type) AS apidb.varchartab))) as type
FROM (
-- Compounds
SELECT distinct pa.source_id as source_id
, pa.pathway_source
, ds.pathway_source AS identifier
, 'compound' as type
, edr.external_database_release_id
FROM apidbtuning.pathwaycompounds pc
, apidbtuning.pathwayattributes pa
, sres.externaldatabase ed
, sres.externaldatabaserelease edr
, ds
WHERE (ds.pathway_source = pc.compound_source_id
  OR   ds.pathway_source = pc.chebi_accession)
AND pc.ext_db_name = ed.name
AND edr.external_database_id = ed.external_database_id
and pa.pathway_id = pc.pathway_id
UNION
-- Enzyme
SELECT distinct pa.source_id as source_id
, pa.pathway_source
, ds.pathway_source AS identifier
, 'enzyme' as type
, edr.external_database_release_id
FROM apidbtuning.transcriptpathway tp
, apidbtuning.pathwayattributes pa
, sres.externaldatabase ed
, sres.externaldatabaserelease edr
, ds
WHERE ds.pathway_source = tp.ec_number
AND pa.pathway_id = tp.pathway_id
AND pa.external_db_name = ed.name
and edr.external_database_id = ed.external_database_id
UNION
-- Gene
SELECT distinct pa.source_id as source_id
, pa.pathway_source
, ds.pathway_source AS identifier
, 'gene' as type
, edr.external_database_release_id
FROM apidbtuning.pathwayattributes pa
, apidbtuning.transcriptpathway tp
, sres.externaldatabase ed
, sres.externaldatabaserelease edr
, ds
WHERE lower(tp.gene_source_id) = lower(ds.pathway_source)
AND    tp.pathway_id = pa.pathway_id
AND    pa.external_db_name = ed.name
AND    edr.external_database_id = ed.external_database_id
UNION
-- Reaction
SELECT distinct pa.source_id as source_id
, pa.pathway_source
, ds.pathway_source AS identifier
, 'reaction' as type
, edr.external_database_release_id
FROM apidbtuning.pathwaycompounds pc
, apidbtuning.pathwayreactions pr
, apidbtuning.pathwayattributes pa
, sres.externaldatabase ed
, sres.externaldatabaserelease edr
, ds
WHERE ds.pathway_source = pr.reaction_source_id
AND pr.reaction_id = pc.reaction_id
AND pc.pathway_id = pa.pathway_id
AND pa.external_db_name = pr.ext_db_name
AND pa.external_db_name = ed.name
AND ed.external_database_id = edr.external_database_id
UNION
-- Pathways from direct pathwayNodes
SELECT distinct pa.source_id
, pa.pathway_source
, ds.pathway_source AS identifier
, 'pathway' as type
, edr.external_database_release_id
FROM apidbtuning.pathwayattributes pa
, sres.externaldatabase ed
, sres.externaldatabaserelease edr
, ds
WHERE ds.pathway_source = pa.source_id
AND pa.external_db_name = ed.name
AND edr.external_database_id = ed.external_database_id 
)
WHERE (external_database_release_id = $$pathways_source$$ OR $$pathways_source$$=1) 
GROUP BY source_id, pathway_source
ORDER BY source_id
	    ]]>
        </sql>
    </sqlQuery>

    <processQuery name="PathwaysByIdentifierList" includeProjects="EuPathDB"
          doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="pathway_source" width="32" wsName="pathway_source"/>
        <wsColumn name="identifiers" width="100" wsName="identifier"/>
        <wsColumn name="type" width="100" wsName="type"/>
    </processQuery>   


    <!-- ************************************************************ -->
    <!-- Gene List -->  
    <!-- ************************************************************ -->
 
    <sqlQuery name="PathwaysByGeneList" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="ID">
        <paramRef ref="sharedParams.ds_gene_ids" default="%%defaultGeneList%%"/>
        <paramRef ref="pathwayParams.pathways_source"/>
        <paramRef ref="geneParams.any_or_all_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="pathway_source"/> <!-- TODO -->
        <column name="genes"/>
        <column name="gene_count"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT
            '@PROJECT_ID@' as project_id
            , pa.SOURCE_ID
            , pa.PATHWAY_SOURCE
            , apidb.tab_to_string(SET(CAST(COLLECT(tp.gene_source_id) AS apidb.varchartab))) AS genes
            , count(DISTINCT tp.gene_source_id) AS gene_count
            FROM apidbtuning.pathwayattributes pa
            , apidbtuning.transcriptpathway tp
            , SRES.EXTERNALDATABASE ed
            , SRES.EXTERNALDATABASERELEASE edr
            , ($$ds_gene_ids$$) ds
            WHERE lower(tp.GENE_SOURCE_ID) = lower(ds.gene_source_id)
            AND tp.PATHWAY_ID = pa.PATHWAY_ID
            AND pa.EXTERNAL_DB_NAME = ed.NAME
            AND edr.EXTERNAL_DATABASE_ID = ed.EXTERNAL_DATABASE_ID
            AND (edr.EXTERNAL_DATABASE_RELEASE_ID = $$pathways_source$$ or $$pathways_source$$ = 1)
            GROUP BY pa.SOURCE_ID, pa.PATHWAY_SOURCE
            HAVING (('$$any_or_all_pathway$$' = 'any' )
              OR (count(*) = (SELECT count (*)
                FROM APIDBTUNING.TRANSCRIPTPATHWAY tp
                , ($$ds_gene_ids$$) ds
                WHERE lower (ds.gene_source_id) = lower (tp.gene_source_id)
                )))
	    ]]>
        </sql>
    </sqlQuery>

    <processQuery name="PathwaysByGeneList" includeProjects="EuPathDB"
          doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="sharedParams.ds_gene_ids"  noTranslation="true"/>
        <paramRef ref="geneParams.any_or_all_pathway" quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="pathway_source" width="32" wsName="pathway_source"/>
        <wsColumn name="genes" width="100" wsName="genes"/>
        <wsColumn name="gene_count" width="20" wsName="gene_count"/>
    </processQuery>   


    <!-- ************************************************************ -->
    <!--Compound -->  
    <!-- ************************************************************ -->
 
    <sqlQuery name="PathwaysByCompounds" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="Compound">
        <paramRef ref="compoundParams.ds_compound_id" default="CHEBI:58601"/>
        <paramRef ref="pathwayParams.pathways_source"/>
        <paramRef ref="compoundParams.any_or_all_pathway"/>
        <column name="project_id"/>
        <column name="pathway_source"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT pa.source_id
            , '@PROJECT_ID@' as project_id
            , pa.pathway_source
            FROM
            apidbtuning.compoundid ci
            , apidbtuning.pathwaycompounds pc
            , apidbtuning.pathwayattributes pa
            , ($$ds_compound_id$$) ds
            , sres.externaldatabase ed
            , sres.externaldatabaserelease edr
            WHERE pc.chebi_accession = ci.compound
            AND pa.pathway_id = pc.pathway_id
            AND ci.compound = ds.source_id
            AND pa.external_db_name = ed.name
            AND edr.external_database_id = ed.external_database_id
            AND (edr.external_database_release_id  = $$pathways_source$$ or $$pathways_source$$ = 1)
            GROUP BY pa.source_id, pa.pathway_source
            HAVING (('$$any_or_all_pathway$$' = 'any') 
            OR (count(*) = (select count(*) 
            FROM ($$ds_compound_id$$) ds
                WHERE ds.source_id IN (SELECT DISTINCT chebi_accession FROM apidbtuning.PathwayCompounds ))
             ))
               ]]>
        </sql>
    </sqlQuery>

    <processQuery name="PathwaysByCompounds" includeProjects="EuPathDB"
          doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="compoundParams.ds_compound_id" noTranslation="true"/>
        <paramRef ref="compoundParams.any_or_all_pathway" quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="pathway_source" width="32" wsName="pathway_source"/>
    </processQuery>   


    <sqlQuery name="ByWeightFilter" doNotTest="true">
        <paramRef ref="pathwayParams.pathway_result"/>
        <paramRef ref="sharedParams.min_weight" default="0"/>
        <paramRef ref="sharedParams.max_weight" default="100"/>
        <column name="project_id"/>
        <column name="pathway_source"/> <!-- TODO -->
        <column name="source_id"/>
        <column name="wdk_weight" />
        <sql>
            <![CDATA[
            SELECT a.source_id, a.project_id, a.wdk_weight
            FROM $$pathway_result$$ a
            WHERE a.wdk_weight >= $$min_weight$$
              AND a.wdk_weight <= $$max_weight$$
            ]]>
       </sql>
    </sqlQuery>

    <!-- ************************************************************ -->
    <!-- By Transform on Genes -->
    <!-- ************************************************************ -->

    <sqlQuery name="PathwaysByGeneIds" doNotTest="true"
              displayName="ID">
        <paramRef ref="geneParams.gene_result"/>
        <paramRef ref="geneParams.any_or_all_pathway"/>
        <paramRef ref="geneParams.use_ec_wildcard"/>
        <column name="project_id"/>
        <column name="pathway_source"/> <!-- TODO -->
        <column name="source_id"/>
        <column name="genes"/>
        <column name="ecNums"/>
        <column name="enzyme_count"/>
        <column name="wdk_weight" />

        <sql>
            <![CDATA[
SELECT DISTINCT pc.pathway AS source_id , '@PROJECT_ID@' as project_id, 
       count(distinct ec.ec_number) as enzyme_count,
       apidb.tab_to_string(set(cast(COLLECT(ds.source_id) AS apidb.varchartab))) as genes, 
       apidb.tab_to_string(set(cast(COLLECT(pc.enzyme) AS apidb.varchartab))) as ecNums, 
       max(ds.wdk_weight) as wdk_weight
FROM ($$gene_result$$) ds, ApiDBTuning.PathwayCompounds pc
       sres.enzymeClass ec, dots.aaSequenceEnzymeClass asec, ApidbTuning.CompoundAttributes ca
WHERE  ds.source_id =  ga.source_id
AND   ga.aa_sequence_id = asec.aa_sequence_id
AND    asec.enzyme_class_id = ec.enzyme_class_id
AND    (  ( ec.ec_number LIKE REPLACE(pc.enzyme,'-', '%')  OR pc.enzyme LIKE REPLACE(ec.ec_number,'-', '%')  )
         $$use_ec_wildcard$$  ec.ec_number = pc.enzyme    )
GROUP BY pc.pathway
HAVING '$$any_or_all_pathway$$' = 'any' or count(*) = (select count(*) from apidbtuning.transcriptAttributes ta,($$gene_result$$) ds  where lower(ga.source_id) = lower(ds.source_id)) 
               ]]>
        </sql>
    </sqlQuery>


    <!-- ************************************************************ -->
    <!-- By Transform on Compounds -->
    <!-- ************************************************************ -->

    <sqlQuery name="PathwaysByCompoundIds" doNotTest="true"
              displayName="ID">
        <paramRef ref="compoundParams.compound_result"/>
        <paramRef ref="compoundParams.any_or_all_pathway"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="pathway_source"/> <!-- TODO -->
        <column name="compounds"/>
        <column name="compound_count"/>
        <column name="wdk_weight" />

        <sql>
            <![CDATA[
SELECT DISTINCT pc.pathway AS source_id , '@PROJECT_ID@' as project_id, count(distinct ds.source_id) as compound_count,
       apidb.tab_to_string(set(cast(COLLECT(pc.chebi_accession) AS apidb.varchartab))) as compounds, max(ds.wdk_weight) as wdk_weight
FROM ($$compound_result$$) ds, ApiDBTuning.PathwayCompounds pc
WHERE  pc.chebi_accession = ds.source_id
GROUP BY pc.pathway
HAVING '$$any_or_all_pathway$$' = 'any' or count(*) = (select count(*) from apidbtuning.PathwayCompounds pc,($$compound_result$$) ds  where lower(pc.chebi_accession) = lower(ds.source_id)) 
               ]]>
        </sql>
    </sqlQuery>

   </querySet>

</wdkModel>
