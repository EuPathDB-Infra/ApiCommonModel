<wdkModel>


  <querySet name="AssemblyIds" queryType="id" excludeProjects="TrichDB">
   <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- EST Source id  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ByEstAccession" doNotTest="true" includeProjects="CryptoDB,ToxoDB,GiardiaDB,PlasmoDB,TriTrypDB,InitDB"
         isCacheable="true">
        <paramRef ref="estParams.est_id"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <sql>
          <![CDATA[
             SELECT distinct aa.source_id, aa.project_id
             FROM apidb.EstAttributes ea, apidb.AssemblyAttributes aa,  ($$est_id$$) ds
             WHERE LOWER(ea.source_id) LIKE LOWER(REPLACE(REPLACE(ds.source_id,' ',''), '*', '%'))
               AND ea.assembly_source_id = aa.source_id
               AND aa.project_id = '@PROJECT_ID@'
          ]]>
       </sql>
    </sqlQuery>

 <processQuery name="ByEstAccession" includeProjects="EuPathDB" doNotTest="true"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="estParams.est_id" noTranslation="true"/>
        <paramRef ref="sharedParams.signature" quote="false"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
     </processQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Library  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ByLibrary" includeProjects="CryptoDB,ToxoDB,GiardiaDB,PlasmoDB,TriTrypDB,InitDB" 
             isCacheable='true'>

        <testParamValues includeProjects="CryptoDB">
          <paramValue name="libraryId">WatanabeCpHNJ-1</paramValue> 
        </testParamValues>

        <paramRef ref="sharedParams.libraryIdAssemblies"/>
        <paramRef ref="sharedParams.min_ests_in_assembly"/>
        <paramRef ref="sharedParams.min_lib_ests_in_assembly"/>
        <column name="source_id" />
        <column name="project_id"/>
        <column name="est_library_count"/>
        <sql>
            SELECT aa.source_id, aa.project_id,
                   count(*) as est_library_count
            FROM apidb.EstAttributes ea,
                 apidb.AssemblyAttributes aa
            WHERE aa.source_id = ea.assembly_source_id
              AND ea.library_id in ($$libraryIdAssemblies$$)
              AND ea.assembly_est_count >= $$min_ests_in_assembly$$
              AND aa.project_id = '@PROJECT_ID@'
            GROUP BY aa.source_id, aa.project_id
            HAVING count(*) >= $$min_lib_ests_in_assembly$$
       </sql>
    </sqlQuery>


 <processQuery name="ByLibrary" includeProjects="EuPathDB"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="sharedParams.libraryIdAssemblies"/>
        <paramRef ref="sharedParams.min_ests_in_assembly"/>
        <paramRef ref="sharedParams.min_lib_ests_in_assembly"/>

        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="est_library_count"  width="32"/>
     </processQuery>



    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Location  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

 <!-- TODO:  Cannot test queries that use dependent params -->
    <sqlQuery name="ByLocation" includeProjects="CryptoDB,ToxoDB,GiardiaDB,PlasmoDB,TriTrypDB,InitDB"
          isCacheable="true" doNotTest="true">

        <testParamValues includeProjects="CryptoDB">
          <paramValue name="sequenceId">AAEE01000006</paramValue>
        </testParamValues>

       <testParamValues includeProjects="PlasmoDB">
          <paramValue name="sequenceId">Pf3D7_04</paramValue>
          <paramValue name="chromosomeOptional">chromosome 2</paramValue>
        </testParamValues>

       <testParamValues includeProjects="TriTrypDB">
          <paramValue name="sequenceId">Tb927_02_v4</paramValue>
          <paramValue name="chromosomeOptional">chromosome 4</paramValue>
        </testParamValues>


        <testParamValues includeProjects="ToxoDB">
          <paramValue name="sequenceId">TGME49_chrV</paramValue>
        </testParamValues>
<!--
       <paramRef ref="organismParams.organismWithAssemblies" includeProjects="PlasmoDB"/>
        <paramRef ref="organismParams.sequence_organism_text" includeProjects="ToxoDB"/>
-->
        <paramRef ref="organismParams.organism"  queryRef="organismVQ.withChromosomesESTsAssems" multiPick="false" includeProjects="CryptoDB"/>
        <paramRef ref="organismParams.organism"  queryRef="organismVQ.withChromosomesESTsAssems" multiPick="false" includeProjects="ToxoDB" default="Toxoplasma gondii VEG"/>
        <paramRef ref="organismParams.organism"  queryRef="organismVQ.withChromosomesESTsAssems" multiPick="false" includeProjects="TriTrypDB" default="Leishmania major"/>
        <paramRef ref="organismParams.organism"  queryRef="organismVQ.withChromosomesESTsAssems" multiPick="false" default="Plasmodium falciparum" includeProjects="PlasmoDB"/>
        <paramRef ref="sharedParams.chromosomeOptional" includeProjects="CryptoDB,ToxoDB,PlasmoDB,TriTrypDB"/>
        <paramRef ref="sharedParams.sequenceId"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <paramRef ref="sharedParams.min_ests_in_assembly"/>
        <paramRef ref="assemblyParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="assemblyParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="assemblyParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="assemblyParams.min_percent_assembly_aligned" groupRef="paramGroups.advancedParams"/>
        <column name="source_id"/>
        <column name="project_id"/>
        <column name="assembly_location"/>
<!--
        <sqlParamValue name="orgParam" includeProjects="ToxoDB">
            <![CDATA[
              $$sequence_organism_text$$
            ]]>
        </sqlParamValue>
        <sqlParamValue name="orgParam" includeProjects="PlasmoDB">
            <![CDATA[
              $$organismWithAssemblies$$
            ]]>
        </sqlParamValue>
-->
        <sqlParamValue name="chrParam" includeProjects="PlasmoDB,ToxoDB,CryptoDB">
            <![CDATA[
              sa.chromosome=$$chromosomeOptional$$
            ]]>
        </sqlParamValue>
        <sqlParamValue name="chrParam" includeProjects="TriTrypDB">
            <![CDATA[
              sa.chromosome_order_num=$$chromosomeOptional$$
            ]]>
        </sqlParamValue>
        <sqlParamValue name="chroOpt" includeProjects="CryptoDB">
            <![CDATA[
              (s.source_id IN ($$chromosomeOptional$$)
               OR lower(s.source_id) = lower($$sequenceId$$))
            ]]>
        </sqlParamValue>
        <sqlParamValue name="chroOpt" includeProjects="GiardiaDB,InitDB">
           <![CDATA[ lower(s.source_id) = lower($$sequenceId$$)]]>
        </sqlParamValue>
        <sql includeProjects="GiardiaDB,InitDB">
            <![CDATA[
            select * from (
            SELECT eags.source_id, '@PROJECT_ID@' as project_id,
                   apidb.tab_to_string(
                     CAST(
                       COLLECT(s.source_id || ':'
                       || trim(to_char(b.target_start,'999,999,999'))
                       || '-' || trim(to_char(b.target_end,'999,999,999'))
                       || '(' || decode(b.is_reversed,0,'+',1,'-',null)
                       || ')') AS apidb.varchartab), ', ') AS assembly_location
	    FROM  apidb.ASMALIGNMENTGENESUMMARY eags, apidb.blatalignmentlocation b, dots.NASEQUENCE s
            WHERE &&chroOpt&&
            AND   s.na_sequence_id = b.target_na_sequence_id
            AND   b.target_start >=  REGEXP_REPLACE('$$start_point$$', ',| ','')
            AND   (b.target_end <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
            AND   b.is_consistent in ($$high_confidence_only$$)
            AND   b.is_best_alignment in ($$best_alignment_only$$)
            AND   b.percent_identity >= $$min_percent_identity$$
            AND   b.blat_alignment_id = eags.BLAT_ALIGNMENT_ID
            AND   eags.percent_assembly_bases_aligned >= $$min_percent_assembly_aligned$$
            AND   eags.est_count >= $$min_ests_in_assembly$$
            GROUP BY eags.source_id)

/*            AND target_start >= REGEXP_REPLACE('$$start_point$$', ',| ','')
            AND (target_end <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
            AND   is_consistent in ($$high_confidence_only$$)
            AND   is_best_alignment in ($$best_alignment_only$$)
            AND   percent_identity >= $$min_percent_identity$$
            AND   percent_assembly_bases_aligned >= $$min_percent_assembly_aligned$$
            AND   est_count >= $$min_ests_in_assembly$$
	    GROUP BY source_id
            ) */
           ]]>
        </sql>
        <sql includeProjects="PlasmoDB,ToxoDB,TriTrypDB,CryptoDB">
            <![CDATA[
            select * from (
            SELECT eags.source_id, '@PROJECT_ID@' as project_id,
                   apidb.tab_to_string(
                     CAST(
                       COLLECT(sa.source_id || ':'
                       || trim(to_char(b.target_start,'999,999,999'))
                       || '-' || trim(to_char(b.target_end,'999,999,999'))
                       || '(' || decode(b.is_reversed,0,'+',1,'-',null)
                       || ')') AS apidb.varchartab), ', ') AS assembly_location
	    FROM  apidb.ASMALIGNMENTGENESUMMARY eags, apidb.blatalignmentlocation b, apidb.sequenceAttributes sa
            WHERE ((&&chrParam&& and sa.organism = $$organism$$)
               OR lower(sa.source_id) = lower($$sequenceId$$))
            AND   sa.na_sequence_id = b.target_na_sequence_id
            AND   b.target_start >=  REGEXP_REPLACE('$$start_point$$', ',| ','')
            AND   (b.target_end <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
            AND   b.is_consistent in ($$high_confidence_only$$)
            AND   b.is_best_alignment in ($$best_alignment_only$$)
            AND   b.percent_identity >= $$min_percent_identity$$
            AND   b.blat_alignment_id = eags.BLAT_ALIGNMENT_ID
            AND   eags.percent_assembly_bases_aligned >= $$min_percent_assembly_aligned$$
            AND   eags.est_count >= $$min_ests_in_assembly$$
            GROUP BY eags.source_id)
           ]]>
        </sql>
    </sqlQuery>

   
 <processQuery name="ByLocation" includeProjects="EuPathDB" doNotTest="true" 
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">

         <paramRef ref="organismParams.organism" queryRef="organismVQ.withGenesGFF"/>
         <paramRef ref="sharedParams.chromosomeOptional"  quote="false"/>
  

        <paramRef ref="sharedParams.sequenceId"  quote="false"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <paramRef ref="sharedParams.min_ests_in_assembly"/>
        <paramRef ref="assemblyParams.best_alignment_only" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="assemblyParams.high_confidence_only" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="assemblyParams.min_percent_identity" groupRef="paramGroups.advancedParams"/>
        <paramRef ref="assemblyParams.min_percent_assembly_aligned" groupRef="paramGroups.advancedParams"/>

        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="assembly_location"  width="100"/>
     </processQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Gene Overlap  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="withGeneOverlap" includeProjects="CryptoDB,ToxoDB,GiardiaDB,PlasmoDB,TriTrypDB,InitDB"
            isCacheable='true'>
       <paramRef ref="organismParams.organismWithAssemblies"/>
<!--        <paramRef ref="organismParams.sequence_organism_text" includeProjects="ToxoDB"/>  -->
       <paramRef ref="sharedParams.bp_overlap_gte"/>
       <paramRef ref="assemblyParams.overlapOrNot"/>
        <paramRef ref="sharedParams.min_ests_in_assembly"/>
       <paramRef ref="assemblyParams.best_alignment_only" 
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.high_confidence_only"
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.min_percent_identity"
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.min_percent_assembly_aligned"
             groupRef="paramGroups.advancedParams"/>
       <column name="source_id" />
       <column name="project_id"/>
       <column name="assembly_locations"/>
       <column name="genes"/>
<!--
        <sqlParamValue name="orgParam" includeProjects="ToxoDB">
            <![CDATA[
              $$sequence_organism_text$$
            ]]>
        </sqlParamValue>
        <sqlParamValue name="orgParam" includeProjects="PlasmoDB">
            <![CDATA[
              $$organismWithAssemblies$$
            ]]>
        </sqlParamValue>
-->
       <sql excludeProjects="PlasmoDB,ToxoDB,CryptoDB">
            <![CDATA[
              select * from (
              SELECT source_id, '@PROJECT_ID@' as project_id,
               CASE WHEN count(*) > 20 THEN count(*)||' locations' ELSE apidb.tab_to_string(
                    CAST(
                      COLLECT(target_sequence_source_id || ':'
                      || trim(to_char(target_start,'999,999,999'))
                      || '-' || trim(to_char(target_end,'999,999,999'))
                      || '(' || decode(is_reversed,0,'+',1,'-',null) || ')')
                    AS apidb.varchartab), ', ') END AS assembly_locations,
                  CASE WHEN count(distinct gene) > 20 THEN count(distinct gene)||' genes' 
                       ELSE apidb.tab_to_string(CAST(COLLECT(gene) AS apidb.varchartab), ', ') END as genes
	    FROM (
                SELECT source_id,gene ,target_start,target_end, is_reversed, target_sequence_source_id
                FROM apidb.ASMALIGNMENTGENESUMMARY
                WHERE is_consistent in ($$high_confidence_only$$)
                AND is_best_alignment in ($$best_alignment_only$$)
                AND percent_identity >= $$min_percent_identity$$
                AND percent_assembly_bases_aligned >= $$min_percent_assembly_aligned$$
                AND est_count >= $$min_ests_in_assembly$$
             $$overlapOrNot$$                    
               SELECT i.source_id,i.gene ,i.target_start,i.target_end, i.is_reversed, i.target_sequence_source_id
                FROM apidb.ASMALIGNMENTGENESUMMARY i
                WHERE i.assembly_gene_overlap_length >= $$bp_overlap_gte$$
                AND is_consistent in ($$high_confidence_only$$)
                AND is_best_alignment in ($$best_alignment_only$$)
                AND percent_identity >= $$min_percent_identity$$
                AND percent_assembly_bases_aligned >= $$min_percent_assembly_aligned$$
                AND est_count >= $$min_ests_in_assembly$$
            )          
            GROUP BY source_id
            )
           ]]>
       </sql>
       <sql includeProjects="PlasmoDB,ToxoDB,CryptoDB">
            <![CDATA[
              select * from (
              SELECT source_id, '@PROJECT_ID@' as project_id,
               CASE WHEN count(*) > 20 THEN count(*)||' locations' ELSE apidb.tab_to_string(
                    CAST(
                      COLLECT(target_sequence_source_id || ':'
                      || trim(to_char(target_start,'999,999,999'))
                      || '-' || trim(to_char(target_end,'999,999,999'))
                      || '(' || decode(is_reversed,0,'+',1,'-',null) || ')')
                    AS apidb.varchartab), ', ') END AS assembly_locations,
                  CASE WHEN count(distinct gene) > 20 THEN count(distinct gene)||' genes' 
                       ELSE apidb.tab_to_string(CAST(COLLECT(gene) AS apidb.varchartab), ', ') END as genes
	    FROM (
                SELECT i.source_id,i.gene ,i.target_start,i.target_end, i.is_reversed, i.target_sequence_source_id
                FROM apidb.ASMALIGNMENTGENESUMMARY i, apidb.SEQUENCEATTRIBUTES sa
                WHERE 
                sa.organism in ($$organismWithAssemblies$$)
                AND sa.na_sequence_id = i.target_na_sequence_id
                AND i.is_consistent in ($$high_confidence_only$$)
                AND i.is_best_alignment in ($$best_alignment_only$$)
                AND i.percent_identity >= $$min_percent_identity$$
                AND i.percent_assembly_bases_aligned >= $$min_percent_assembly_aligned$$
                AND i.est_count >= $$min_ests_in_assembly$$
             $$overlapOrNot$$                    
               SELECT i.source_id,i.gene ,i.target_start,i.target_end, i.is_reversed, i.target_sequence_source_id
                FROM apidb.ASMALIGNMENTGENESUMMARY i, apidb.SEQUENCEATTRIBUTES sa
                WHERE 
                sa.organism in ($$organismWithAssemblies$$)
                AND sa.na_sequence_id = i.target_na_sequence_id
                AND i.assembly_gene_overlap_length >= $$bp_overlap_gte$$
                AND i.is_consistent in ($$high_confidence_only$$)
                AND i.is_best_alignment in ($$best_alignment_only$$)
                AND i.percent_identity >= $$min_percent_identity$$
                AND i.percent_assembly_bases_aligned >= $$min_percent_assembly_aligned$$
                AND i.est_count >= $$min_ests_in_assembly$$
            )          
            GROUP BY source_id
            )
           ]]>
       </sql>

    </sqlQuery>


 <processQuery name="withGeneOverlap" includeProjects="EuPathDB"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="organismParams.organismWithAssemblies" quote="false"/>
       <paramRef ref="sharedParams.bp_overlap_gte"/>
       <paramRef ref="assemblyParams.overlapOrNot" quote="false"/>
        <paramRef ref="sharedParams.min_ests_in_assembly"/>
       <paramRef ref="assemblyParams.best_alignment_only" 
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.high_confidence_only"
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.min_percent_identity"
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.min_percent_assembly_aligned"
             groupRef="paramGroups.advancedParams"/>

        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="assembly_locations"  width="100"/>
        <wsColumn name="genes"  width="100"/>
     </processQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Gene ID  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="ByGeneIDs" doNotTest="true" includeProjects="CryptoDB,ToxoDB,GiardiaDB,PlasmoDB,TriTrypDB,InitDB"
            isCacheable='true'>
      
      <paramRef ref="assemblyParams.single_gene_id"/>
      <paramRef ref="sharedParams.bp_overlap_gte"/>
      <paramRef ref="sharedParams.min_ests_in_assembly"/>
       <paramRef ref="assemblyParams.best_alignment_only" 
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.high_confidence_only"
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.min_percent_identity"
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.min_percent_assembly_aligned"
             groupRef="paramGroups.advancedParams"/>
       <column name="source_id" />
       <column name="project_id"/>
       <column name="assembly_locations"/>
       <column name="genes"/>
       <sql>
            <![CDATA[
              select * from (
              SELECT source_id, '@PROJECT_ID@' as project_id,
               CASE WHEN count(*) > 20 THEN count(*)||' locations' ELSE apidb.tab_to_string(
                    CAST(
                      COLLECT(target_sequence_source_id || ':'
                      || trim(to_char(target_start,'999,999,999'))
                      || '-' || trim(to_char(target_end,'999,999,999'))
                      || '(' || decode(is_reversed,0,'+',1,'-',null) || ')')
                    AS apidb.varchartab), ', ') END AS assembly_locations,
                  CASE WHEN count(distinct gene) > 20 THEN count(distinct gene)||' genes' 
                       ELSE apidb.tab_to_string(CAST(COLLECT(gene) AS apidb.varchartab), ', ') END as genes
	    FROM (
                 
               SELECT distinct i.source_id,i.gene ,i.target_start,i.target_end, 
                      i.is_reversed, i.target_sequence_source_id
                FROM apidb.ASMALIGNMENTGENESUMMARY i, apidb.GeneId gi
                WHERE gi.id LIKE REGEXP_REPLACE(REPLACE(LOWER($$single_gene_id$$),
                                                       '*', '%'),
                                               '[[:space:]]', '')
                AND i.gene = gi.gene
                AND i.assembly_gene_overlap_length >= $$bp_overlap_gte$$
                AND is_consistent in ($$high_confidence_only$$)
                AND is_best_alignment in ($$best_alignment_only$$)
                AND percent_identity >= $$min_percent_identity$$
                AND percent_assembly_bases_aligned >= $$min_percent_assembly_aligned$$
                AND est_count >= $$min_ests_in_assembly$$
            )          
            GROUP BY source_id
            )
           ]]>
       </sql>

    </sqlQuery>



 <processQuery name="ByGeneIDs" includeProjects="EuPathDB" doNotTest="true"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="assemblyParams.single_gene_id" quote="false"/>
      <paramRef ref="sharedParams.bp_overlap_gte"/>
      <paramRef ref="sharedParams.min_ests_in_assembly"/>
       <paramRef ref="assemblyParams.best_alignment_only" 
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.high_confidence_only"
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.min_percent_identity"
             groupRef="paramGroups.advancedParams"/>
       <paramRef ref="assemblyParams.min_percent_assembly_aligned"
             groupRef="paramGroups.advancedParams"/>

        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="assembly_locations"  width="100"/>
        <wsColumn name="genes"  width="100"/>
     </processQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- BLAST  -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <processQuery name="BySimilarity"
             displayName="BLAST"
             processName="org.apidb.apicomplexa.wsfplugin.wublast.WuBlastPlugin">

        <testParamValues includeProjects="CryptoDB">
            <paramValue name="BlastQuerySequence">TTTTTTTTATATTAAAGATGATTGAAAGACGCAAGATTGCCGTTATTGGGTCAGGACAAATTGGAGGTAATATTGCATATATTGTAGGTAAAGACAATTTAGCCGATGTAGTACTTTTTG</paramValue>
            <paramValue name="BlastDatabaseType">Assemblies</paramValue>
        </testParamValues>

        <testParamValues includeProjects="GiardiaDB">
            <paramValue name="BlastQuerySequence">CAGGGGCACCGCCTGGGGCCGCGCCACCGGGCATCCCGCCAGGGAATCCGCCGGGGAACCCACCAGGAGGCATGCCACCAGGGAAGCCTCCCGGCGGCATACCGGCCGCGCCCATGCCAG</paramValue>
            <paramValue name="BlastDatabaseType">Assemblies</paramValue>
        </testParamValues>

        <testParamValues includeProjects="ToxoDB">
            <paramValue name="BlastQuerySequence">TCGAGTTTTTTTTTTCCAAGGTGACTTCCTCGCACATTCTGACTTCCATTAGTCCGTTCTTTCTCCGAGCCTGAGAGAAGGCGGAGGCTCTGCCGCCTTTTTCCCCGCGGTGACTCAGAA</paramValue>
            <paramValue name="BlastDatabaseType">Assemblies</paramValue>
        </testParamValues>

        <testParamValues includeProjects="PlasmoDB">
            <paramValue name="BlastQuerySequence">ATGTTCGTAAAAAATTTTATACATAAATTAAAAGAATTAAAACAAAAATCTTTAGATAAGTTCGCTAATTTATTGTATGATTATGGAGGTTATGTATATGATAGACCTTGTACCTTTATTATATGTAGTTTAATATGTTGTTTACTTTTAACTTGTGGTTTTTATTTTAAAGAACATGAGAAAGATATTTATAAATTATATTCAATATCCAATTCGTATGCCTACGAAACGAATGAAACC</paramValue>
            <paramValue name="BlastDatabaseType">Assemblies</paramValue>
        </testParamValues>

        <testParamValues includeProjects="TriTrypDB,EuPathDB">
            <paramValue name="BlastQuerySequence">CGTCAGGCGCGGATACGTCAACGTGCCCCGGAGGATGCGGAGGAACGACGACTGAGAGCACAGCAAGAGATGCGTGAGGTAAGCTTTTTTTTTTTTGTTATAAAAATAAAATGAGCGGGCGAGAAAGGGAGTACATGTATTTGCGAGCTCTTCATCC</paramValue>
            <paramValue name="BlastDatabaseType">Assemblies</paramValue>
        </testParamValues>

      <paramRef ref="sharedParams.BlastDatabaseType" quote="false" />
      <paramRef ref="sharedParams.BlastAlgorithm" quote="false" />
      <paramRef ref="estSimilarityParams.BlastDatabaseOrganism" quote="false" />
      <paramRef ref="sharedParams.BlastQuerySequence" quote="false" />
      <paramRef ref="sharedParams.-e" quote="false" />
      <paramRef ref="sharedParams.-v" quote="false" />
      <paramRef ref="sharedParams.-b" quote="false" />
      <paramRef ref="sharedParams.-filter" quote="false" />
      <wsColumn name="source_id" width="32" wsName="Identifier"/>
      <wsColumn name="project_id" width="32" wsName="ProjectId"/>
      <wsColumn name="TabularRow" width="3000"/>
      <wsColumn name="Alignment"  columnType="clob"/>
      <wsColumn name="Header" width="3000"/>
      <wsColumn name="Footer"  columnType="clob"/>
 <wsColumn name="Counter" width="30" columnType="number"/>
    </processQuery>



  </querySet>
</wdkModel>
