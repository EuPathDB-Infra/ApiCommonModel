<wdkModel>

  <querySet name="SnpChipsBy" queryType="id" isCacheable="false" includeProjects="PlasmoDB,EuPathDB">

    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- SNP ID -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
      <sqlQuery name="SnpBySourceId" doNotTest="true" includeProjects="PlasmoDB"  isCacheable="true">
          <paramRef ref="snpChipParams.snp_id"/>
    <column name="source_id"/>
    <column name="project_id"/>
        <sql>
      <![CDATA[

        SELECT distinct sf.source_id AS source_id, '@PROJECT_ID@' as project_id
        FROM dots.SnpFeature sf, ($$snp_id$$) ds, sres.externalDatabase ed, sres.externalDatabaseRelease edr
        WHERE sf.source_id  like (ds.source_id || '%')
          AND sf.external_database_release_id = edr.external_database_release_id
          AND edr.external_database_id = ed.external_database_id
          AND lower(ed.name) like '%snpchip%'
          
      ]]>
        </sql>
      </sqlQuery>

     <processQuery name="SnpBySourceId" includeProjects="EuPathDB" 
              doNotTest="true" 
              processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
          <paramRef ref="snpChipParams.snp_id" noTranslation="true" />
          <paramRef ref="sharedParams.wdk_user_signature" noTranslation="true"/>
    <wsColumn name="source_id" width="50" wsName="source_id"/>
          <wsColumn name="project_id" width="32" wsName="project_id"/>
      </processQuery>


    <!-- ===================================================================== -->
    <!-- ===================================================================== -->
    <!-- ====== QUERIES BELOW HERE MIGHT NEED RETIRING.  PLEASE REVIEW ======= -->
    <!-- ===================================================================== -->
    <!-- ===================================================================== -->


    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Gene ID -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->

   <processQuery name="SnpsByGeneId" includeProjects="PlasmoDB"  
             processName="org.apidb.apicomplexa.wsfplugin.highspeedsnpsearch.FindChipSnpsByGeneIdsPlugin">
      <!-- need to have quote=true so that dependent param query works.  the wsf plugin remove the for its use -->

      <paramRef ref="organismParams.organism" prompt="Organism" displayType="listBox" multiPick="false" quote="true" queryRef="organismVQ.withChromosomesSNPs">
        <help>The Organism defines the species identity of the Isolates and the genome used for the SNP Chip.  
        After choosing an Organism, the set of isolates available for forming groups is limited to isolates aligned to your chosen Organism's genome.</help>
      </paramRef>
      <paramRef ref="snpChipParams.snp_assay_type"/>
      <paramRef ref="sharedParams.ds_gene_ids" default="PF3D7_1133400"/>
      <paramRef ref="sharedParams.snpchip_strain_meta"/>
      <paramRef ref="snpChipParams.WebServicesPath"/>
      <paramRef ref="snpChipParams.ReadFrequencyPercent" />
      <paramRef ref="snpChipParams.MinPercentMinorAlleles"/>
      <paramRef ref="snpParams.MinPercentIsolateCalls" />
      <wsColumn name="source_id" width="60" wsName="SourceId"/>
      <wsColumn name="project_id" width="20" wsName="ProjectId"/>
      <wsColumn name="PercentMinorAlleles" width="8" columnType="float"/>
      <wsColumn name="PercentIsolateCalls" width="8" columnType="float"/>
      <wsColumn name="Phenotype" width="15"/>
    </processQuery>
 
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Location -->
    <!-- 
         This query contains two nested inline views.  The 
         inner, named "hits", identifies SNPs within the given 
         genomic region for which the reference strain has a 
         different allele from at least one of the others.  The 
         outer inline view, "snpq", has one row for each SNP for 
         each strain (e.g. (100 SNPs) x (1 reference + 3 other 
         strains) = 400 records).  At the top level, the query 
         itself then groups all rows of a SNP into a single row 
         (which, for the above example, would mean grouping four 
         rows into one).
         
         It seems necessary to have these three levels in the 
         query's structure, but it might be possible to optimize 
         within each level.  For instance, the innermost query must 
         join dots.SnpFeature to dots.NaLocation.  A big 
         materialized view could precompute this join. -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <processQuery name="SnpsByLocation" includeProjects="PlasmoDB" processName="org.apidb.apicomplexa.wsfplugin.highspeedsnpsearch.FindChipPolymorphismsWithSeqFilterPlugin">

      <!-- need to have quote=true so that dependent param query works.  the wsf plugin remove the for its use -->
      <paramRef ref="organismParams.organism" prompt="Organism" displayType="listBox" multiPick="false" quote="true" queryRef="organismVQ.withChromosomesSNPs">
        <help>The Organism defines the species identity of the Isolates and the genome against which each isolate's SNPs were called.  
        After choosing an Organism, the set of isolates available for forming groups is limited to isolates aligned to your chosen Organism's genome.</help>
      </paramRef>
      <paramRef ref="sharedParams.chromosomeOptional" queryRef="SharedVQ.ChromosomeOrderNumMultipickForSnps" multiPick="false"/>
      <paramRef ref="sharedParams.sequenceId"/>
      <paramRef ref="sharedParams.start_point"/>
      <paramRef ref="sharedParams.end_point"/>
      <paramRef ref="snpChipParams.snp_assay_type"/>
      <paramRef ref="sharedParams.snpchip_strain_meta"/>
      <paramRef ref="snpChipParams.WebServicesPath"/>
      <paramRef ref="snpChipParams.ReadFrequencyPercent" />
      <paramRef ref="snpChipParams.MinPercentMinorAlleles"/>
      <paramRef ref="snpParams.MinPercentIsolateCalls" />
      <wsColumn name="source_id" width="60" wsName="SourceId"/>
      <wsColumn name="project_id" width="20" wsName="ProjectId"/>
      <wsColumn name="PercentMinorAlleles" width="8" columnType="float"/>
      <wsColumn name="PercentIsolateCalls" width="8" columnType="float"/>
      <wsColumn name="Phenotype" width="15"/>
    </processQuery>
 


      <!--++++++++++++++++++++++++++++++++++++++++++++++++-->

    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- by strain                                      -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <processQuery name="SnpsByStrain" includeProjects="PlasmoDB,EuPathDB"  
             processName="org.apidb.apicomplexa.wsfplugin.highspeedsnpsearch.FindChipPolymorphismsPlugin">
        <paramRef ref="organismParams.organism" displayType="listBox" multiPick="false" 
                  quote="true" queryRef="organismVQ.withChromosomesSNPs">
              <help>Select Organism you wish to query against.</help>
        </paramRef>
          <paramRef ref="snpChipParams.snp_assay_type"/>
          <paramRef ref="sharedParams.snpchip_strain_meta"/>
          <paramRef ref="snpChipParams.WebServicesPath"/>
          <paramRef ref="snpChipParams.ReadFrequencyPercent" />
          <paramRef ref="snpChipParams.MinPercentMinorAlleles"/>
          <paramRef ref="snpParams.MinPercentIsolateCalls" />
          <wsColumn name="source_id" width="60" wsName="SourceId"/>
          <wsColumn name="project_id" width="20" wsName="ProjectId"/>
          <wsColumn name="PercentMinorAlleles" width="8" columnType="float"/> <!-- need width 8 for oracle to give us xx.x precision in the display -->
          <wsColumn name="PercentIsolateCalls" width="8" columnType="float"/>
          <wsColumn name="Phenotype" width="15"/>
    </processQuery>


    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Isolate Pattern -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="SnpsByIsolatePattern" doNotTest="true" includeProjects="PlasmoDB" 
          isCacheable="true">
        <!-- <paramRef ref="snpChipParams.isolate_set_a"/> -->
        <paramRef ref="organismParams.organism" prompt="Organism" displayType="listBox" multiPick="false" quote="true" queryRef="organismVQ.withSNPs">
          <help>Select the organism you wish to search.  Note: this is the genome to which the isolate resequencing reads were aligned.</help>
        </paramRef>
        <paramRef ref="snpChipParams.snp_assay_type"/>
        <paramRef ref="sharedParams.snpchip_strain_meta_a" prompt="Set A Isolates" quote="true" />
        <paramRef ref="snpChipParams.set_a_percent"/>
        <!-- <paramRef ref="snpChipParams.isolate_set_b"/> -->
        <paramRef ref="sharedParams.snpchip_strain_meta_b" prompt="Set B Isolates" quote="true" />
        <paramRef ref="snpChipParams.set_b_percent"/>
        <column name="source_id"/> 
        <column name="project_id"/>
        <column name="set_a_allele"/>
        <column name="set_b_allele"/>
        <column name="set_a_major_percent"/>
        <column name="set_b_major_percent"/>
        <sql>
            <![CDATA[
select distinct seta.source_id,'@PROJECT_ID@' as project_id,
       seta.allele as set_a_allele,setb.allele as set_b_allele,
       round(seta.total/(select count(*) FROM table(SYS.DBMS_DEBUG_VC2COLL($$snpchip_strain_meta_a$$))) * 100) as set_a_major_percent,
       round(setb.total/(select count(*) FROM table(SYS.DBMS_DEBUG_VC2COLL($$snpchip_strain_meta_b$$))) * 100) as set_b_major_percent
FROM
(
SELECT snp.source_id, var.allele, count(*) as total
FROM   apidbtuning.snpchipattributes snp,
       dots.seqvariation var
WHERE snp.na_feature_id = var.parent_id
  and var.allele is not null
  and snp.type in ($$snp_assay_type$$)
  and var.strain in ($$snpchip_strain_meta_a$$)
--	and snp.major_allele_frequency >= $$set_a_percent$$ /100
  group by snp.source_id, var.allele
  having count(*) >= (select count(*) FROM table(SYS.DBMS_DEBUG_VC2COLL($$snpchip_strain_meta_a$$))) * $$set_a_percent$$ / 100
) seta,
(
SELECT snp.source_id, var.allele, count(*) as total
FROM   apidbtuning.snpchipattributes snp,
       dots.seqvariation var
WHERE snp.na_feature_id = var.parent_id
  and var.allele is not null
  and snp.type in ($$snp_assay_type$$)
  and var.strain in ($$snpchip_strain_meta_b$$)
--	and snp.major_allele_frequency >=  $$set_b_percent$$ /100
  group by snp.source_id, var.allele
  having count(*) >= (select count(*) FROM table(SYS.DBMS_DEBUG_VC2COLL($$snpchip_strain_meta_b$$))) * $$set_b_percent$$ / 100
) setb
where seta.source_id = setb.source_id
 and seta.allele != setb.allele 
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="SnpsByIsolatePattern" includeProjects="EuPathDB" doNotTest="true"
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.wdk_user_signature" noTranslation="true"/>
        <paramRef ref="snpChipParams.isolate_set_a"/>
        <paramRef ref="snpChipParams.set_a_percent"/>
        <paramRef ref="snpChipParams.isolate_set_b"/>
        <paramRef ref="snpChipParams.set_b_percent"/>
   
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="set_a_allele"/>
        <wsColumn name="set_b_allele"/>
        <wsColumn name="set_a_count"/>
        <wsColumn name="set_b_count"/>
    </processQuery>

  <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Isolate Pattern by history id -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="SnpsByIsolatePatternHistory" includeProjects="PlasmoDB" 
          isCacheable="true">
        <paramRef ref="sharedParams.isolateHistoryIdA"/>
        <paramRef ref="snpChipParams.set_a_count"/>
        <paramRef ref="sharedParams.isolateHistoryIdB"/>
        <paramRef ref="snpChipParams.set_b_count"/>
        <column name="source_id"/> 
        <column name="project_id"/>
        <column name="set_a_allele"/>
        <column name="set_b_allele"/>
        <column name="wdk_weight"/>
        <sql>
            <![CDATA[
              select seta.snp_source_id as source_id,'@PROJECT_ID@' as project_id,
              seta.allele as set_a_allele,setb.allele as set_b_allele,
              0 AS wdk_weight
              from (select isnp.snp_source_id,isnp.allele
              from ApidbTuning.IsolateSNPs isnp
              where isnp.is_source_id in (select distinct source_id from $$isolateHistoryIdA$$)
              and isnp.allele is not null
              and isnp.snp_db_name = 'pfal3D7_SNP_combined_Su_Broad_Sanger_gff_RSRC'
              group by isnp.snp_source_id,isnp.allele
              having count(*) >= $$set_a_count$$) seta,
              (select isnp.snp_source_id,isnp.allele
              from ApidbTuning.IsolateSNPs isnp
              where isnp.is_source_id in (select distinct source_id from $$isolateHistoryIdB$$)
              and isnp.allele is not null
              and isnp.snp_db_name = 'pfal3D7_SNP_combined_Su_Broad_Sanger_gff_RSRC'
              group by isnp.snp_source_id,isnp.allele
              having count(*) >= $$set_b_count$$) setb
              where seta.snp_source_id = setb.snp_source_id
              and seta.allele != setb.allele
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="SnpsByIsolatePatternHistory" includeProjects="EuPathDB"
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="sharedParams.isolateHistoryIdA"/>
        <paramRef ref="snpChipParams.set_a_count"/>
        <paramRef ref="sharedParams.isolateHistoryIdB"/>
        <paramRef ref="snpChipParams.set_b_count"/>
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="set_a_allele"/>
        <wsColumn name="set_b_allele"/>
        <wsColumn name="wdk_weight" columnType="number" width="12"/>
    </processQuery>

    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Isolate assay type -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
<!--
    <sqlQuery name="SnpsByIsolateType" includeProjects="PlasmoDB" 
          isCacheable="true">
        <paramRef ref="snpChipParams.snp_assay_type"/>
        <column name="source_id"/> 
        <column name="project_id"/>
        <sql>
            <![CDATA[
              select distinct snp.source_id, '@PROJECT_ID@' as project_id
              from ApidbTuning.SnpChipAttributes snp
              where snp.type in ($$snp_assay_type$$)
           ]]>
       </sql>
    </sqlQuery>

    <processQuery name="SnpsByIsolateType" includeProjects="EuPathDB"
             processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <paramRef ref="snpChipParams.snp_assay_type" quote="false" />
        <wsColumn name="source_id" width="32" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>
-->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->
    <!-- Isolate source id -->
    <!--++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="SnpsByIsolateId" includeProjects="PlasmoDB" 
          isCacheable="true">
         <testParamValues includeProjects="PlasmoDB">
            <paramValue name="isolate_id">CPHD.273727</paramValue>
         </testParamValues>
        <paramRef ref="snpChipParams.isolate_id"/>
        <column name="source_id"/> 
        <column name="project_id"/>
        <column name="isolate_allele"/>
        <column name="is_source_id"/>
        <sql>
            <![CDATA[
              select isnp.snp_source_id as source_id, $$isolate_id$$ as is_source_id, 
                     isnp.allele as isolate_allele, '@PROJECT_ID@' as project_id
              from ApidbTuning.IsolateSNPs isnp, ApidbTuning.SnpAttributes sa
              where isnp.is_source_id = $$isolate_id$$
              and isnp.allele is not null
              and isnp.snp_db_name = 'pfal3D7_SNP_combined_Su_Broad_Sanger_gff_RSRC'
              and isnp.snp_source_id = sa.source_id
           ]]>
       </sql>
    </sqlQuery>


    <sqlQuery name="ByWeightFilter" isCacheable="true" doNotTest="true">
        <paramRef ref="snpChipParams.snp_result"/>
        <paramRef ref="sharedParams.min_weight" default="0"/>
        <paramRef ref="sharedParams.max_weight" default="100"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="wdk_weight" />
        <sql>
            <![CDATA[
            SELECT a.source_id, a.project_id, a.wdk_weight
            FROM $$snp_result$$ a
            WHERE a.wdk_weight >= $$min_weight$$
              AND a.wdk_weight <= $$max_weight$$
            ]]>
       </sql>
    </sqlQuery>




  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!-- Dont Care - fake query for internal use -->
  <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

    <sqlQuery name="DontCare" doNotTest="true" isCacheable="true">
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            select source_id, project_id
            from ApidbTuning.snpattributes
            where source_id = 'life_is_sweet' 
        </sql>
    </sqlQuery>
    
  </querySet>

</wdkModel>
