<wdkModel>
  <querySet name="OrfIds" queryType="id">

   <!-- notes
      
      - changed ms_assay param names

      - all components will have orfs so i changed the includes/excluded to reflect that

    -->
    

    <!-- ************************************************************ -->
    <!-- ORF ID -->  
    <!-- ************************************************************ -->
 
    <sqlQuery name="OrfByOrfId" doNotTest="true"  excludeProjects="EuPathDB"
              displayName="ID" isCacheable="true">
        <paramRef ref="orfParams.orf_id"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <sql>
            <![CDATA[
            SELECT DISTINCT oa.source_id, '@PROJECT_ID@' as project_id
            FROM ApidbTuning.OrfAttributes oa, ($$orf_id$$) ds
            WHERE oa.lowercase_source_id LIKE 
                     REGEXP_REPLACE(REPLACE(LOWER(ds.source_id), '*', '%'), '[[:space:]]', '')
              AND oa.project_id = '@PROJECT_ID@'
            ]]>
        </sql>
    </sqlQuery>

    <processQuery name="OrfByOrfId" includeProjects="EuPathDB"
          isCacheable='true' doNotTest="true"
          processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin"> 
        <paramRef ref="orfParams.orf_id" noTranslation="true"/>
        <paramRef ref="sharedParams.signature" noTranslation="true"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
    </processQuery>   

    
    <!-- ************************************************************ -->
    <!-- Location -->  
    <!-- ************************************************************ -->

 <!-- TODO:  Cannot test queries that use dependent params --> 
    <sqlQuery name="OrfsByLocation" 
               isCacheable="true" excludeProjects="EuPathDB" doNotTest="true">

        <paramRef ref="organismParams.organism" queryRef="organismVQ.withChromosomesORFs" multiPick="false" includeProjects="MicrosporidiaDB,PlasmoDB,TriTrypDB,ToxoDB,CryptoDB,PiroplasmaDB,GiardiaDB,FungiDB" quote="true">
              <help>Select Organism you wish to query against.</help>
        </paramRef>
        <paramRef ref="sharedParams.chromosomeOptional" includeProjects="PlasmoDB,CryptoDB,ToxoDB,TriTrypDB,MicrosporidiaDB,EuPathDB,PiroplasmaDB,GiardiaDB,FungiDB" queryRef="SharedVQ.ChromosomeOrderNum"/>
        <paramRef ref="sharedParams.sequenceId"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <paramRef ref="orfParams.min_orf_length"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="dynamic_location"/>

        <sql includeProjects="ToxoDB,PlasmoDB,CryptoDB,TriTrypDB,MicrosporidiaDB,PiroplasmaDB,GiardiaDB,FungiDB"> 
            <![CDATA[
            SELECT distinct oa.source_id, '@PROJECT_ID@' as project_id,
            fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
	    FROM dots.TranslatedAaFeature taaf, ApidbTuning.OrfAttributes oa, ApidbTuning.SequenceAttributes sa,
	         dots.TranslatedAaSequence tas, ApidbTuning.FeatureLocation fl
	    WHERE fl.feature_type = 'Miscellaneous'
            AND sa.na_sequence_id = fl.na_sequence_id
	    AND (( sa.chromosome = $$chromosomeOptional$$ AND sa.organism = $$organism$$)
                   OR lower(sa.source_id) = lower($$sequenceId$$))
            AND fl.end_max >=  REGEXP_REPLACE('$$start_point$$', ',| ','') 
	    AND (fl.start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
            AND fl.na_feature_id = taaf.na_feature_id
	    AND taaf.aa_sequence_id = tas.aa_sequence_id
            AND tas.length >= $$min_orf_length$$
            AND oa.source_id = fl.feature_source_id
           ]]>
       </sql>

        <sql includeProjects="TrichDB,AmoebaDB,FungiDB,InitDB"> 
            <![CDATA[
            SELECT distinct oa.source_id, '@PROJECT_ID@' as project_id,
            fl.sequence_source_id || ': ' || trim(to_char(fl.start_min,'999,999,999')) || ' - ' || trim(to_char(fl.end_max,'999,999,999')) || decode(fl.is_reversed, 1, ' (-)', ' (+)') as dynamic_location
	    FROM dots.TranslatedAaFeature taaf, ApidbTuning.OrfAttributes oa,
	         dots.TranslatedAaSequence tas, ApidbTuning.FeatureLocation fl
	    WHERE fl.feature_type = 'Miscellaneous'
            AND lower(fl.sequence_source_id) = lower($$sequenceId$$)
            AND fl.end_max >=  REGEXP_REPLACE('$$start_point$$', ',| ','') 
	    AND (fl.start_min <= REGEXP_REPLACE('$$end_point$$', ',| ','') OR REGEXP_REPLACE('$$end_point$$', ',| ','') = 0)
            AND fl.na_feature_id = taaf.na_feature_id
	    AND taaf.aa_sequence_id = tas.aa_sequence_id
            AND tas.length >= $$min_orf_length$$
            and oa.source_id = fl.feature_source_id
           ]]>
       </sql>
     </sqlQuery>

 <!--===================================================================-->
    <!-- use withGenes so we access all sites -->  
    <!--===================================================================-->
<!--===========================================================================-->
   <!--  OLD    (In all portal  location queries) Use a parameter below with term values:
          (1) consistent with term values provided by orgVQ used in location.js...
                 which we try to be the param used above by the component sites.
          (2) consistent with term values harcoded in ApiDB_...js
                 (used to access all sites when sequenceID is used)             -->
<!--========================================================================-->

     <processQuery name="OrfsByLocation" includeProjects="EuPathDB" doNotTest="true"
              isCacheable="true" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
  <paramRef ref="organismParams.organism"  queryRef="organismVQ.withChromosomesORFs" multiPick="false" noTranslation="true">
              <help>Select Organism you wish to query against.</help>
        </paramRef>
        <paramRef ref="sharedParams.chromosomeOptional" quote="false" noTranslation="true"/>
        <paramRef ref="sharedParams.sequenceId"    noTranslation="true"/>
        <paramRef ref="sharedParams.start_point"/>
        <paramRef ref="sharedParams.end_point"/>
        <paramRef ref="orfParams.min_orf_length"/>
        <wsColumn name="source_id" width="50" wsName="source_id"/>
        <wsColumn name="project_id" width="32" wsName="project_id"/>
        <wsColumn name="dynamic_location" width="100" wsName="dynamic_location"/>
    </processQuery>


    <!-- ************************************************************ -->
    <!-- Motif search -->  
    <!-- ************************************************************ -->
 
    <processQuery name="OrfsByMotifSearch"   excludeProjects="EuPathDB"
             processName="org.apidb.apicomplexa.wsfplugin.motifsearch.OrfMotifPlugin">
       <paramRef ref="orfSimilarityParams.motif_organism" quote="false"/>
       <paramRef ref="sharedParams.motif_expression"/>
       <wsColumn name="source_id" width="60" wsName="SourceID"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="Locations" width="3999"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="3999"/>
    </processQuery>


    <processQuery name="OrfsByMotifSearch" includeProjects="EuPathDB"
                processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="orfSimilarityParams.motif_organism"  quote="false"/>
       <paramRef ref="sharedParams.motif_expression"  noTranslation="true"/>

       <wsColumn name="source_id" width="60" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>

       <wsColumn name="Locations" width="3999"/>
       <wsColumn name="MatchCount" width="10"/>
       <wsColumn name="Sequence" width="3999"/>
    </processQuery>


    <!-- ************************************************************ -->
  <!-- BLAST   when apidb using apifed (instead of wu-blast), remember to set useTermOnly in the organism param, in similarityParams.xml   -->
    <!-- ************************************************************ -->
 
    <processQuery name="OrfsBySimilarity" 
             processName="org.apidb.apicomplexa.wsfplugin.blast.WuBlastPlugin">

        <testParamValues includeProjects="AmoebaDB">
            <paramValue name="BlastQuerySequence">RNMYKELKNILMKIEKLKDVRIIPVVISINGLINKESNRLIKELKIEIDIEKE</paramValue>
            <paramValue name="BlastDatabaseType">ORF</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
        </testParamValues>

        <testParamValues includeProjects="CryptoDB">
            <paramValue name="BlastQuerySequence">FYLFICNSLCCGSCNSTVTHSYDFKPSDECCIRKLWIC</paramValue>
            <paramValue name="BlastDatabaseType">ORF</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
        </testParamValues>

        <testParamValues includeProjects="ToxoDB">
            <paramValue name="BlastQuerySequence">CRHLTDSLICPQQGFAKIISEKPWCGLEKVTKKRR</paramValue>
            <paramValue name="BlastDatabaseType">ORF</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
           <paramValue name="BlastDatabaseOrganism">Toxoplasma gondii ME49</paramValue>
        </testParamValues>
       <testParamValues includeProjects="PlasmoDB">
            <paramValue name="BlastQuerySequence">NFIPSCYENVYSLKKVTRQNIPIRSLAQCLNTQPISKKTSVEEKLKEKVVKENKDRNEKQ</paramValue>
            <paramValue name="BlastDatabaseType">ORF</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
            <paramValue name="BlastDatabaseOrganism">Plasmodium falciparum 3D7</paramValue>
        </testParamValues>
       <testParamValues includeProjects="GiardiaDB">
            <paramValue name="BlastQuerySequence">RRHRRGANARASCWRGHYFREDSLEQGLSELCNRPPEAFRKALSVDNNRIANRLTDYIPCHGCSILLGRDGQ</paramValue>
            <paramValue name="BlastDatabaseType">ORF</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
        </testParamValues>

        <testParamValues includeProjects="TrichDB">
            <paramValue name="BlastQuerySequence">ILGLIVCFFFVLFNSSFKEWPTKWENQRPTRGAIMWKAHFFILGIYAFFWGLSESVAPNDGSGLRALLALRMV</paramValue>
            <paramValue name="BlastDatabaseType">ORF</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
            <paramValue name="BlastDatabaseOrganism">Trichomonas vaginalis G3</paramValue>
        </testParamValues>
        
        <testParamValues includeProjects="TriTrypDB,EuPathDB">
            <paramValue name="BlastQuerySequence">IEHIIIKCCLSISHIYMCMDMKRRRCAGGKFVEIKNKSGFTFYTLFSTFYLFFLLGVVFYIYIYFSFPSTRTGRGMSGTS</paramValue>
            <paramValue name="BlastDatabaseType">ORF</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
            <paramValue name="BlastDatabaseOrganism">Leishmania infantum</paramValue>
        </testParamValues>

        <testParamValues includeProjects="MicrosporidiaDB">
           <paramValue name="BlastDatabaseType">ORF</paramValue>
           <paramValue name="BlastQuerySequence">LVLPSLSEKDISLFVNYESFEEFLESEHFFMRNCFLEICANLVEHFKKKGMVEKMNDLIGMVVERLSDTYFLTRYKALQVLECLFQRNSIGVGRRHEIIREIGGRVLDKTVVVRKKAIGICSGLLMSHPFASEKSLEKKNFKPSEDENNSNYPDNKKKEVERRYHEDLNEFHDIMREIQDNVIILLNGETKTEIAECVEFVKLSFYYKIDGSKEAFESLFDLVWTQDQELLV</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
            <paramValue name="BlastDatabaseOrganism">Encephalitozoon intestinalis ATCC 50506</paramValue>
        </testParamValues>
        <testParamValues includeProjects="PiroplasmaDB">
           <paramValue name="BlastDatabaseType">ORF</paramValue>
           <paramValue name="BlastQuerySequence">KRHELKKAGVNVGALKLHKSIMDYVKEVPFETQPPKGFYEPETGHEIDQSLRSIQQLEGKRRDDEMRRMRNDDARKLKRLQ</paramValue>
	   <paramValue name="BlastDatabaseOrganism">Babesia bovis T2Bo</paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
        </testParamValues>

        <testParamValues includeProjects="FungiDB,InitDB">
           <paramValue name="BlastDatabaseType">ORF</paramValue>
           <paramValue name="BlastQuerySequence"></paramValue>
	   <paramValue name="BlastDatabaseOrganism"></paramValue>
            <paramValue name="BlastAlgorithm">blastp</paramValue>
        </testParamValues>

       <paramRef ref="sharedParams.BlastDatabaseType" quote="false" noTranslation="false" default="ORF"/>
       <paramRef ref="sharedParams.BlastAlgorithm" quote="false" noTranslation="false" />
       <paramRef ref="sharedParams.BlastDatabaseOrganism" quote="false" noTranslation="false" />
       <paramRef ref="sharedParams.BlastQuerySequence"/>
       <paramRef ref="sharedParams.BlastRecordClass" default="OrfRecordClasses.OrfRecordClass" />
       <paramRef ref="sharedParams.-e"/>
 <!--      <paramRef ref="sharedParams.-v"/> -->
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter" quote="false" />

       <wsColumn name="source_id" width="60" wsName="Identifier"/>
       <wsColumn name="project_id" width="32" wsName="ProjectId"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment"  columnType="clob"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer"  columnType="clob"/>
       <wsColumn name="Counter" width="30" columnType="number"/>
    </processQuery>

<!--
    <processQuery name="OrfsBySimilarity" includeProjects="EuPathDB"
           processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
       <paramRef ref="sharedParams.BlastDatabaseType"/>
       <paramRef ref="orfSimilarityParams.BlastDatabaseOrganism"/>
       <paramRef ref="sharedParams.BlastAlgorithm"/>
       <paramRef ref="sharedParams.BlastQuerySequence"/>
       <paramRef ref="sharedParams.-e"/>
       <paramRef ref="sharedParams.-v"/>
       <paramRef ref="sharedParams.-b"/>
       <paramRef ref="sharedParams.-filter"/>
       <wsColumn name="source_id" width="60" wsName="source_id"/>
       <wsColumn name="project_id" width="32" wsName="project_id"/>
       <wsColumn name="TabularRow" width="3000"/>
       <wsColumn name="Alignment" width="4000"/>
       <wsColumn name="Header" width="3000"/>
       <wsColumn name="Footer" width="3000"/>
    </processQuery>
-->

    <!-- ************************************************************ -->
    <!-- Mass Spec. -->  
    <!-- ************************************************************ -->
   
    <sqlQuery name="OrfsByMassSpec" includeProjects="CryptoDB,ToxoDB,GiardiaDB" 
              isCacheable='true'>

        <testParamValues includeProjects="ToxoDB">
	  <paramValue name="ms_assay">purified rhoptries</paramValue>
        </testParamValues>
        <testParamValues includeProjects="CryptoDB">
            <paramValue name="ms_assay">Wastling MassSpec 1D Gel LC-MS/MS</paramValue>
        </testParamValues>
        <testParamValues includeProjects="GiardiaDB">
            <paramValue name="ms_assay">DTASelect-filter_032108_Proteomics</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.ms_assay"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <column name="project_id" />
        <column name="source_id" />
        <column name="sum_sequence_count" />
        <column name="sum_spectrum_count" />
        <sql includeProjects="ToxoDB,GiardiaDB,CryptoDB">
            <![CDATA[
            select distinct misc.source_id, '@PROJECT_ID@' as project_id,
                            seq.sum_sequence_count, spec.sum_spectrum_count
            from apidb.massspecsummary mss, dots.translatedaafeature taaf,  
                 dots.miscellaneous misc, sres.sequenceontology o,
            (select intseq.aa_sequence_id,count(*) as sum_sequence_count 
              from (select mss.aa_sequence_id, count(*) as sum_seq_ct
                from apidb.massspecsummary mss,
                     dots.massspecfeature msf,
                     dots.aalocation aal,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.mass_spec_summary_id = msf.source_id
                  and msf.aa_feature_id = aal.aa_feature_id
                  and msf.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ((mss.sample_file is null and ed.name in ($$ms_assay$$)) or
                      ed.name||'|'||mss.sample_file in ($$ms_assay$$))
                group by mss.aa_sequence_id,aal.start_min,aal.end_max ) intseq                  
                group by intseq.aa_sequence_id
                having count(*) >= $$min_sequence_count$$
            ) seq,
            (select mss.aa_sequence_id, sum(spectrum_count) as sum_spectrum_count
                from apidb.massspecsummary mss,
                     sres.externaldatabase ed,
                     sres.externaldatabaserelease edr
                where mss.external_database_release_id = edr.external_database_release_id
                  and edr.external_database_id = ed.external_database_id
                  and ((mss.sample_file is null and ed.name in ($$ms_assay$$)) or
                      ed.name||'|'||mss.sample_file in ($$ms_assay$$))
                group by mss.aa_sequence_id
                having sum(spectrum_count) >= $$min_spectrum_count$$
            ) spec
            where mss.aa_sequence_id = taaf.aa_sequence_id
            and taaf.na_feature_id = misc.na_feature_id
            and misc.sequence_ontology_id = o.sequence_ontology_id
            and o.term_name = 'ORF'
            and mss.aa_sequence_id = seq.aa_sequence_id
            and mss.aa_sequence_id = spec.aa_sequence_id
            ]]>
       </sql>

    </sqlQuery>   

    <processQuery name="OrfsByMassSpec" includeProjects="EuPathDB"
             isCacheable='true' processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
        <testParamValues>
            <paramValue name="ms_assay">Wastling 1-D SDS PAGE</paramValue>
        </testParamValues>

        <paramRef ref="geneParams.ms_assay" quote="false"/>
        <paramRef ref="sharedParams.min_sequence_count"/>
        <paramRef ref="sharedParams.min_spectrum_count"/>
        <wsColumn name="source_id" />
        <wsColumn name="project_id" /> 
        <wsColumn name="sum_sequence_count" />
        <wsColumn name="sum_spectrum_count" />
    </processQuery>

    
    
    <sqlQuery name="ByWeightFilter" isCacheable="true" doNotTest="true">
        <paramRef ref="orfParams.orf_result"/>
        <paramRef ref="sharedParams.min_weight" default="0"/>
        <paramRef ref="sharedParams.max_weight" default="100"/>
        <column name="project_id"/>
        <column name="source_id"/>
        <column name="wdk_weight" />
        <sql>
            <![CDATA[
            SELECT a.source_id, a.project_id, a.wdk_weight
            FROM $$orf_result$$ a
            WHERE a.wdk_weight >= $$min_weight$$
              AND a.wdk_weight <= $$max_weight$$
            ]]>
       </sql>
    </sqlQuery>

  </querySet>
</wdkModel>
