
<wdkModel>

  <!--=====================================================================-->
  <!-- Params  -->
  <!--=====================================================================-->
  <paramSet name="organismParams"> 

       <stringParam name="organismSite" visible="false" number="false">
             </stringParam>

<!-- UNUSED, keep as an example

 <stringParam name="hiddenOrganismGiardia" visible="false">
       </stringParam>

-->

      <flatVocabParam name="organism"
                     queryRef="organismVQ.withGenes"
                     prompt="Organism"
                     displayType="treeBox"
                     multiPick="true"
                     suppressNode="true"
                     quote="false">
          <help>
               Select organism(s) you wish to query against. Click the [+] to expand taxon groupings.
          </help>
          <suggest selectMode="all" />
      </flatVocabParam>

      <flatVocabParam name="organismSinglePick"
                     queryRef="organismVQ.withMassSpec"
                     prompt="Organism"
                     multiPick="false"
                     quote="true">
          <help>
               Select organism(s) you wish to query against. Click the [+] to expand taxon groupings.
          </help>
          <suggest default="All Organisms" />
      </flatVocabParam>
    
      <flatVocabParam name="gff_organism"
                     queryRef="organismVQ.withGenesGFF"
                     prompt="Organism"
                     multiPick="true"
                     quote="false">
      </flatVocabParam>

      <flatVocabParam name="gff_organism_name"
                     queryRef="organismVQ.nameWithGenesGFF"
                     prompt="Organism"
                     multiPick="true"
                     quote="false">
      </flatVocabParam>

      <flatVocabParam name="organism_with_sagetags"
                     queryRef="organismVQ.withSageTags"
                     prompt="Organism"
                     multiPick="true"
                     quote="false"
                     includeProjects="PlasmoDB,ToxoDB,GiardiaDB,EuPathDB">
          <help>
             Select organism(s) you wish to query against. Click the [+] to expand taxon groupings.
         </help>
      </flatVocabParam>

      <flatVocabParam name="organism_with_epitopes"
                     queryRef="organismVQ.withEpitopes"
                     prompt="Organism"
                     displayType="treeBox"
                     multiPick="true"
                     quote="false"
                     includeProjects="CryptoDB,ToxoDB,PlasmoDB,GiardiaDB,TriTrypDB">
         <help>
             Select organism(s) you wish to query against. Click the [+] to expand taxon groupings.
         </help>
      </flatVocabParam>


<!-- cannot reuse "organism" param above because apidb needs to use the internal value in the local ortholog question -->
      <flatVocabParam name="localorganism"
                     queryRef="organismVQ.LocalOrganisms"
                     prompt="Organism"
                     multiPick="true"
                     quote="true">
         <suggest selectMode="all" />
         <help>
             Select organism(s) you wish to query against. Click the [+] to expand taxon groupings.
         </help>
      </flatVocabParam>

      <flatVocabParam name="text_search_organism"
                     queryRef="organismVQ.withGenes"
                     prompt="Organism"
                     displayType="treeBox"
                     multiPick="true"
                     quote="false"
                     suppressNode ="true">
          <help>
             Select the organism(s) you wish to query against. Click the [+] to expand taxon groupings.
         </help>
         <suggest selectMode="all" />
      </flatVocabParam>


	<flatVocabParam name="org_with_nonnuclear_genes" includeProjects="PlasmoDB,ToxoDB,EuPathDB"
			queryRef="organismVQ.OrgsWithNonNuclearGenes"
			prompt="Organism">
 	  <help>
	    Select an organism
	  </help>
	</flatVocabParam>

	<flatVocabParam name="org_with_centromere_genes" includeProjects="PlasmoDB,ToxoDB,EuPathDB"
			queryRef="organismVQ.OrgsWithCentromereGenes"
			prompt="Organism">
 	  <help>
	    Select an organism
	  </help>
	</flatVocabParam>



 <!--=====================================================================-->
  <!-- organismWithChromosomes: I think it is not being used     -->
  <!--=====================================================================-->

<!--
    <enumParam name="organismWithChromosomes"
                     prompt="Organism"
                     multiPick="false" includeProjects="CryptoDB,PlasmoDB,ToxoDB,EuPathDB">
 <noTranslation value="true" includeProjects="EuPathDB" />
      <enumList>   
        <enumValue includeProjects="CryptoDB,EuPathDB">
          <term>Cryptosporidium parvum</term>
          <internal>Cryptosporidium parvum%</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium falciparum</term>
          <internal>Plasmodium falciparum 3D7</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium knowlesi</term>
          <internal>Plasmodium knowlesi strain H</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium vivax</term>
          <internal>Plasmodium vivax SaI-1</internal>
        </enumValue>

        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii ME49</term>
          <internal>Toxoplasma gondii ME49</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii GT1</term>
          <internal>Toxoplasma gondii GT1</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii VEG</term>
          <internal>Toxoplasma gondii VEG</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Neospora caninum</term>
          <internal>Neospora caninum</internal>
        </enumValue>


      </enumList>   

    </enumParam>

-->
 <!--=====================================================================-->
  <!-- organismWithEstsInChromosomes: I think it is not being used     -->
  <!--=====================================================================-->

    <enumParam name="organismWithEstsInChromosomes"
                     prompt="Organism"
                     multiPick="false"
                     includeProjects="PlasmoDB,EuPathDB" >
 <noTranslation value="true" includeProjects="EuPathDB" />
      <enumList>   
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium falciparum</term>
          <internal>Plasmodium falciparum 3D7</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium vivax</term>
          <internal>Plasmodium vivax SaI-1</internal>
        </enumValue>

      </enumList>   
    </enumParam>


<!--=====================================================================-->
  <!-- organismWithSNPs   -->
  <!--=====================================================================-->


    <enumParam name="organismWithSNPs"
                     prompt="Organism"
                     multiPick="false" includeProjects="CryptoDB,PlasmoDB,ToxoDB,EuPathDB">
 <noTranslation value="true" includeProjects="EuPathDB" />
      <enumList>   
        <enumValue includeProjects="CryptoDB,EuPathDB">
          <term>Cryptosporidium parvum</term>
          <internal>Cryptosporidium parvum%</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium falciparum</term>
          <internal>Plasmodium falciparum 3D7</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii ME49</term>
          <internal>Toxoplasma gondii ME49</internal>
        </enumValue>

      </enumList>   

    </enumParam>



<!--=====================================================================-->
  <!-- organismWithAssemblies: used in Assem by gene Overlap     -->
  <!--=====================================================================-->
<!-- unused since we remove assemblies


    <enumParam name="organismWithAssemblies"
                     prompt="Organism"
                     multiPick="true"
                     excludeProjects="TrichDB,CryptoDB,FungiDB" >
      <enumList>   

  <enumValue includeProjects="CryptoDB,EuPathDB">
          <term>Cryptosporidium parvum</term>
          <internal>Cryptosporidium parvum Iowa II</internal>
        </enumValue>
  <enumValue includeProjects="CryptoDB,EuPathDB">
          <term>Cryptosporidium muris</term>
          <internal>Cryptosporidium muris</internal>
        </enumValue>


        <enumValue includeProjects="GiardiaDB,EuPathDB">
          <term>Giardia lamblia ATCC 50803</term>
          <internal>Giardia lamblia ATCC 50803</internal>
       </enumValue>
        <enumValue includeProjects="GiardiaDB,EuPathDB">
          <term>Giardia lamblia P15</term>
          <internal>Giardia lamblia P15</internal>
        </enumValue>
        <enumValue includeProjects="GiardiaDB,EuPathDB">
          <term>Giardia intestinalis ATCC 50581</term>
          <internal>Giardia intestinalis ATCC 50581</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium falciparum</term>
          <internal>Plasmodium falciparum 3D7</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium vivax</term>
          <internal>Plasmodium vivax SaI-1</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium berghei</term>
          <internal>Plasmodium berghei strain ANKA</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium yoelii</term>
          <internal>Plasmodium yoelii yoelii str. 17XNL</internal>
        </enumValue>

 <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii ME49</term>
          <internal>Toxoplasma gondii ME49</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii GT1</term>
          <internal>Toxoplasma gondii GT1</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii VEG</term>
          <internal>Toxoplasma gondii VEG</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Neospora caninum</term>
          <internal>Neospora caninum</internal>
        </enumValue>

        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Leishmania infantum</term>
          <internal>Leishmania infantum</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Leishmania major</term>
          <internal>Leishmania major strain Friedlin</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Leishmania mexicana</term>
          <internal>Leishmania mexicana</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Trypanosoma brucei gambiense</term>
          <internal>Trypanosoma brucei gambiense</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Trypanosoma cruzi strain esmeraldo</term>
          <internal>Trypanosoma cruzi strain esmeraldo</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Trypanosoma brucei strain TREU927</term>
          <internal>Trypanosoma brucei TREU927</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Trypanosoma brucei strain 427</term>
          <internal>Trypanosoma brucei Lister strain 427</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Leishmania braziliensis</term>
          <internal>Leishmania braziliensis</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Trypanosoma congolense</term>
          <internal>Trypanosoma congolense</internal>
        </enumValue>

        <enumValue includeProjects="AmoebaDB,EuPathDB">
          <term>Entamoeba dispar SAW760</term>
          <internal>Entamoeba dispar SAW760</internal>
        </enumValue>
        <enumValue includeProjects="AmoebaDB,EuPathDB">
          <term>Entamoeba histolytica HM-1:IMSS</term>
          <internal>Entamoeba histolytica HM-1:IMSS</internal>
        </enumValue>

        <enumValue includeProjects="MicrosporidiaDB,EuPathDB">
          <term>Encephalitozoon cuniculi</term>
          <internal>Encephalitozoon cuniculi GB-M1</internal>
        </enumValue>
        <enumValue includeProjects="FungiDB,InitDB,PiroplasmaDB">
          <term>FILL</term>
          <internal>FILL</internal>
        </enumValue>

      </enumList>   
    </enumParam>

-->

  </paramSet> 


  <!--=====================================================================-->
  <!-- Vocab queries for organism parameters

       These queries differ by which rows they return.  The columns are the
       same:

         term: scientific name of species
         internal: comma-separated list of all taxon ids for the clade whose
                   root is that species

        Many have the same general structure:
         - the taxon list which forms the internal value us generated by a
           recursive sub-query nested inside the SELECT clause
         - the set of rows is determined by an inline view in the FROM clause
           named "organisms"
         - an optional ordering is imposed by another inline view in the FROM
           clause named "partial_ordering".  This is used to let
           P. falciparum, P. vivax, and P. yoelii (in that order) start a
           list of genes.  It's OK for any (or all) of those to be omitted
           from the list, and it's OK for other genes to be included, but if
           they're there, they go first. Otherwise, the organisms are
           ordered alphabetically.
                                                                           -->
  <!--=====================================================================-->

  <querySet name="organismVQ" queryType="vocab">

    <!--===================================================================-->
    <!-- localorganism to apidb  -->
    <!--===================================================================-->

<sqlQuery name="LocalOrganisms">
               <column name="internal"/>
              <column name="term"/>
              <sql>
		SELECT distinct gattr.organism AS internal, 
                    case when gattr.organism  = 'Trypanosoma cruzi'
                         then 'Trypanosoma cruzi (unassigned)'
                         when gattr.organism = 'Cryptosporidium parvum'
                         then 'Cryptosporidium parvum (chr 6)'
                         else gattr.organism end AS term, 2 AS idx
                FROM   ApidbTuning.geneAttributes gattr
                ORDER BY gattr.organism
               </sql>
          </sqlQuery>


    <!--===================================================================-->
    <!-- all -->
    <!--===================================================================-->

    <sqlQuery name="all" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(set(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab)), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT distinct tn.name, ts.species_taxon_id AS internal_taxon
                FROM sres.TaxonName tn, ApidbTuning.TaxonSpecies ts
                WHERE tn.name_class='scientific name'
                  AND tn.taxon_id = ts.species_taxon_id
                  AND ts.taxon_id IN
                             (  SELECT ga.taxon_id
                                FROM ApidbTuning.GeneAttributes ga
                                WHERE ga.project_id = '@PROJECT_ID@' 
                              UNION
                                SELECT ns.taxon_id
                                FROM dots.NaSequence ns, sres.SequenceOntology so,ApidbTuning.sequenceattributes ga
                                WHERE so.sequence_ontology_id = ns.sequence_ontology_id
                                AND so.term_name IN ('contig', 'supercontig', 'chromosome','mitochondrial_chromosome','plastid_sequence')
                                AND ga.source_id = ns.source_id
                                AND ga.project_id = '@PROJECT_ID@' 
                                  )) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <!--===================================================================-->
    <!-- for tree test -->  
    <!--===================================================================-->

    <sqlQuery name="toxoForTreeTest" includeProjects="ToxoDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sql>
        <![CDATA[
          select n.name as term,n.taxon_id as internal, tn.name as parentTerm
          from sres.TAXONNAME n,sres.taxon t,sres.taxonname tn
          where t.taxon_id in (
          SELECT taxon_id
          FROM sres.taxon
          CONNECT BY prior taxon_id = parent_id
          START WITH taxon_id in (14104,14204))
          and t.taxon_id = n.taxon_id
          and n.name_class='scientific name'
          and tn.taxon_id = t.parent_id
          and tn.name_class = 'scientific name'
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="all" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>
    <!--===================================================================-->
    <!-- with chromosomes -->  
    <!--===================================================================-->

<sqlQuery name="withChromosomes" includeProjects="CryptoDB,ToxoDB,PlasmoDB,TriTrypDB,MicrosporidiaDB,FungiDB,PiroplasmaDB,GiardiaDB">
      <column name="internal"/>
      <column name="term"/>

           <sql>
            SELECT distinct ga.organism as term, ga.organism as internal
            from ApidbTuning.geneattributes ga where chromosome is not null
            order by term
            </sql>
        </sqlQuery>



    <processQuery name="withChromosomes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>



<!--===================================================================-->
    <!-- with chromosomes and ESTs + Assemblies -->  
    <!--===================================================================-->

    <sqlQuery name="withChromosomesESTsAssems" includeProjects="CryptoDB,ToxoDB,PlasmoDB,TriTrypDB,MicrosporidiaDB,GiardiaDB,FungiDB">
      <column name="internal"/>
      <column name="term"/>

      <sql>
      select distinct tns.name as term, 
                      tns.name as internal
      from ApidbTuning.blatalignmentlocation b, dots.est e, dots.nasequence s, ApidbTuning.sequenceattributes sa, APIDBTUNING.taxonspecies ts, sres.taxonname tn, sres.taxonname tns
      where sa.chromosome is not null
       and sa.na_sequence_id = s.na_sequence_id
       and b.query_na_sequence_id = e.na_sequence_id
       and sa.na_sequence_id = b.target_na_sequence_id
       and s.taxon_id = ts.taxon_id
       and ts.species_taxon_id = tn.taxon_id
       and ts.taxon_id = tns.taxon_id
       and tn.name_class = 'scientific name'
       and tns.name_class = 'scientific name'
      order by term    
      </sql>

        </sqlQuery>



    <processQuery name="withChromosomesESTsAssems" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>






<!--===================================================================-->
    <!-- with chromosomes and ORFs, added for orfs by location -->  
    <!--===================================================================-->
<sqlQuery name="withChromosomesORFs" includeProjects="CryptoDB,ToxoDB,PlasmoDB,TriTrypDB,MicrosporidiaDB,PiroplasmaDB,GiardiaDB,FungiDB">
      <column name="internal"/>
      <column name="term"/>

            <sql>
            select distinct  sa.organism as term, sa.organism as internal
            from ApidbTuning.orfattributes o, APIDBTUNING.sequenceattributes sa, dots.nasequence s, ApidbTuning.taxonspecies ts, sres.taxonname tn
            where sa.na_sequence_id = o.na_sequence_id
            and sa.chromosome is not null
            and sa.na_sequence_id = s.na_sequence_id
            and s.taxon_id = ts.taxon_id
            and ts.species_taxon_id = tn.taxon_id
            and tn.name_class = 'scientific name'
            order by term
            </sql>          

        </sqlQuery>



    <processQuery name="withChromosomesORFs" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>


  <!--===================================================================-->
    <!-- with chromosomes and ORFs, used in orfs by location for PORTAL VALIDATION 
         internal values NOT USED, only term values     
         (1) consistent with term values provided by orgVQ used in location.js...
                which we try to be the param used above by the component sites.
         (2) consistent with term values harcoded in ApiDB_...js 
                (used to access all sites when sequenceID is used)             -->        
    <!--===================================================================-->


<sqlQuery name="withChromosomesORFsValid" includeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>

        <sql>
            SELECT * FROM (
               SELECT 'Giardia lamblia' as term,
                       '''' ||'Giardia lamblia'|| '''' as internal 
               FROM dual
 UNION 
               SELECT 'Trichomonas vaginalis' as term,
                       '''' ||'Trichomonas vaginalis'|| '''' as internal 
               FROM dual
UNION 
               SELECT 'Cryptosporidium parvum Iowa II' as term,
                       '''' ||'Cryptosporidium parvum'|| '''' as internal 
               FROM dual
UNION 
              SELECT 'Toxoplasma gondii ME49' as term,
                        '''' ||'Toxoplasma gondii ME49'|| '''' as internal 
                FROM dual 
             UNION
              SELECT 'Toxoplasma gondii GT1' as term,
                        '''' ||'Toxoplasma gondii GT1'|| '''' as internal 
                FROM dual 
             UNION
              SELECT 'Toxoplasma gondii VEG' as term,
                        '''' ||'Toxoplasma gondii VEG'|| '''' as internal 
                FROM dual 
             UNION
                SELECT 'Neospora caninum' as term,
                        '''' ||'Neospora caninum'|| '''' as internal 
                FROM dual
UNION
               SELECT 'Plasmodium falciparum' as term,
                       '''' ||'Plasmodium falciparum 3D7'|| '''' as internal 
               FROM dual
            UNION
                SELECT 'Plasmodium knowlesi' as term,
                       '108360, 108361, 108362'   as internal 
                FROM dual
            UNION
                SELECT 'Plasmodium vivax' as term,
                       '108360, 108361, 108362'   as internal 
                FROM dual
            )
            </sql>

        </sqlQuery>




<!--===================================================================-->
    <!-- with chromosomes and SNPs -->  
    <!--===================================================================-->

    <sqlQuery name="withChromosomesSNPs" excludeProjects="EuPathDB,MicrosporidiaDB,TriTrypDB,PiroplasmaDB,AmoebaDB">
      <column name="internal"/>
      <column name="term"/>


      <sql>
         select sa.organism as term, sa.organism as internal
         from apidbtuning.snpstrains s, apidbtuning.sequenceattributes sa
         where s.extdb_name in (
                 --toxo-inc 
                 'Genetic Markers - David Sibley',
                 'Genomic Sequence SNPs',
                 'InsertSnps.pm NGS SNPs INTERNAL',
                 'John Boothroyd lab at Stanford',
                 'Lindstrom 454 SNPs',
                 --cryp-inc 
                 'Widmer SNPs',
                 --plas-rbld
                 'pfal3D7_SNP_combined_Su_Broad_Sanger_gff_RSRC',
                 'pfal3D7_SNP_sanger_PReichenowi_gff_RSRC',
                 'pfal3D7_SNP_Winzeler_Genetic_Variation_Array_gff_RSRC',
                 'pfal3D7_SNP_sanger_ItGhana_gff_RSRC',
                 'pfal3D7_SNP_Broad_gff_RSRC',
                 'pfal3D7_SNP_XSu_gff_RSRC'
            )
         and sa.organism = s.organism
         and sa.chromosome is not null
         group by sa.organism
      </sql>

        </sqlQuery>

    <sqlQuery name="withChromosomesHtsSNPs" excludeProjects="EuPathDB,MicrosporidiaDB,PiroplasmaDB,AmoebaDB">
      <column name="internal"/>
      <column name="term"/>
 
        <sql>
          select sa.organism as term, sa.organism as internal
          from apidbtuning.snpstrains s, apidbtuning.sequenceattributes sa
          where s.extdb_name = 'InsertSnps.pm NGS SNPs INTERNAL'
          and sa.organism = s.organism
          and sa.chromosome is not null
          group by sa.organism
        </sql>

        </sqlQuery>

    <sqlQuery name="withSNPs" excludeProjects="EuPathDB,AmoebaDB,MicrosporidiaDB,TriTrypDB,PiroplasmaDB">
      <column name="internal"/>
      <column name="term"/>
        <sql>
          select CASE WHEN s.organism like '%strain CL Brener%' THEN 'Trypanosoma cruzi strain CL Brener - Unassigned' ELSE s.organism END as term, 
                 s.organism as internal
          from apidbtuning.snpstrains s
          where s.extdb_name in (
					      --toxo-inc 
						    'Genetic Markers - David Sibley',
								'Genomic Sequence SNPs',
								'InsertSnps.pm NGS SNPs INTERNAL',
								'John Boothroyd lab at Stanford',
								'Lindstrom 454 SNPs',
								--cryp-inc 
								'Widmer SNPs',
								--plas-rbld
								'pfal3D7_SNP_combined_Su_Broad_Sanger_gff_RSRC',
								'pfal3D7_SNP_sanger_PReichenowi_gff_RSRC',
								'pfal3D7_SNP_Winzeler_Genetic_Variation_Array_gff_RSRC',
								'pfal3D7_SNP_sanger_ItGhana_gff_RSRC',
								'pfal3D7_SNP_Broad_gff_RSRC',
								'pfal3D7_SNP_XSu_gff_RSRC'
					)
          group by s.organism
        </sql>
        </sqlQuery>

    <sqlQuery name="withHtsSNPs" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
        <sql>
          select CASE WHEN s.organism like '%strain CL Brener%' THEN 'Trypanosoma cruzi strain CL Brener - Unassigned' ELSE s.organism END as term,
                 s.organism as internal
          from apidbtuning.snpstrains s
          where s.extdb_name = 'InsertSnps.pm NGS SNPs INTERNAL'
          group by s.organism
        </sql>
        </sqlQuery>



    <processQuery name="withChromosomesSNPs" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

    <processQuery name="withChromosomesHtsSNPs" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

    <processQuery name="withSNPs" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

    <processQuery name="withHtsSNPs" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- with genomic seq

         only include a species if one of the species' taxon_ids is
         associated with a sequence whose sequence_ontology_id maps to
         'contig', 'supercontig' or 'chromosome'.
                                                                           -->
    <!--===================================================================-->

    <sqlQuery name="withGenomicSeq" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sql excludeProjects="ToxoDB,MicrosporidiaDB">
        <![CDATA[
	 /* withGenomicSeq filter query (excluding Toxo and Micro) */
                                 WITH FilterQuery as (
		SELECT DISTINCT sa.organism
		FROM dots.NaSequence ns, ApidbTuning.SequenceAttributes sa, sres.SequenceOntology so
		WHERE ns.na_sequence_id = sa.na_sequence_id
		AND so.sequence_ontology_id = ns.sequence_ontology_id
		AND so.term_name IN ('contig', 'supercontig', 'chromosome',
                                     'mitochondrial_chromosome','plastid_sequence')
		AND sa.project_id = '@PROJECT_ID@')
         /* end filter query */
         SELECT DISTINCT term, parentTerm, internal from (
              SELECT term, parentTerm, apidb.tab_to_string(set
              (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
         WHERE ot.organism = fq.organism
         GROUP BY term, parentTerm)
         UNION 
         SELECT term, parentTerm, internal
          from (select
                'Leishmania braziliensis annotated' as term,
                'Leishmania braziliensis' as parentTerm,
                 apidb.tab_to_string(set
              (cast(collect(trim(to_char(ot.internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot
         WHERE ot.organism = 'Leishmania braziliensis'
         AND ot.term = 'Leishmania braziliensis')
         where '@PROJECT_ID@' = 'TriTrypDB'
         ORDER BY parentTerm,term
        ]]>
      </sql>

  <sql includeProjects="ToxoDB,MicrosporidiaDB">
        <![CDATA[
         /* withGenomicSeq filter query (for Toxo and Micro) */
         WITH FilterQuery AS (
            SELECT DISTINCT sa.organism
            FROM dots.NaSequence ns, ApidbTuning.SequenceAttributes sa
            WHERE ns.na_sequence_id = sa.na_sequence_id             
            AND sa.project_id = '@PROJECT_ID@')
         /* end filter query */
		 SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
              (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
         WHERE ot.organism = fq.organism
         GROUP BY term, parentTerm
         ORDER BY parentTerm,term
        ]]>
      </sql>

    </sqlQuery>

    <processQuery name="withGenomicSeq" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>

    <!--===================================================================-->
    <!-- with genes

         Each row returned represents a species.  Species are only included if
         they are represented in a sequence record (in dots.NaSequence), either
         by their own taxon_id or that of a subspecies.  Sequence records are
         only used if there is a gene record (dots.GeneFeature) that points to
         them.
                                                                           -->
    <!--===================================================================-->
    <sqlQuery name="withGenes" isCacheable="true" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sql>
        <![CDATA[
         /* WithGenes filter query*/
         WITH FilterQuery as (
              SELECT DISTINCT ga.organism as organism
              FROM apidbtuning.GeneAttributes ga
              WHERE ga.project_id = '@PROJECT_ID@')
         /* end filter query */
         SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
              (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
         WHERE ot.organism = fq.organism
            OR ot.organism = 'Cryptosporidium parvum Chr. 6'
         GROUP BY term, parentTerm
         ORDER BY parentTerm,term
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withGenes" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery> 


<!--===================================================================-->
    <!-- with genes Plasmo, TriTryp and Crypto,  used in genes by protein PDB similarity,
        copy from withGenes -->
    <!--===================================================================-->


 <sqlQuery name="withPdbSimilarity" includeProjects="CryptoDB,PlasmoDB,TriTrypDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>

      <sql>
        <![CDATA[
         /* withPdbSimilarity filter query */
         WITH FilterQuery AS (  
	    SELECT DISTINCT ga.organism
            FROM ApidbTuning.GeneAttributes ga, ApidbTuning.pdbsimilarity s 
            WHERE s.source_id = ga.source_id
	    AND ga.project_id='@PROJECT_ID@')
         /* end filter query */
         SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
              (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
       WHERE ot.organism = fq.organism
            OR ot.organism = 'Cryptosporidium parvum Chr. 6'
         GROUP BY term, parentTerm
         ORDER BY parentTerm,term	
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withPdbSimilarity" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>


<!--===================================================================-->
    <!-- with sage tags    -->
    <!--===================================================================-->


    <sqlQuery name="withSageTags" includeProjects="PlasmoDB,ToxoDB,GiardiaDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>

      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(set(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab)), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT distinct tn.name, ts.species_taxon_id AS internal_taxon
                FROM sres.TaxonName tn, ApidbTuning.TaxonSpecies ts
                WHERE tn.name_class='scientific name'
                  AND tn.taxon_id = ts.species_taxon_id
                  AND ts.taxon_id IN
                             (  SELECT ga.taxon_id
                                FROM ApidbTuning.GeneAttributes ga
                                WHERE ga.project_id = '@PROJECT_ID@' 
                                  )) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                 UNION
                SELECT 'Toxoplasma gondii' AS name, 6 AS rank FROM dual
                 UNION
                SELECT 'Neospora caninum' AS name, 7 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>


    <processQuery name="withSageTags" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

 <!--===================================================================-->
    <!-- with genes with epitopes    -->
    <!--===================================================================-->

    <sqlQuery name="withEpitopes"  includeProjects="CryptoDB,ToxoDB,PlasmoDB,GiardiaDB,TriTrypDB,PiroplasmaDB,FungiDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>


      <sql>
        <![CDATA[
	 /* withEpitopes filter query */
         WITH FilterQuery AS (
	    SELECT DISTINCT ga.organism
            FROM ApidbTuning.GeneAttributes ga, dots.transcript tr,
                      dots.translatedAaFeature taf, dots.epitopeFeature ef
			WHERE ga.na_feature_id = tr.parent_id
            AND tr.na_feature_id = taf.na_feature_id
            AND taf.aa_sequence_id = ef.aa_sequence_id
			AND ga.project_id = '@PROJECT_ID@')
		 /* end filter query */
         SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
              (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
       WHERE ot.organism = fq.organism
            OR ot.organism = 'Cryptosporidium parvum Chr. 6'
         GROUP BY term, parentTerm
         ORDER BY parentTerm,term
        ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withEpitopes" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>

<!--===================================================================-->
    <!-- with sequencestrains, only used by Toxo
         Toxo should use organismVQ.withGenomicSeq instead like everybody
         we do not change to not make incompatible queries     -->
    <!--===================================================================-->


    <sqlQuery name="withSequenceStrains" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sql>
        <![CDATA[
         /* withSequenceStrains filter query */
         WITH FilterQuery AS (
			SELECT DISTINCT sa.organism
            FROM dots.NaSequence ns, ApidbTuning.SequenceAttributes sa 
            WHERE ns.na_sequence_id = sa.na_sequence_id
			AND sa.project_id = '@PROJECT_ID@')
	     /* end filter query */
		 SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
              (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
         WHERE ot.organism = fq.organism
            OR ot.organism = 'Cryptosporidium parvum Chr. 6'
         GROUP BY term, parentTerm
         UNION 
         SELECT term, parentTerm, internal
          from (select
                'Leishmania braziliensis (annotated)' as term,
                'Leishmania braziliensis' as parentTerm,
                 apidb.tab_to_string(set
              (cast(collect(trim(to_char(ot.internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot
         WHERE ot.organism = 'Leishmania braziliensis'
         AND ot.term = 'Leishmania braziliensis')
         where '@PROJECT_ID@' = 'TriTrypDB'
         ORDER BY parentTerm, term
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withSequenceStrains" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>

<!--===================================================================-->
    <!-- with sequencestrains, only used by
         Toxo should use organismVQ.withGenomicSeq instead like everybody
         we do not change to not make incompatible queries     -->
    <!--===================================================================-->


    <sqlQuery name="withStrainsChromosome" includeProjects="TriTrypDB,ToxoDB,PlasmoDB,MicrosporidiaDB,CryptoDB,PiroplasmaDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
           SELECT distinct sa.organism as term, sa.organism as internal
           FROM ApidbTuning.sequenceattributes sa
           WHERE sa.chromosome IS NOT NULL
           AND sa.project_id = '@PROJECT_ID@'
           ORDER BY sa.organism asc
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withStrainsChromosome" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="50" wsName="internal"/>
      <wsColumn name="term" width="50" wsName="term"/>
    </processQuery>

<!--===================================================================-->
    <!-- with mass spec data    -->
    <!--===================================================================-->
    <sqlQuery name="withMassSpec" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/> 
      <sql>
        <![CDATA[
           -- withMassSpec filterQuery
                   SELECT DISTINCT ga.organism as term, ga.organism as internal 
                   FROM apidb.massspecsummary mss, ApidbTuning.GeneAttributes ga,
                        dots.translatedaafeature taaf, dots.transcript t
                   WHERE mss.aa_sequence_id = taaf.aa_sequence_id
                   AND taaf.na_feature_id = t.na_feature_id
                   AND t.parent_id = ga.na_feature_id
                   AND ga.project_id = '@PROJECT_ID@'
                   UNION
                   SELECT 'All Organisms' as term, 'All Organisms' as internal
                   FROM dual
              ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withMassSpec" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

<!--===================================================================-->
    <!-- only in TriTrypDB and Portal: genes based on phenotype    -->
    <!--===================================================================-->

    <sqlQuery name="withPhenotype" includeProjects="TriTrypDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/> 
      <sql>
        <![CDATA[
         /* withPhenotype filter query */
         WITH FilterQuery AS (
		SELECT DISTINCT ga.organism
		FROM ApidbTuning.GeneAttributes ga, Apidb.sirna si
		WHERE ga.source_id = si.gene
		AND ga.project_id = '@PROJECT_ID@')
	 /* end filter query */
	 SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
              (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
       WHERE ot.organism = fq.organism
            OR ot.organism = 'Cryptosporidium parvum Chr. 6'
         GROUP BY term, parentTerm
         ORDER BY parentTerm,term
        ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withPhenotype" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>




<!--===================================================================-->
    <!-- used in other recordtype queries (other than gene) for dumping    -->
    <!--===================================================================-->


    <sqlQuery name="withGenesGFF" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>

      <sql>
        <![CDATA[
           SELECT distinct ga.organism as term,ns.taxon_id as internal
           FROM dots.NaSequence ns, dots.GeneFeature gf,ApidbTuning.geneattributes ga
           WHERE gf.na_sequence_id = ns.na_sequence_id
           AND ga.source_id = gf.source_id
           AND ga.project_id = '@PROJECT_ID@'
           ORDER BY organism asc
        ]]>
      </sql>
    </sqlQuery>


<!--===================================================================-->
    <!-- used in gene query for dumping    -->
    <!--===================================================================-->


    <sqlQuery name="nameWithGenesGFF" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <sql excludeProjects="ToxoDB,CryptoDB,TriTrypDB">
        <![CDATA[
          select geneOrgs.organism as term, geneOrgs.organism as internal
          from (select distinct organism from ApidbTuning.GeneAttributes) geneOrgs,
               (select 'Cryptosporidium parvum' AS name, 1 AS rank from dual
                 union
                select 'Cryptosporidium hominis' as name, 2 as rank from dual
                 union
                select 'Cryptosporidium muris' as name, 2 as rank from dual
                 union
                select 'Plasmodium falciparum' as name, 4 as rank from dual
                 union
                select 'Plasmodium vivax' as name, 4 as rank from dual
                 union
                select 'Plasmodium yoelii' as name, 5 as rank from dual
                 union
                select 'Toxoplasma gondii' as name, 6 as rank from dual
                 union
                select 'Neospora caninum' as name, 7 as rank from dual
                ) partial_ordering
          where geneOrgs.organism = partial_ordering.name(+)
          order by nvl(partial_ordering.rank, 9999), geneOrgs.organism
        ]]>
      </sql>
      <sql includeProjects="ToxoDB,CryptoDB,TriTrypDB">
        <![CDATA[
           SELECT distinct ga.organism as term,ns.taxon_id as internal
           FROM dots.NaSequence ns, dots.GeneFeature gf,ApidbTuning.geneattributes ga
           WHERE gf.na_sequence_id = ns.na_sequence_id
           AND ga.source_id = gf.source_id
           AND ga.project_id = '@PROJECT_ID@'
           ORDER BY organism asc
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withGenesGFF" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

 <processQuery name="nameWithGenesGFF" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- with ESTs - doesnt look like it is use! -->  
    <!--===================================================================-->
    <!--
        <sqlQuery name="withESTs" excludeProjects="EuPathDB" isCacheable="true">
            <column name="internal"/>
            <column name="term"/>
             <sql>
                SELECT orgs.term, orgs.internal
                FROM (SELECT tn.name AS term, t.taxon_id AS internal
                      FROM sres.TaxonName tn, sres.taxon t
                      WHERE tn.name_class='scientific name'
                        AND t.taxon_id = tn.taxon_id
                        AND t.rank = 'species'
                        AND t.taxon_id in
                            (SELECT taxon_id
                             FROM sres.taxon
                             CONNECT BY taxon_id = prior parent_id
                             START WITH taxon_id IN
                             (SELECT ens.taxon_id
                              FROM dots.ExternalNaSequence ens, dots.Est e, ApidbTuning.EstAttributes ea
                              WHERE e.na_sequence_id = ens.na_sequence_id
                              AND ens.source_id = ea.source_id
                              AND ea.project_id = '@PROJECT_ID@'))) orgs,
                     (SELECT 'Plasmodium falciparum' AS term, 1 as rank from dual
                      UNION
                      SELECT 'Plasmodium vivax' AS term, 2 as rank from dual
                      UNION
                      SELECT 'Plasmodium yoelii' AS term, 3 as rank from dual) partial_order
                  WHERE orgs.term = partial_order.term(+)
                  ORDER BY partial_order.rank
            </sql>
        </sqlQuery>

<processQuery name="withESTs" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>
    -->


    <!--===================================================================-->
    <!-- with EC Number -->  
    <!--===================================================================-->



 <sqlQuery name="withEC" excludeProjects="MicrospordiaDB,EuPathDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sql>
        <![CDATA[
	 /* withEC filter query */
	 WITH FilterQuery AS (
	      SELECT DISTINCT ga.organism
	      FROM ApidbTuning.GeneAttributes ga
              WHERE ga.ec_numbers IS NOT NULL
              AND ga.project_id = '@PROJECT_ID@'
              )
	 /* end filter query */
	 SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
              (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ') 
              AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
       WHERE ot.organism = fq.organism
            OR ot.organism = 'Cryptosporidium parvum Chr. 6'
         GROUP BY term, parentTerm
         ORDER BY parentTerm,term
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withEC" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>




    <!--===================================================================-->
    <!-- with tfBindingSite -->  
    <!--===================================================================-->

    <sqlQuery name="tfBindingSite" includeProjects="PlasmoDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sql>
        <![CDATA[
           	 /* tfBindingSite filter query */
              WITH FilterQuery AS (
                   SELECT DISTINCT ga.organism
                   FROM ApidbTuning.GeneAttributes ga, ApidbTuning.tfbsgene tg
                   WHERE tg.gene_source_id = ga.source_id
                   AND ga.project_id = '@PROJECT_ID@')
              SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
                     (cast(collect(trim(to_char(tn.name)))as apidb.varchartab)), ', ') 
                     AS internal
              FROM ApidbTuning.OrganismTree ot, FilterQuery fq, Sres.TaxonName tn
              WHERE ot.organism = fq.organism
              and   tn.taxon_id = ot.internal
              and   tn.name_class = 'scientific name'
              GROUP BY term, parentTerm
              ORDER BY parentTerm,term
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="tfBindingSite" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>

    <!--===================================================================-->
    <!-- TriTrypWithGenes  -->  
    <!--===================================================================-->

<!-- Appears Unused 

      <sqlQuery name="withTriTrypGenes" includeProjects="TriTrypDB" isCacheable="true">
      <testParamValues excludeProjects="TriTrypDB" minRows="0"/>
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          select tn.name as term, clade.subtaxa as internal
          from sres.TaxonName tn,
               (select species_taxon_id, apidb.tab_to_string(set(cast(collect(trim(to_char(taxon_id)))
                                                       as apidb.varchartab)), ', ') subtaxa
                from ApidbTuning.TaxonSpecies ts
                where ts.taxon_id in (/* taxa relevant to this param */
                                      select taxon_id from ApidbTuning.GeneAttributes)
                group by species_taxon_id) clade,
               ( 
                  select 'Trypanosoma cruzi' as name, 1 as rank from dual
               ) partial_ordering
          where tn.taxon_id = clade.species_taxon_id
            and tn.name_class = 'scientific name'
            and tn.name = partial_ordering.name(+)
          order by partial_ordering.rank, tn.name
        ]]>
      </sql>
    </sqlQuery>
    <processQuery name="withTriTrypGenes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>
-->

<!--====================================================================-->
<!-- withPlamsoTrichGiardiaGenes used in genes by secondary structure   , 
           now includes crypto  and tritryp

-->
<!--====================================================================-->


<sqlQuery name="withSecondaryStructure" includeProjects="PlasmoDB,GiardiaDB,TrichDB,CryptoDB,TriTrypDB" isCacheable="true">

      <testParamValues excludeProjects="GiardiaDB,TrichDB,PlasmoDB" minRows="0"/>
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sql>
        <![CDATA[
         /* withSecondaryStructure filter query */
          WITH FilterQuery AS (
             SELECT DISTINCT ga.organism
             FROM dots.SecondaryStructure ss, dots.TranslatedAaFeature taf, 
                  dots.Transcript t, ApidbTuning.GeneAttributes ga
             WHERE taf.aa_sequence_id = ss.aa_sequence_id
             AND   t.na_feature_id = taf.na_feature_id
             AND   ga.na_feature_id = t.parent_id
             AND   ga.project_id = '@PROJECT_ID@'
         )
-- end filter query
         SELECT DISTINCT term, parentTerm, apidb.tab_to_string(set
                 (cast(collect(trim(to_char(internal)))as apidb.varchartab)), ', ')
                 AS internal
         FROM ApidbTuning.OrganismTree ot, FilterQuery fq
         WHERE ot.organism = fq.organism
         OR ot.organism = 'Cryptosporidium parvum Chr. 6'
        GROUP BY term, parentTerm
        ORDER BY parentTerm,term
        ]]>
      </sql>
    </sqlQuery>
    <processQuery name="withSecondaryStructure" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>



<!--===================================================================-->
    <!-- tg pf gl   for genes by sage tags
 we should use organismVQ.withSageTags instead but chaning the parameter name makes the query incompatible
-->
    <!--===================================================================-->
<!-- param NOT in use

    <sqlQuery name="tg-pf-gl" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="GiardiaDB,ToxoDB,PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium falciparum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="ToxoDB">Toxoplasma gondii</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="GiardiaDB">Giardia lamblia</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,InitDB,PiroplasmaDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT  organisms.name  AS term,
                 (SELECT apidb.tab_to_string(set(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab)), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="tg-pf-gl" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>
-->

    <!--===================================================================-->
    <!-- tg pf , used in genes by metabolic pathway and GenesByNonnuclearGenomicRegion, 
         we should instead generate an organismVQ.withPlasmofToxoGenes 
         we do not change because we would generate incompatible queries  (only in porta!) 
-->  
    <!--===================================================================-->

    <sqlQuery name="tg-pf" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="ToxoDB,PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium falciparum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="ToxoDB">Toxoplasma gondii</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB,GiardiaDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,InitDB,PiroplasmaDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
           select term, parentTerm, apidb.tab_to_string(set(cast(collect(trim(to_char(internal)))
                    as apidb.varchartab)), ', ') as internal 
           from (
                 select distinct ga.organism as term,
                                 ga.species as parentTerm,
                                 tn.taxon_id as internal
                 from ApidbTuning.GeneAttributes ga, SRES.TaxonName tn, SRES.Taxon t
                 where ga.organism = '&&organism&&'
        				 and ga.organism = tn.name
                 and tn.taxon_id = t.taxon_id
                 and t.rank != 'species'
                                
                 union
                 select distinct ga.species as term,
                                 '' as parentTerm,
                                 ts.taxon_id as internal
                 from ApidbTuning.GeneAttributes ga, SRES.TaxonName tn, ApidbTuning.taxonSpecies ts
                  where ga.organism = '&&organism&&' 
                  and ga.species = tn.name               
                  and ga.organism = tn.name
                  and tn.taxon_id = ts.species_taxon_id
)
           group by term,parentTerm
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="tg-pf" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
      <wsColumn name="parentTerm" width="255" wsName="parentTerm"/>
    </processQuery>

    <!--===================================================================-->
    <!-- pf -->  
    <!--===================================================================-->

    <sqlQuery name="pf" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium falciparum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB,GiardiaDB,ToxoDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,InitDB,PiroplasmaDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
           select term, parentTerm, apidb.tab_to_string(set(cast(collect(trim(to_char(internal)))
                    as apidb.varchartab)), ', ') as internal 
           from (
                 select distinct ga.organism as term,
                                 ga.species as parentTerm,
                                 tn.taxon_id as internal
                 from ApidbTuning.GeneAttributes ga, SRES.TaxonName tn, SRES.Taxon t
                 where ga.organism = '&&organism&&'
        				 and ga.organism = tn.name
                 and tn.taxon_id = t.taxon_id
                 and t.rank != 'species'              
                 union
                 select distinct ga.species as term,
                                 '' as parentTerm,
                                 ts.taxon_id as internal
                 from ApidbTuning.GeneAttributes ga, SRES.TaxonName tn, ApidbTuning.taxonSpecies ts
                  where ga.organism = '&&organism&&' 
                  and ga.species = tn.name               
                  and ga.organism = tn.name
                  and tn.taxon_id = ts.species_taxon_id
                )
           group by term,parentTerm
              ]]>
      </sql>
    </sqlQuery>

    <processQuery name="pf" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- pb -->  
    <!--===================================================================-->

    <sqlQuery name="pb" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium berghei</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB,GiardiaDB,ToxoDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,FungiDB,InitDB,PiroplasmaDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(set(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab)), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="pb" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="255" wsName="internal"/>
      <wsColumn name="term" width="255" wsName="term"/>
    </processQuery>


    <!--===================================================================-->
    <!-- strain flatvocab query -->  
    <!--===================================================================-->

    <sqlQuery name="withStrains" includeProjects="ToxoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT distinct organism AS term, ncbi_tax_id AS internal
          FROM ApidbTuning.GeneAttributes
          ORDER BY organism asc
        ]]>
      </sql>
    </sqlQuery>



      <sqlQuery name="OrgsWithNonNuclearGenes" includeProjects="PlasmoDB,ToxoDB">
	<column name="internal"/>
	<column name="term"/>
	<sql>
	  <![CDATA[
            SELECT distinct ga.organism as term, ga.organism as internal
	    FROM  apidbtuning.geneattributes ga, apidbtuning.sequenceattributes sa, SRes.sequenceontology so
	    WHERE ga.na_sequence_id = sa.na_sequence_id
	    AND sa.so_id = so.so_id
	    AND so.term_name in  ('mitochondrial_chromosome', 'apicoplast_chromosome')
	    ORDER BY ga.organism
	  ]]>
	</sql>
      </sqlQuery>

      <processQuery name="OrgsWithNonNuclearGenes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
	<wsColumn name="internal" width="100" wsName="internal"/>
	<wsColumn name="term" width="100" wsName="term"/>
      </processQuery>


      <sqlQuery name="OrgsWithCentromereGenes" includeProjects="PlasmoDB,ToxoDB">
	<column name="internal"/>
	<column name="term"/>
	<sql>
	  <![CDATA[
            SELECT distinct ga.organism  as term, ga.organism as internal
            FROM ApidbTuning.GeneCentromereDistance gcd, ApidbTuning.GeneAttributes ga
            WHERE gcd.gene = ga.source_id
	    ORDER BY ga.organism
	  ]]>
	</sql>
      </sqlQuery>

      <processQuery name="OrgsWithCentromereGenes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
	<wsColumn name="internal" width="100" wsName="internal"/>
	<wsColumn name="term" width="100" wsName="term"/>
      </processQuery>

  </querySet>

</wdkModel>
