<wdkModel>

  <!--=====================================================================-->
  <!-- Params  -->
  <!--=====================================================================-->
  <paramSet name="organismParams"> 

       <stringParam name="organismSite" visible="false">
             </stringParam>

<!-- UNUSED, remove in a few rounds

 <stringParam name="hiddenOrganismGiardia" visible="false">
       </stringParam>

-->

      <flatVocabParam name="organism"
                     queryRef="organismVQ.withGenes"
                     prompt="Organism"
                     multiPick="true"
                     quote="false">
          <useTermOnly value="true" includeProjects="EuPathDB"/>
          <suggest selectMode="all" />
      </flatVocabParam>
    
      <flatVocabParam name="gff_organism"
                     queryRef="organismVQ.withGenesGFF"
                     prompt="Organism"
                     multiPick="true"
                     quote="false">
          <useTermOnly value="true" includeProjects="EuPathDB"/>
      </flatVocabParam>

      <flatVocabParam name="gff_organism_name"
                     queryRef="organismVQ.nameWithGenesGFF"
                     prompt="Organism"
                     multiPick="true"
                     quote="false">
          <useTermOnly value="true" includeProjects="EuPathDB"/>
      </flatVocabParam>

      <flatVocabParam name="organism_with_sagetags"
                     queryRef="organismVQ.withSageTags"
                     prompt="Organism"
                     multiPick="true"
                     quote="false"
                     includeProjects="PlasmoDB,ToxoDB,GiardiaDB,EuPathDB">
          <useTermOnly value="true" includeProjects="EuPathDB"/>
      </flatVocabParam>

      <flatVocabParam name="organism_with_epitopes"
                     queryRef="organismVQ.withEpitopes"
                     prompt="Organism"
                     multiPick="true"
                     quote="false"
                     includeProjects="CryptoDB,ToxoDB,PlasmoDB,GiardiaDB,TriTrypDB">
          <useTermOnly value="true" includeProjects="EuPathDB"/>
      </flatVocabParam>

<!-- UNUSED, remove in a few rounds

      <flatVocabParam name="sequence_organism_text" includeProjects="ToxoDB,EuPathDB"
                     queryRef="organismVQ.textSequenceOrganism"
                     prompt="Organism"
                     multiPick="false"
                     quote="true">
                     <useTermOnly value="true" includeProjects="EuPathDB"/>
      </flatVocabParam>

-->


<!-- cannot reuse "organism" param above because apidb needs to use the internal value in the local ortholog question -->
      <flatVocabParam name="localorganism"
                     queryRef="organismVQ.LocalOrganisms"
                     prompt="Organism"
                     multiPick="true"
                     quote="true">
      </flatVocabParam>

      <flatVocabParam name="text_search_organism"
                     queryRef="organismVQ.withGenes"
                     prompt="Organism"
                     multiPick="true"
                     quote="true">
          <useTermOnly value="true"/>
      </flatVocabParam>

 <!--=====================================================================-->
  <!-- organismWithChromosomes: I think it is not being used     -->
  <!--=====================================================================-->


    <enumParam name="organismWithChromosomes"
                     prompt="Organism"
                     multiPick="false" includeProjects="CryptoDB,PlasmoDB,ToxoDB,EuPathDB">
      <useTermOnly value="true" includeProjects="EuPathDB"/>
      <enumList>   
        <enumValue includeProjects="CryptoDB,EuPathDB">
          <term>Cryptosporidium parvum</term>
          <internal>Cryptosporidium parvum%</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium falciparum</term>
          <internal>Plasmodium falciparum 3D7</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium knowlesi</term>
          <internal>Plasmodium knowlesi strain H</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium vivax</term>
          <internal>Plasmodium vivax SaI-1</internal>
        </enumValue>

        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii ME49</term>
          <internal>Toxoplasma gondii ME49</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii GT1</term>
          <internal>Toxoplasma gondii GT1</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii VEG</term>
          <internal>Toxoplasma gondii VEG</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Neospora caninum</term>
          <internal>Neospora caninum</internal>
        </enumValue>


      </enumList>   

    </enumParam>


 <!--=====================================================================-->
  <!-- organismWithEstsInChromosomes: I think it is not being used     -->
  <!--=====================================================================-->

    <enumParam name="organismWithEstsInChromosomes"
                     prompt="Organism"
                     multiPick="false"
                     includeProjects="PlasmoDB,EuPathDB" >
      <useTermOnly value="true" includeProjects="EuPathDB"/>
      <enumList>   
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium falciparum</term>
          <internal>Plasmodium falciparum 3D7</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium vivax</term>
          <internal>Plasmodium vivax SaI-1</internal>
        </enumValue>

      </enumList>   
    </enumParam>


<!--=====================================================================-->
  <!-- organismWithAssemblies: used in Assem by gene Overlap     -->
  <!--=====================================================================-->

    <enumParam name="organismWithAssemblies"
                     prompt="Organism"
                     multiPick="true"
                     excludeProjects="TrichDB" >
      <useTermOnly value="true" includeProjects="EuPathDB"/>
      <enumList>   
  <enumValue includeProjects="CryptoDB,EuPathDB">
          <term>Cryptosporidium parvum</term>
          <internal>Cryptosporidium parvum Iowa II</internal>
        </enumValue>
  <enumValue includeProjects="CryptoDB,EuPathDB">
          <term>Cryptosporidium muris</term>
          <internal>Cryptosporidium muris</internal>
        </enumValue>
  <enumValue includeProjects="GiardiaDB,EuPathDB">
          <term>Giardia lamblia</term>
          <internal>Giardia lamblia</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium falciparum</term>
          <internal>Plasmodium falciparum 3D7</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium vivax</term>
          <internal>Plasmodium vivax SaI-1</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium berghei</term>
          <internal>Plasmodium berghei strain ANKA</internal>
        </enumValue>
        <enumValue includeProjects="PlasmoDB,EuPathDB">
          <term>Plasmodium yoelii</term>
          <internal>Plasmodium yoelii yoelii str. 17XNL</internal>
        </enumValue>

 <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii ME49</term>
          <internal>Toxoplasma gondii ME49</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii GT1</term>
          <internal>Toxoplasma gondii GT1</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Toxoplasma gondii VEG</term>
          <internal>Toxoplasma gondii VEG</internal>
        </enumValue>
        <enumValue includeProjects="ToxoDB,EuPathDB">
          <term>Neospora caninum</term>
          <internal>Neospora caninum</internal>
        </enumValue>

        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Leishmania infantum</term>
          <internal>Leishmania infantum</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Leishmania major</term>
          <internal>Leishmania major</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Trypanosoma cruzi</term>
          <internal>Trypanosoma cruzi strain CL Brener</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Trypanosoma brucei</term>
          <internal>Trypanosoma brucei TREU927</internal>
        </enumValue>
        <enumValue includeProjects="TriTrypDB,EuPathDB">
          <term>Leishmania braziliensis</term>
          <internal>Leishmania braziliensis</internal>
        </enumValue>

        <enumValue includeProjects="AmoebaDB,EuPathDB">
          <term>Entamoeba dispar SAW760</term>
          <internal>Entamoeba dispar SAW760</internal>
        </enumValue>
        <enumValue includeProjects="AmoebaDB,EuPathDB">
          <term>Entamoeba histolytica HM-1:IMSS</term>
          <internal>Entamoeba histolytica HM-1:IMSS</internal>
        </enumValue>

        <enumValue includeProjects="MicrosporidiaDB,EuPathDB">
          <term>Encephalitozoon cuniculi</term>
          <internal>Encephalitozoon cuniculi GB-M1</internal>
        </enumValue>
        <enumValue includeProjects="InitDB">
          <term>FILL</term>
          <internal>FILL</internal>
        </enumValue>

      </enumList>   
    </enumParam>



  </paramSet> 


  <!--=====================================================================-->
  <!-- Vocab queries for organism parameters

       These queries differ by which rows they return.  The columns are the
       same:

         term: scientific name of species
         internal: comma-separated list of all taxon ids for the clade whose
                   root is that species

        Many have the same general structure:
         - the taxon list which forms the internal value us generated by a
           recursive sub-query nested inside the SELECT clause
         - the set of rows is determined by an inline view in the FROM clause
           named "organisms"
         - an optional ordering is imposed by another inline view in the FROM
           clause named "partial_ordering".  This is used to let
           P. falciparum, P. vivax, and P. yoelii (in that order) start a
           list of genes.  It's OK for any (or all) of those to be omitted
           from the list, and it's OK for other genes to be included, but if
           they're there, they go first. Otherwise, the organisms are
           ordered alphabetically.
                                                                           -->
  <!--=====================================================================-->

  <querySet name="organismVQ" queryType="vocab">

    <!--===================================================================-->
    <!-- localorganism to apidb  -->
    <!--===================================================================-->

<sqlQuery name="LocalOrganisms">
               <column name="internal"/>
              <column name="term"/>
              <sql>
		SELECT distinct gattr.organism AS internal, case when gattr.organism  = 'Trypanosoma cruzi'
                                                then 'Trypanosoma cruzi (unassigned)'
                                                else gattr.organism end AS term, 2 AS idx
                FROM   apidb.geneAttributes gattr
                ORDER BY gattr.organism
               </sql>
          </sqlQuery>


    <!--===================================================================-->
    <!-- all -->
    <!--===================================================================-->

    <sqlQuery name="all" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (  SELECT ns.taxon_id
                                FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
                                WHERE gf.na_sequence_id = ns.na_sequence_id
                                AND ga.source_id = gf.source_id
                                AND ga.project_id = '@PROJECT_ID@' 
                              UNION
                                SELECT ns.taxon_id
                                FROM dots.NaSequence ns, sres.SequenceOntology so,apidb.sequenceattributes ga
                                WHERE so.sequence_ontology_id = ns.sequence_ontology_id
                                AND so.term_name IN ('contig', 'supercontig', 'chromosome','mitochondrial_chromosome','plastid_sequence')
                                AND ga.source_id = ns.source_id
                                AND ga.project_id = '@PROJECT_ID@' 
                                  ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <!--===================================================================-->
    <!-- for tree test -->  
    <!--===================================================================-->

    <sqlQuery name="toxoForTreeTest" includeProjects="ToxoDB">
      <column name="internal"/>
      <column name="term"/>
      <column name="parentTerm"/>
      <sql>
        <![CDATA[
          select n.name as term,n.taxon_id as internal, tn.name as parentTerm
          from sres.TAXONNAME n,sres.taxon t,sres.taxonname tn
          where t.taxon_id in (
          SELECT taxon_id
          FROM sres.taxon
          CONNECT BY prior taxon_id = parent_id
          START WITH taxon_id in (14104,14204))
          and t.taxon_id = n.taxon_id
          and n.name_class='scientific name'
          and tn.taxon_id = t.parent_id
          and tn.name_class = 'scientific name'
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="all" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>
    <!--===================================================================-->
    <!-- with chromosomes -->  
    <!--===================================================================-->

<!--
    <sqlQuery name="withChromosomes" includeProjects="CryptoDB,ToxoDB,PlasmoDB">
      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium falciparum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="ToxoDB">Toxoplasma gondii</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB">Cryptosporidium parvum</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&' ) organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

-->

<sqlQuery name="withChromosomes" includeProjects="CryptoDB,ToxoDB,PlasmoDB,TriTrypDB,MicrosporidiaDB">
      <column name="internal"/>
      <column name="term"/>

            <sql  includeProjects="CryptoDB">
            SELECT * FROM (
               SELECT 'Cryptosporidium parvum' as term,
                       'Cryptosporidium parvum Iowa II' as internal 
               FROM dual
            )
            </sql>          

            <sql  includeProjects="TriTrypDB">
            SELECT * FROM (
               SELECT 'Leishmania infantum' as term,
                       '''' ||'Leishmania infantum'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Leishmania major' as term,
                       '''' ||'Leishmania major'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma cruzi' as term,
                       '''' ||'Trypanosoma cruzi'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma brucei' as term,
                       '''' ||'Trypanosoma brucei'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Leishmania braziliensis' as term,
                       '''' ||'Leishmania braziliensis'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Leishmania mexicana' as term,
                       '''' ||'Leishmania mexicana'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma congolense' as term,
                       '''' ||'Trypanosoma congolense'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma vivax' as term,
                       '''' ||'Trypanosoma vivax'|| '''' as internal 
               FROM dual
            )
            </sql>          

            <sql  includeProjects="ToxoDB">
            SELECT * FROM (
                SELECT 'Toxoplasma gondii' as term,
                '''' ||'Toxoplasma gondii%'|| '''' as internal 
                FROM dual 
             UNION
                SELECT 'Neospora caninum' as term,
                '''' ||'Neospora caninum'|| '''' as internal 
                FROM dual
            )
            </sql>
 
            <sql  includeProjects="PlasmoDB">
            SELECT * FROM (
               SELECT 'Plasmodium falciparum' as term,
                       '''' ||'Plasmodium falciparum 3D7'|| '''' as internal 
               FROM dual
            UNION
                SELECT 'Plasmodium knowlesi' as term,
                       '''' ||'Plasmodium knowlesi strain H'|| ''''   as internal 
                FROM dual
            UNION
                SELECT 'Plasmodium vivax' as term,
                       '''' ||'Plasmodium vivax SaI-1'|| ''''   as internal 
                FROM dual
            UNION
                SELECT 'Plasmodium chabaudi' as term,
                       '''' ||'Plasmodium chabaudi chabaudi'|| ''''   as internal 
                FROM dual
            )
            </sql>
 
            <sql  includeProjects="MicrosporidiaDB">
            SELECT * FROM (
               SELECT 'Encephalitozoon cuniculi' as term,
                       '''' ||'Encephalitozoon cuniculi'|| '''' as internal 
               FROM dual
            UNION
               SELECT 'Encephalitozoon intestinalis' as term,
                       '''' ||'Encephalitozoon intestinalis'|| '''' as internal 
               FROM dual
	    )
            </sql>

        </sqlQuery>



    <processQuery name="withChromosomes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>



<!--===================================================================-->
    <!-- with chromosomes and ESTs + Assemblies -->  
    <!--===================================================================-->

    <sqlQuery name="withChromosomesESTsAssems" includeProjects="CryptoDB,ToxoDB,PlasmoDB,TriTrypDB,MicrosporidiaDB">
      <column name="internal"/>
      <column name="term"/>

    <sql  includeProjects="CryptoDB">
            SELECT * FROM (
               SELECT 'Cryptosporidium parvum' as term,
                       '''' ||'Cryptosporidium parvum Iowa II'|| '''' as internal 
               FROM dual
            )
            </sql>           

             <sql  includeProjects="ToxoDB">
            SELECT * FROM (
                SELECT 'Toxoplasma gondii ME49' as term,
                        '''' ||'Toxoplasma gondii ME49'|| '''' as internal 
                FROM dual 
             UNION
 SELECT 'Toxoplasma gondii GT1' as term,
                        '''' ||'Toxoplasma gondii GT1'|| '''' as internal 
                FROM dual 
             UNION
 SELECT 'Toxoplasma gondii VEG' as term,
                        '''' ||'Toxoplasma gondii VEG'|| '''' as internal 
                FROM dual 
             UNION
                SELECT 'Neospora caninum' as term,
                        '''' ||'Neospora caninum'|| '''' as internal 
                FROM dual
            )
            </sql>
 
            <sql  includeProjects="PlasmoDB">
            SELECT * FROM (
               SELECT 'Plasmodium falciparum' as term,
                       '''' ||'Plasmodium falciparum 3D7'|| '''' as internal 
               FROM dual
            UNION
                SELECT 'Plasmodium vivax' as term,
                       '''' ||'Plasmodium vivax SaI-1'|| ''''   as internal 
                FROM dual
            )
            </sql>

            <sql  includeProjects="TriTrypDB">
            SELECT * FROM (
               SELECT 'Leishmania infantum' as term,
                       '''' ||'Leishmania infantum'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Leishmania major' as term,
                       '''' ||'Leishmania major'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma cruzi' as term,
                       '''' ||'Trypanosoma cruzi strain CL Brener'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma brucei' as term,
                       '''' ||'Trypanosoma brucei TREU927'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma congolense' as term,
                       '''' ||'Trypanosoma congolense'|| '''' as internal 
               FROM dual
            )
            </sql>          
            <sql  includeProjects="MicrosporidiaDB">
            SELECT * FROM (
               SELECT 'Encephalitozoon cuniculi' as term,
                       '''' ||'Encephalitozoon cuniculi GB-M1'|| '''' as internal 
               FROM dual
            	    )
            </sql>          

        </sqlQuery>



    <processQuery name="withChromosomesESTsAssems" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>






<!--===================================================================-->
    <!-- with chromosomes and ORFs, added for orfs by location -->  
    <!--===================================================================-->
<sqlQuery name="withChromosomesORFs" includeProjects="CryptoDB,ToxoDB,PlasmoDB,TriTrypDB,MicrosporidiaDB">
      <column name="internal"/>
      <column name="term"/>

            <sql  includeProjects="CryptoDB">
            SELECT * FROM (
               SELECT 'Cryptosporidium parvum Iowa II' as term,
                       '''' ||'Cryptosporidium parvum Iowa II'|| '''' as internal 
               FROM dual
            )
            </sql>          

            <sql  includeProjects="ToxoDB">
            SELECT * FROM (
                SELECT 'Toxoplasma gondii ME49' as term,
                        '''' ||'Toxoplasma gondii ME49'|| '''' as internal 
                FROM dual 
             UNION
 SELECT 'Toxoplasma gondii GT1' as term,
                        '''' ||'Toxoplasma gondii GT1'|| '''' as internal 
                FROM dual 
             UNION
 SELECT 'Toxoplasma gondii VEG' as term,
                        '''' ||'Toxoplasma gondii VEG'|| '''' as internal 
                FROM dual 
             UNION
                SELECT 'Neospora caninum' as term,
                        '''' ||'Neospora caninum'|| '''' as internal 
                FROM dual
            )
            </sql>
 
            <sql  includeProjects="PlasmoDB">
            SELECT * FROM (
               SELECT 'Plasmodium falciparum' as term,
                       '''' ||'Plasmodium falciparum 3D7'|| '''' as internal 
               FROM dual
            UNION
                SELECT 'Plasmodium knowlesi' as term,
                       '''' ||'Plasmodium knowlesi strain H'|| ''''   as internal 
                FROM dual
            UNION
                SELECT 'Plasmodium vivax' as term,
                       '''' ||'Plasmodium vivax SaI-1'|| ''''   as internal 
                FROM dual
            )
            </sql>

            <sql  includeProjects="TriTrypDB">
            SELECT * FROM (
               SELECT 'Leishmania infantum' as term,
                       '''' ||'Leishmania infantum'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Leishmania major' as term,
                       '''' ||'Leishmania major'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma cruzi' as term,
                       '''' ||'Trypanosoma cruzi strain CL Brener'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma brucei' as term,
                       '''' ||'Trypanosoma brucei TREU927'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Leishmania braziliensis' as term,
                       '''' ||'Leishmania braziliensis'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Leishmania mexicana' as term,
                       '''' ||'Leishmania mexicana mexicana'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma congolense' as term,
                       '''' ||'Trypanosoma congolense'|| '''' as internal 
               FROM dual
             UNION
               SELECT 'Trypanosoma vivax' as term,
                       '''' ||'Trypanosoma vivax'|| '''' as internal 
               FROM dual

            )
            </sql>

            <sql  includeProjects="MicrosporidiaDB">
            SELECT * FROM (
               SELECT 'Encephalitozoon cuniculi' as term,
                       '''' ||'Encephalitozoon cuniculi GB-M1'|| '''' as internal 
               FROM dual
            UNION
               SELECT 'Encephalitozoon intestinalis' as term,
                       '''' ||'Encephalitozoon intestinalis'|| '''' as internal 
               FROM dual
	    )
            </sql>
        </sqlQuery>



    <processQuery name="withChromosomesORFs" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


  <!--===================================================================-->
    <!-- with chromosomes and ORFs, used in orfs by location for PORTAL VALIDATION 
         internal values NOT USED, only term values     
         (1) consistent with term values provided by orgVQ used in location.js...
                which we try to be the param used above by the component sites.
         (2) consistent with term values harcoded in ApiDB_...js 
                (used to access all sites when sequenceID is used)             -->        
    <!--===================================================================-->


<sqlQuery name="withChromosomesORFsValid" includeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>

        <sql>
            SELECT * FROM (
               SELECT 'Giardia lamblia' as term,
                       '''' ||'Giardia lamblia'|| '''' as internal 
               FROM dual
 UNION 
               SELECT 'Trichomonas vaginalis' as term,
                       '''' ||'Trichomonas vaginalis'|| '''' as internal 
               FROM dual
UNION 
               SELECT 'Cryptosporidium parvum Iowa II' as term,
                       '''' ||'Cryptosporidium parvum'|| '''' as internal 
               FROM dual
UNION 
              SELECT 'Toxoplasma gondii ME49' as term,
                        '''' ||'Toxoplasma gondii ME49'|| '''' as internal 
                FROM dual 
             UNION
              SELECT 'Toxoplasma gondii GT1' as term,
                        '''' ||'Toxoplasma gondii GT1'|| '''' as internal 
                FROM dual 
             UNION
              SELECT 'Toxoplasma gondii VEG' as term,
                        '''' ||'Toxoplasma gondii VEG'|| '''' as internal 
                FROM dual 
             UNION
                SELECT 'Neospora caninum' as term,
                        '''' ||'Neospora caninum'|| '''' as internal 
                FROM dual
UNION
               SELECT 'Plasmodium falciparum' as term,
                       '''' ||'Plasmodium falciparum 3D7'|| '''' as internal 
               FROM dual
            UNION
                SELECT 'Plasmodium knowlesi' as term,
                       '108360, 108361, 108362'   as internal 
                FROM dual
            UNION
                SELECT 'Plasmodium vivax' as term,
                       '108360, 108361, 108362'   as internal 
                FROM dual
            )
            </sql>

        </sqlQuery>




<!--===================================================================-->
    <!-- with chromosomes and SNPs -->  
    <!--===================================================================-->

    <sqlQuery name="withChromosomesSNPs" includeProjects="CryptoDB,ToxoDB,PlasmoDB">
      <column name="internal"/>
      <column name="term"/>

            <sql  includeProjects="CryptoDB">
            SELECT * FROM (
               SELECT 'Cryptosporidium parvum' as term,
                       '''' ||'Cryptosporidium parvum'|| '''' as internal 
               FROM dual
            )
            </sql>          

            <sql  includeProjects="ToxoDB">
            SELECT * FROM (
                SELECT 'Toxoplasma gondii' as term,
                        '''' ||'Toxoplasma gondii'|| ''''  as internal 
                FROM dual
            )
            </sql>
 
            <sql  includeProjects="PlasmoDB">
            SELECT * FROM (
               SELECT 'Plasmodium falciparum' as term,
                       '''' ||'Plasmodium falciparum 3D7'|| '''' as internal 
               FROM dual

            )
            </sql>

        </sqlQuery>



    <processQuery name="withChromosomesSNPs" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>



    <!--===================================================================-->
    <!-- with genomic seq

         only include a species if one of the species' taxon_ids is
         associated with a sequence whose sequence_ontology_id maps to
         'contig', 'supercontig' or 'chromosome'.
                                                                           -->
    <!--===================================================================-->

    <sqlQuery name="withGenomicSeq" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <sql excludeProjects="ToxoDB">
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT  tn.name as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, sres.SequenceOntology so,apidb.sequenceattributes ga
                              WHERE so.sequence_ontology_id = ns.sequence_ontology_id
                                AND so.term_name IN ('contig', 'supercontig', 'chromosome','mitochondrial_chromosome','plastid_sequence')
                                AND ga.source_id = ns.source_id
                                AND ga.project_id = '@PROJECT_ID@'
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>

 <sql includeProjects="ToxoDB">
        <![CDATA[
           SELECT distinct sa.organism as term,ns.taxon_id as internal
           FROM dots.NaSequence ns, apidb.sequenceattributes sa
           WHERE sa.na_sequence_id = ns.na_sequence_id
           AND sa.project_id = '@PROJECT_ID@'
           ORDER BY organism asc
        ]]>
      </sql>

    </sqlQuery>

    <processQuery name="withGenomicSeq" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- with genes

         Each row returned represents a species.  Species are only included if
         they are represented in a sequence record (in dots.NaSequence), either
         by their own taxon_id or that of a subspecies.  Sequence records are
         only used if there is a gene record (dots.GeneFeature) that points to
         them.
                                                                           -->
    <!--===================================================================-->
    <sqlQuery name="withGenes" excludeProjects="EuPathDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>

      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
                              WHERE gf.na_sequence_id = ns.na_sequence_id
                              AND ga.source_id = gf.source_id
                              AND ga.project_id = '@PROJECT_ID@' 
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                 UNION
                SELECT 'Toxoplasma gondii' AS name, 6 AS rank FROM dual
                 UNION
                SELECT 'Neospora caninum' AS name, 7 AS rank FROM dual
                 UNION
                SELECT 'Trypanosoma cruzi' AS name, 8 AS rank FROM dual
                 UNION
                SELECT 'Giardia lamblia ATCC 50803' AS name, 9 AS rank FROM dual
                 UNION
                SELECT 'Giardia lamblia P15' AS name, 10 AS rank FROM dual
                 UNION
                SELECT 'Giardia intestinalis ATCC 50581' AS name, 11 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withGenes" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


<!--===================================================================-->
    <!-- with genes Plasmo, TriTryp and Crypto,  used in genes by protein PDB similarity,
        copy from withGenes -->
    <!--===================================================================-->

 <sqlQuery name="withPlasmoTrypCryptoGenes" includeProjects="CryptoDB,PlasmoDB,TriTrypDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>

      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT CASE 
                        WHEN tn.name = 'Giardia intestinalis' THEN 'Giardia lamblia' 
                        else tn.name
                      END as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
                              WHERE gf.na_sequence_id = ns.na_sequence_id
                              AND ga.source_id = gf.source_id
                              AND ga.project_id = '@PROJECT_ID@' 
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                 UNION
                SELECT 'Toxoplasma gondii' AS name, 6 AS rank FROM dual
                 UNION
                SELECT 'Neospora caninum' AS name, 7 AS rank FROM dual
                 UNION
                SELECT 'Trypanosoma cruzi' AS name, 8 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withPlasmoTrypCryptoGenes" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


<!--===================================================================-->
    <!-- with sage tags    -->
    <!--===================================================================-->


    <sqlQuery name="withSageTags" includeProjects="PlasmoDB,ToxoDB,GiardiaDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>

      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT nas.taxon_id
                              FROM   apidb.SageTagGene stg,  apidb.GeneAttributes ga, dots.NASequence nas
                              WHERE  stg.gene_feature_id= ga.na_feature_id
                              AND    ga.na_sequence_id = nas.na_sequence_id
                              AND    ga.project_id = '@PROJECT_ID@' 
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                 UNION
                SELECT 'Toxoplasma gondii' AS name, 6 AS rank FROM dual
                 UNION
                SELECT 'Neospora caninum' AS name, 7 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>


    <processQuery name="withSageTags" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

 <!--===================================================================-->
    <!-- with genes with epitopes    -->
    <!--===================================================================-->

    <sqlQuery name="withEpitopes"  includeProjects="CryptoDB,ToxoDB,PlasmoDB,GiardiaDB,TriTrypDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>

      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT distinct ens.taxon_id 
                              FROM dots.TranslatedAaSequence tas, dots.EpitopeFeature ef,
                                   apidb.GeneAttributes ga, dots.NaSequence ens,
                                   dots.TranslatedAaFeature taf, dots.Transcript t
                              WHERE tas.aa_sequence_id = ef.aa_sequence_id
                                AND tas.aa_sequence_id = taf.aa_sequence_id
                                AND taf.na_feature_id = t.na_feature_id
                                AND t.parent_id = ga.na_feature_id
                                AND ga.na_sequence_id = ens.na_sequence_id
                                AND ga.project_id = '@PROJECT_ID@' 
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                 UNION
                SELECT 'Toxoplasma gondii' AS name, 6 AS rank FROM dual
                 UNION
                SELECT 'Neospora caninum' AS name, 7 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withEpitopes" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

<!--===================================================================-->
    <!-- with sequencestrains, only used by Toxo
         Toxo should use organismVQ.withGenomicSeq instead like everybody
         we do not change to not make incompatible queries     -->
    <!--===================================================================-->


    <sqlQuery name="withSequenceStrains" includeProjects="ToxoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
           SELECT distinct sa.organism as term,ns.taxon_id as internal
           FROM dots.NaSequence ns, apidb.sequenceattributes sa
           WHERE sa.na_sequence_id = ns.na_sequence_id
           AND sa.project_id = '@PROJECT_ID@'
           ORDER BY organism asc
        ]]>
      </sql>
    </sqlQuery>

<!--===================================================================-->
    <!-- only in TriTrypDB and Portal: genes based on phenotype    -->
    <!--===================================================================-->

    <sqlQuery name="withPhenotype" includeProjects="TriTrypDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          select distinct ga.organism as term, ga.organism as internal
          from apidb.GENEATTRIBUTES ga, apidb.SIRNA si
          where si.gene = ga.SOURCE_ID
        ]]>
      </sql>
    </sqlQuery>

 <processQuery name="withPhenotype" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>



<!-- UNUSED, remove in a few rounds

    <sqlQuery name="textSequenceOrganism" includeProjects="ToxoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
           SELECT distinct sa.organism as term,sa.organism as internal
           FROM  apidb.sequenceattributes sa
           WHERE organism != 'Toxoplasma gondii RH'
           ORDER BY organism asc
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="textSequenceOrganism" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>
-->

<!--===================================================================-->
    <!-- used in other recordtype queries (other than gene) for dumping    -->
    <!--===================================================================-->


    <sqlQuery name="withGenesGFF" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <sql excludeProjects="ToxoDB,CryptoDB,TriTrypDB,GiardiaDB,AmoebaDB,MicrosporidiaDB">
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
                              WHERE gf.na_sequence_id = ns.na_sequence_id
                              AND ga.source_id = gf.source_id
                              AND ga.project_id = '@PROJECT_ID@' 
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                 UNION
                SELECT 'Toxoplasma gondii' AS name, 6 AS rank FROM dual
                 UNION
                SELECT 'Neospora caninum' AS name, 7 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
      <sql includeProjects="ToxoDB,CryptoDB,TriTrypDB,GiardiaDB,AmoebaDB,MicrosporidiaDB">
        <![CDATA[
           SELECT distinct ga.organism as term,ns.taxon_id as internal
           FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
           WHERE gf.na_sequence_id = ns.na_sequence_id
           AND ga.source_id = gf.source_id
           AND ga.project_id = '@PROJECT_ID@'
           ORDER BY organism asc
        ]]>
      </sql>
    </sqlQuery>


<!--===================================================================-->
    <!-- used in gene query for dumping    -->
    <!--===================================================================-->


    <sqlQuery name="nameWithGenesGFF" excludeProjects="EuPathDB">
      <column name="internal"/>
      <column name="term"/>
      <sql excludeProjects="ToxoDB,CryptoDB,TriTrypDB">
        <![CDATA[
          select geneOrgs.organism as term, geneOrgs.organism as internal
          from (select distinct organism from apidb.GeneAttributes) geneOrgs,
               (select 'Cryptosporidium parvum' AS name, 1 AS rank from dual
                 union
                select 'Cryptosporidium hominis' as name, 2 as rank from dual
                 union
                select 'Cryptosporidium muris' as name, 2 as rank from dual
                 union
                select 'Plasmodium falciparum' as name, 4 as rank from dual
                 union
                select 'Plasmodium vivax' as name, 4 as rank from dual
                 union
                select 'Plasmodium yoelii' as name, 5 as rank from dual
                 union
                select 'Toxoplasma gondii' as name, 6 as rank from dual
                 union
                select 'Neospora caninum' as name, 7 as rank from dual
                ) partial_ordering
          where geneOrgs.organism = partial_ordering.name(+)
          order by nvl(partial_ordering.rank, 9999), geneOrgs.organism
        ]]>
      </sql>
      <sql includeProjects="ToxoDB,CryptoDB,TriTrypDB">
        <![CDATA[
           SELECT distinct ga.organism as term,ns.taxon_id as internal
           FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
           WHERE gf.na_sequence_id = ns.na_sequence_id
           AND ga.source_id = gf.source_id
           AND ga.project_id = '@PROJECT_ID@'
           ORDER BY organism asc
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withGenesGFF" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

 <processQuery name="nameWithGenesGFF" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- with ESTs -->  
    <!--===================================================================-->

        <sqlQuery name="withESTs" excludeProjects="EuPathDB" isCacheable="true">
            <column name="internal"/>
            <column name="term"/>
             <sql>
                SELECT orgs.term, orgs.internal
                FROM (SELECT tn.name AS term, t.taxon_id AS internal
                      FROM sres.TaxonName tn, sres.taxon t
                      WHERE tn.name_class='scientific name'
                        AND t.taxon_id = tn.taxon_id
                        AND t.rank = 'species'
                        AND t.taxon_id in
                            (SELECT taxon_id
                             FROM sres.taxon
                             CONNECT BY taxon_id = prior parent_id
                             START WITH taxon_id IN
                             (SELECT ens.taxon_id
                              FROM dots.ExternalNaSequence ens, dots.Est e, apidb.EstAttributes ea
                              WHERE e.na_sequence_id = ens.na_sequence_id
                              AND ens.source_id = ea.source_id
                              AND ea.project_id = '@PROJECT_ID@'))) orgs,
                     (SELECT 'Plasmodium falciparum' AS term, 1 as rank from dual
                      UNION
                      SELECT 'Plasmodium vivax' AS term, 2 as rank from dual
                      UNION
                      SELECT 'Plasmodium yoelii' AS term, 3 as rank from dual) partial_order
                  WHERE orgs.term = partial_order.term(+)
                  ORDER BY partial_order.rank
            </sql>
        </sqlQuery>

<processQuery name="withESTs" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

        <sqlQuery name="withESTsAndGenes" excludeProjects="EuPathDB" isCacheable="true">
            <column name="internal"/>
            <column name="term"/>
             <sql>
                SELECT orgs.term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = orgs.internal) AS internal
                FROM (SELECT tn.name as term,
                        CASE WHEN tn.name like 'Giardia%' THEN
                         (SELECT taxon_id FROM sres.taxonName where name = 'Giardia lamblia ATCC 50803')
                          ELSE t.taxon_id END AS internal
                      FROM sres.TaxonName tn, sres.taxon t
                      WHERE tn.name_class='scientific name'
                        AND t.taxon_id = tn.taxon_id
                        AND t.rank = 'species'
                        AND t.taxon_id in
                            (SELECT taxon_id
                             FROM sres.taxon
                             CONNECT BY taxon_id = prior parent_id
                             START WITH taxon_id IN
                             (SELECT ens.taxon_id
                              FROM dots.ExternalNaSequence ens, dots.Est e, 
                                apidb.EstAttributes ea, apidb.EstAlignmentGeneSummary s
                              WHERE ea.source_id = s.accession
                              AND s.gene is not null
                              AND e.na_sequence_id = ens.na_sequence_id
                              AND ens.source_id = ea.source_id
                              AND ea.project_id = '@PROJECT_ID@'))) orgs,
                     (SELECT 'Plasmodium falciparum' AS term, 1 as rank from dual
                      UNION
                      SELECT 'Plasmodium vivax' AS term, 2 as rank from dual
                      UNION
                      SELECT 'Plasmodium yoelii' AS term, 3 as rank from dual) partial_order
                  WHERE orgs.term = partial_order.term(+)
                  ORDER BY partial_order.rank
            </sql>
        </sqlQuery>

    <processQuery name="withESTsAndGenes" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- with EC -->  
    <!--===================================================================-->

    <sqlQuery name="withEC" excludeProjects="MicrosporidiaDB,EuPathDB" isCacheable="true">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT nas.taxon_id
                              FROM dots.translatedaafeature taf, dots.AaSequenceEnzymeClass asec,
                              dots.transcript t, dots.genefeature gf, apidb.geneattributes ga, dots.NASEQUENCE nas
                              WHERE taf.aa_sequence_id = asec.aa_sequence_id
                              AND t.na_feature_id = taf.na_feature_id
                              AND gf.na_feature_id = t.parent_id
                              AND ga.source_id = gf.source_id
                              ANd ga.project_id = '@PROJECT_ID@'
                              AND nas.na_sequence_id = gf.na_sequence_id
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withEC" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- cp-tg

         Choices must be a subset of
         {Cryptosporidium parvum, Toxoplasma gondii}.

         This is enforced with an sqlParamValue namded "organism", which is
         set as a function of the project
                                                                           -->
    <!--===================================================================-->

    <sqlQuery name="cp-tg" excludeProjects="EuPathDB,TriTrypDB" isCacheable="true">

      <testParamValues excludeProjects="CryptoDB,ToxoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="CryptoDB">Cryptosporidium parvum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="ToxoDB">Toxoplasma gondii</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="GiardiaDB">Giardia lamblia</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="PlasmoDB,TrichDB,AmoebaDB,MicrosporidiaDB,InitDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT  organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="cp-tg" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- cp-tg-pb

         Choices must be a subset of
         {Cryptosporidium parvum, Toxoplasma gondii, Plasmodium berghei}.

         This is enforced with an sqlParamValue named "organism", which is
         set as a function of the project
                                                                           -->
    <!--===================================================================-->

    <sqlQuery name="cp-tg-pb" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="CryptoDB,ToxoDB,PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="CryptoDB">Cryptosporidium parvum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="ToxoDB">Toxoplasma gondii</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium berghei</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="GiardiaDB">Giardia lamblia</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="TrichDB,AmoebaDB,MicrosporidiaDB,InitDB">none at all</sqlParamValue>
      <sql includeProjects="CryptoDB,GiardiaDB,PlasmoDB,ToxoDB,TrichDB,AmoebaDB,MicrosporidiaDB,InitDB">
        <![CDATA[
          SELECT organisms.name  AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
<sql includeProjects="TriTrypDB">
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT CASE 
                        WHEN tn.name = 'Giardia intestinalis' THEN 'Giardia lamblia' 
                        else tn.name
                      END as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
                              WHERE gf.na_sequence_id = ns.na_sequence_id
                              AND ga.source_id = gf.source_id
                              AND ga.project_id = '@PROJECT_ID@' 
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                 UNION
                SELECT 'Toxoplasma gondii' AS name, 6 AS rank FROM dual
                 UNION
                SELECT 'Neospora caninum' AS name, 7 AS rank FROM dual
                 UNION
                SELECT 'Trypanosoma cruzi' AS name, 8 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>

    </sqlQuery>

    <processQuery name="cp-tg-pb" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


 <!--===================================================================-->
    <!-- cp-tg-pf-tv-gl

         Choices must be a subset of
         {Cryptosporidium parvum, Toxoplasma gondii, Plasmodium falciparum, Trichomonas vaginalis, Giardia lamblia }.

         This is enforced with an sqlParamValue named "organism", which is
         set as a function of the project
                                                                           -->
    <!--===================================================================-->

    <sqlQuery name="cp-tg-pf-tv-gl" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="CryptoDB,ToxoDB,PlasmoDB,TrichDB,GiardiaDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="CryptoDB">Cryptosporidium parvum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="ToxoDB">Toxoplasma gondii</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium berghei</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="TrichDB">Trichomonas vaginalis</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="GiardiaDB">Giardia lamblia</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="TriTrypDB,AmoebaDB,MicrosporidiaDB,InitDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT  organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="cp-tg-pf-tv-gl" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- withPlasmoGenes  -->  
    <!--===================================================================-->

    <sqlQuery name="withPlasmoGenes" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name like 'Plasmodium %'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf
                              WHERE gf.na_sequence_id = ns.na_sequence_id))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withPlasmoGenes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- TriTrypWithGenes  -->  
    <!--===================================================================-->

    <sqlQuery name="withTriTrypGenes" includeProjects="TriTrypDB" isCacheable="true">

      <testParamValues excludeProjects="TriTrypDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
         SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND (tn.name like 'Trypanosoma %'
                  OR tn.name like 'Leishmania %')
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf
                              WHERE gf.na_sequence_id = ns.na_sequence_id))) organisms
          ORDER BY  organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withTriTrypGenes" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


<!--====================================================================-->
<!-- withPlamsoTrichGiardiaGenes used in genes by secondary structure   , 
           now includes crypto  and tritryp

-->
<!--====================================================================-->


<sqlQuery name="withPlasmoTrichGiardiaGenes" includeProjects="PlasmoDB,GiardiaDB,TrichDB,CryptoDB,TriTrypDB" isCacheable="true">

      <testParamValues excludeProjects="GiardiaDB,TrichDB,PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT  case when organisms.name = 'Giardia intestinalis' then 'Giardia lamblia' else organisms.name end AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
                              WHERE gf.na_sequence_id = ns.na_sequence_id
                              AND ga.source_id = gf.source_id
                              AND ga.project_id = '@PROJECT_ID@' 
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="withPlasmoTrichGiardiaGenes" includeProjects="EuPathDB"
        processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


<!--===================================================================-->
    <!-- tg withPlasmoGenes   was being used in genes by isoelectric point 
              but it is not needed anymore , now we use withGenes
-->  
    <!--===================================================================-->

<!--  REMOVE IN A FEW WEEKS 

    <sqlQuery name="withPlasmoGenes-tg" excludeProjects="EuPathDB,CryptoDB" isCacheable="true">

      <testParamValues excludeProjects="ToxoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      
      <sql includeProjects="PlasmoDB">
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name like 'Plasmodium %'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf
                              WHERE gf.na_sequence_id = ns.na_sequence_id))) organisms,
               (SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>
      
      <sql includeProjects="ToxoDB">
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
                              WHERE gf.na_sequence_id = ns.na_sequence_id
                              AND ga.source_id = gf.source_id
                              AND ga.project_id = '@PROJECT_ID@' 
                              ))) organisms
          ORDER BY organisms.name
        ]]>
      </sql>


 <sql includeProjects="GiardiaDB,TrichDB,TriTrypDB">
        <![CDATA[

 SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name as name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND t.taxon_id IN
                       (SELECT taxon_id
                        FROM sres.taxon
                        CONNECT BY taxon_id = prior parent_id
                        START WITH taxon_id IN
                             (SELECT ns.taxon_id
                              FROM dots.NaSequence ns, dots.GeneFeature gf,apidb.geneattributes ga
                              WHERE gf.na_sequence_id = ns.na_sequence_id
                              AND ga.source_id = gf.source_id
                              AND ga.project_id = '@PROJECT_ID@' 
                              ))) organisms,
               (SELECT 'Cryptosporidium parvum' AS name, 1 AS rank FROM dual
                 UNION
                SELECT 'Cryptosporidium hominis' AS name, 2 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium falciparum' AS name, 3 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium vivax' AS name, 4 AS rank FROM dual
                 UNION
                SELECT 'Plasmodium yoelii' AS name, 5 AS rank FROM dual
                 UNION
                SELECT 'Toxoplasma gondii' AS name, 6 AS rank FROM dual
                 UNION
                SELECT 'Neospora caninum' AS name, 7 AS rank FROM dual
                ) partial_ordering
          WHERE organisms.name = partial_ordering.name(+)
          ORDER BY partial_ordering.rank, organisms.name
        ]]>
      </sql>

    </sqlQuery>

    <processQuery name="withPlasmoGenes-tg" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

-->

<!--===================================================================-->
    <!-- tg pf gl   for genes by sage tags
 we should use organismVQ.withSageTags instead but chaning the parameter name makes the query incompatible
-->
    <!--===================================================================-->

    <sqlQuery name="tg-pf-gl" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="GiardiaDB,ToxoDB,PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium falciparum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="ToxoDB">Toxoplasma gondii</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="GiardiaDB">Giardia lamblia</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,InitDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT  organisms.name  AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="tg-pf-gl" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


    <!--===================================================================-->
    <!-- tg pf , used in genes by metabolic pathway and GenesByNonnuclearGenomicRegion, 
         we should instead generate an organismVQ.withPlasmofToxoGenes 
         we do not change because we would generate incompatible queries  (only in porta!) 
-->  
    <!--===================================================================-->

    <sqlQuery name="tg-pf" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="ToxoDB,PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium falciparum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="ToxoDB">Toxoplasma gondii</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB,GiardiaDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,InitDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="tg-pf" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- pf -->  
    <!--===================================================================-->

    <sqlQuery name="pf" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium falciparum</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB,GiardiaDB,ToxoDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,InitDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="pf" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>

    <!--===================================================================-->
    <!-- pb -->  
    <!--===================================================================-->

    <sqlQuery name="pb" excludeProjects="EuPathDB" isCacheable="true">

      <testParamValues excludeProjects="PlasmoDB" minRows="0"/>

      <column name="internal"/>
      <column name="term"/>
      <sqlParamValue name="organism" includeProjects="PlasmoDB">Plasmodium berghei</sqlParamValue>
      <sqlParamValue name="organism" includeProjects="CryptoDB,GiardiaDB,ToxoDB,TrichDB,TriTrypDB,AmoebaDB,MicrosporidiaDB,InitDB">none at all</sqlParamValue>
      <sql>
        <![CDATA[
          SELECT organisms.name AS term,
                 (SELECT apidb.tab_to_string(CAST(COLLECT(trim(to_char(taxon_id)))
                                             AS apidb.varchartab), ', ')
                         AS internal
                  FROM sres.taxon
                  CONNECT BY prior taxon_id = parent_id
                  START WITH taxon_id = organisms.internal_taxon) AS internal
          FROM (SELECT tn.name, t.taxon_id AS internal_taxon
                FROM sres.TaxonName tn, sres.taxon t
                WHERE tn.name_class='scientific name'
                  AND t.taxon_id = tn.taxon_id
                  AND t.rank = 'species'
                  AND tn.name = '&&organism&&') organisms
          ORDER BY organisms.name
        ]]>
      </sql>
    </sqlQuery>

    <processQuery name="pb" processName="org.apidb.apicomplexa.wsfplugin.apifed.ApiFedPlugin" includeProjects="EuPathDB">
      <wsColumn name="internal" width="32" wsName="internal"/>
      <wsColumn name="term" width="32" wsName="term"/>
    </processQuery>


    <!--===================================================================-->
    <!-- strain flatvocab query -->  
    <!--===================================================================-->

    <sqlQuery name="withStrains" includeProjects="ToxoDB">
      <column name="internal"/>
      <column name="term"/>
      <sql>
        <![CDATA[
          SELECT distinct organism AS term, ncbi_tax_id AS internal
          FROM apidb.GeneAttributes
          ORDER BY organism asc
        ]]>
      </sql>
    </sqlQuery>

  </querySet>

</wdkModel>
