<project name="ApiCommonModel" default="Installation" basedir=".">

  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Dependencies  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <import file="${projectsDir}/WDK/build.xml" />
  <import file="${projectsDir}/CBIL/build.xml" />
  <import file="${projectsDir}/ReFlow/build.xml" />
  <import file="${projectsDir}/EbrcModelCommon/build.xml" />


  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Installation  oooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="ApiCommonModel-Installation" depends="CBIL-Installation,
                                            ReFlow-Installation,
                                            WDK-Installation,
                                            EbrcModelCommon-Installation,
                                            ApiCommonModel-MavenInstallation,
                                            ApiCommonModel/DatasetPresenter-Installation,
                                            ApiCommonModel/Model-Installation">


    <ant target="defaultProjectInstall">
      <property name="project" value="ApiCommonModel" />
    </ant>

  </target>

  <target name="ApiCommonModel-MavenInstallation">
    <ant target="mavenBuildProject">
      <property name="project" value="ApiCommonModel" />
    </ant>
    <property name="alreadyBuilt" value="true" />
  </target>


  <!-- oooooooooooooooooo  Installation Postprocess  ooooooooooooooooooooo -->

  <target name="ApiCommonModel-Installation-postprocess">
    <echo message="Postprocessing the ApiCommonModel installation" />

    <replace dir="${targetDir}/bin"
             propertyFile="${targetDir}/config/replacements.prop">
      <include name="**/*" />
      <replacefilter token="@perl@" property="perl" />
    </replace>

  </target>


  <!-- ooooooooooooooooooooooo  Install Components  ooooooooooooooooooooooo -->

  <target name="ApiCommonModel/DatasetPresenter-Installation"
          depends="ProjectTree">
    <ant target="defaultComponentInstall">
      <property name="project" value="ApiCommonModel" />
      <property name="component" value="DatasetPresenter" />
    </ant>
  </target>

  <target name="ApiCommonModel/Model-Installation" depends="ProjectTree">

    <ant target="defaultComponentInstall">
      <property name="project" value="ApiCommonModel" />
      <property name="component" value="Model" />
    </ant>

  </target>

  <!-- ooooooooooooooooooTemporary till TRICH is in Workflow  ooooooooooooooooooooooooo -->

  <!--
  <target name="ApiCommonModel/Datasources-Installation" depends="ProjectTree">
      <property name="loadresources" value="${targetDir}/lib/xml"/>
      <property name="cache" value="${targetDir}/config/.cache/datasources"/>
      <property name="datasources" value="${targetDir}/lib/xml"/>
      <mkdir dir="${cache}"/>
      <mkdir dir="${datasources}"/>
      <copy todir="${loadresources}">
        <fileset dir="${projectsDir}/ApiCommonModel/Model/lib/xml">
          <include name="*Resources.xml"/>
        </fileset>
      </copy>
      <echo message="Running updateResourcesWithPubmed"/>
      <apply executable="${targetDir}/bin/updateResourcesWithPubmed"
             dest="${cache}"
             verbose="true">
          <srcfile/>
          <targetfile/>
          <fileset dir="${loadresources}">
            <include name="*trichResources.xml"/>
          </fileset>
          <mapper type="glob" from="*.xml" to="*-pubmed.xml"/>
      </apply>
      <copy todir="${datasources}">
        <fileset dir="${cache}">
          <include name="*-pubmed.xml"/>
        </fileset>
      </copy>

      <ant target="buildInfo">
        <property name="component" value="updateResourcesWithPubmed"/>
      </ant>

    </target>
  -->


  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  Distributable  ooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="ApiCommonModel-Distributable" depends="ProjectTree">

    <copy todir="${targetDir}">
      <fileset dir="${projectsDir}">
        <exclude name="**/CVS/*" />
      </fileset>
    </copy>
  </target>


  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooo  ProjectTree  ooooooooooooooooooooooooooo -->
  <!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <target name="ProjectTree" if="${checkout}">
    <ant target="projectCheckOut" />
  </target>

</project>
